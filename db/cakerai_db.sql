-- phpMyAdmin SQL Dump
-- version 4.8.5
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: May 15, 2021 at 06:19 AM
-- Server version: 10.1.38-MariaDB
-- PHP Version: 7.3.4

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `cakerai_db`
--

-- --------------------------------------------------------

--
-- Table structure for table `errorlog`
--

CREATE TABLE `errorlog` (
  `_id` int(11) NOT NULL,
  `timestamp` varchar(20) DEFAULT NULL,
  `api_route` varchar(150) DEFAULT NULL,
  `error_status` varchar(10) DEFAULT NULL,
  `error` text
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `feedback`
--

CREATE TABLE `feedback` (
  `_id` int(11) NOT NULL,
  `userId` varchar(20) NOT NULL,
  `description` text NOT NULL,
  `timestamp` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `generated_monthly_summary`
--

CREATE TABLE `generated_monthly_summary` (
  `_id` int(11) NOT NULL,
  `userId` varchar(20) NOT NULL,
  `salesReportId` int(11) NOT NULL,
  `month` varchar(20) NOT NULL,
  `predicted_total_sales` float DEFAULT NULL,
  `predicted_sales` text,
  `ingredients_reportID` int(11) DEFAULT NULL,
  `timestamp` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `generated_monthly_summary`
--

INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(2, 'U000010', 19, '1619499952838', NULL, NULL, NULL, '0000-00-00'),
(3, 'U000010', 19, '1619500107102', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(4, 'U000010', 19, '1619511286979', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(5, 'U000010', 19, '1619514167368', NULL, NULL, NULL, '0000-00-00'),
(6, 'U000010', 19, '1619515612389', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(7, 'U000010', 19, '1619515662146', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(8, 'U000010', 19, '1619519771131', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(9, 'U000010', 19, '1619519827546', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(10, 'U000010', 19, '1619584336586', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(11, 'U000010', 19, '1619584450696', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(12, 'U000010', 19, '1619585094553', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(13, 'U000010', 19, '1619587256653', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(14, 'U000010', 19, '1619587348132', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(15, 'U000010', 19, '1619589136570', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(16, 'U000010', 19, '1619589988951', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(17, 'U000010', 19, '1619590065657', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(18, 'U000010', 19, '1619590131846', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00'),
(19, 'U000010', 19, '1619590241847', NULL, '[120.29494149983273,120.37472258869468,120.66132833475721,120.93829916132651]', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(20, 'U000010', 20, '1619597050915', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>TypeError\n          at /app/getPredictionEduraca</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n  \n  <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = \'none\';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll(\'table.vars\'));\n      hideAll(document.querySelectorAll(\'ol.pre-context\'));\n      hideAll(document.querySelectorAll(\'ol.post-context\'));\n      hideAll(document.querySelectorAll(\'div.pastebin\'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == \'none\' ? \'block\': \'none\';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle(\'v\' + id);\n      var s = link.getElementsByTagName(\'span\')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle(\'browserTraceback\', \'pastebinTraceback\');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>TypeError\n       at /app/getPredictionEduraca</h1>\n  <pre class=\"exception_value\">Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>GET</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://localhost:8000/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>3.1.7</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>TypeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td><span class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\indexes\\base.py</span>, line 372, in __new__</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>C:\\Users\\chana\\.conda\\envs\\mytensor\\python.exe</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.8.5</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#x27;D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\python38.zip&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\DLLs&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib\\\\site-packages&#x27;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Wed, 28 Apr 2021 08:04:07 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py</code>, line 47, in inner\n\n          \n            <div class=\"context\" id=\"c3119604826496\">\n              \n                <ol start=\"40\" class=\"pre-context\" id=\"pre3119604826496\">\n                \n                  <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre>            return response</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre>        return inner</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre>    else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre>        @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre>        def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"47\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre>                response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'48\' class=\"post-context\" id=\"post3119604826496\">\n                  \n                  <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre>            except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre>            return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre>        return inner</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826496\', \'post3119604826496\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119604826496\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119604826496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x000002D66CFED640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py</code>, line 181, in _get_response\n\n          \n            <div class=\"context\" id=\"c3119604826176\">\n              \n                <ol start=\"174\" class=\"pre-context\" id=\"pre3119604826176\">\n                \n                  <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre>        if response is None:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"181\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'182\' class=\"post-context\" id=\"post3119604826176\">\n                  \n                  <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre>            except Exception as e:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre>                if response is None:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre>                    raise</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826176\', \'post3119604826176\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119604826176\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119604826176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000002D64725ACA0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>middleware_method</td>\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x000002D647400BE0&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x000002D66CFED640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>wrapped_callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000002D64725ACA0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n\n          \n            <div class=\"context\" id=\"c3119604826816\">\n              \n                <ol start=\"47\" class=\"pre-context\" id=\"pre3119604826816\">\n                \n                  <li onclick=\"toggle(\'pre3119604826816\', \'post3119604826816\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826816\', \'post3119604826816\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826816\', \'post3119604826816\')\"><pre>def csrf_exempt(view_func):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826816\', \'post3119604826816\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826816\', \'post3119604826816\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826816\', \'post3119604826816\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826816\', \'post3119604826816\')\"><pre>    def wrapped_view(*args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"54\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119604826816\', \'post3119604826816\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'55\' class=\"post-context\" id=\"post3119604826816\">\n                  \n                  <li onclick=\"toggle(\'pre3119604826816\', \'post3119604826816\')\"><pre>    wrapped_view.csrf_exempt = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826816\', \'post3119604826816\')\"><pre>    return wraps(view_func)(wrapped_view)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119604826816\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119604826816\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>view_func</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000002D64725AC10&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py</code>, line 70, in view\n\n          \n            <div class=\"context\" id=\"c3119604827264\">\n              \n                <ol start=\"63\" class=\"pre-context\" id=\"pre3119604827264\">\n                \n                  <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre>            self = cls(**initkwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre>                raise AttributeError(</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre>                )</pre></li>\n                \n                </ol>\n              \n              <ol start=\"70\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'71\' class=\"post-context\" id=\"post3119604827264\">\n                  \n                  <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre>        view.view_class = cls</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre>        # take name and docstring from class</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre>        update_wrapper(view, cls, updated=())</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827264\', \'post3119604827264\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119604827264\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119604827264\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>cls</td>\n                    <td class=\"code\"><pre>&lt;class &#x27;predictApp.views.WrappedAPIView&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>initkwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002D655631D00&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 509, in dispatch\n\n          \n            <div class=\"context\" id=\"c3119604828800\">\n              \n                <ol start=\"502\" class=\"pre-context\" id=\"pre3119604828800\">\n                \n                  <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre>        except Exception as exc:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"509\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'510\' class=\"post-context\" id=\"post3119604828800\">\n                  \n                  <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre>        return self.response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604828800\', \'post3119604828800\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119604828800\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119604828800\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x000002D655631D00&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002D655631D00&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 469, in handle_exception\n\n          \n            <div class=\"context\" id=\"c3119604827776\">\n              \n                <ol start=\"462\" class=\"pre-context\" id=\"pre3119604827776\">\n                \n                  <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre>        response = exception_handler(exc, context)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre>        if response is None:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"469\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'470\' class=\"post-context\" id=\"post3119604827776\">\n                  \n                  <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre>        response.exception = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827776\', \'post3119604827776\')\"><pre>        if settings.DEBUG:</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119604827776\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119604827776\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>context</td>\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\n &#x27;kwargs&#x27;: {},\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;,\n &#x27;view&#x27;: &lt;predictApp.views.WrappedAPIView object at 0x000002D655631D00&gt;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exception_handler</td>\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x000002D66E41BA60&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002D655631D00&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 480, in raise_uncaught_exception\n\n          \n            <div class=\"context\" id=\"c3119604830016\">\n              \n                <ol start=\"473\" class=\"pre-context\" id=\"pre3119604830016\">\n                \n                  <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre>        if settings.DEBUG:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre>            request = self.request</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"480\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre>        raise exc</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'481\' class=\"post-context\" id=\"post3119604830016\">\n                  \n                  <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre>    # be overridden.</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604830016\', \'post3119604830016\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119604830016\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119604830016\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>renderer_format</td>\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002D655631D00&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>use_plaintext_traceback</td>\n                    <td class=\"code\"><pre>True</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 506, in dispatch\n\n          \n            <div class=\"context\" id=\"c3119604828992\">\n              \n                <ol start=\"499\" class=\"pre-context\" id=\"pre3119604828992\">\n                \n                  <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre>            # Get the appropriate handler method</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"506\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'507\' class=\"post-context\" id=\"post3119604828992\">\n                  \n                  <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre>            response = self.handle_exception(exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604828992\', \'post3119604828992\')\"><pre>        return self.response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119604828992\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119604828992\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x000002D655631D00&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002D655631D00&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py</code>, line 50, in handler\n\n          \n            <div class=\"context\" id=\"c3119604827584\">\n              \n                <ol start=\"43\" class=\"pre-context\" id=\"pre3119604827584\">\n                \n                  <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre>        assert isinstance(http_method_names, (list, tuple)), \\</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre>            &#x27;@api_view expected a list of strings, received %s&#x27; % type(http_method_names).__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre>        allowed_methods = set(http_method_names) | {&#x27;options&#x27;}</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre>        WrappedAPIView.http_method_names = [method.lower() for method in allowed_methods]</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre>        def handler(self, *args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"50\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre>            return func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'51\' class=\"post-context\" id=\"post3119604827584\">\n                  \n                  <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre>        for method in http_method_names:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre>            setattr(WrappedAPIView, method.lower(), handler)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre>        WrappedAPIView.__name__ = func.__name__</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604827584\', \'post3119604827584\')\"><pre>        WrappedAPIView.__module__ = func.__module__</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119604827584\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119604827584\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;rest_framework.request.Request: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>func</td>\n                    <td class=\"code\"><pre>&lt;function getPredictionEduraca at 0x000002D64725AA60&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002D655631D00&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py</code>, line 38, in getPredictionEduraca\n\n          \n            <div class=\"context\" id=\"c3119604829120\">\n              \n                <ol start=\"31\" class=\"pre-context\" id=\"pre3119604829120\">\n                \n                  <li onclick=\"toggle(\'pre3119604829120\', \'post3119604829120\')\"><pre>    print(query_params)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604829120\', \'post3119604829120\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604829120\', \'post3119604829120\')\"><pre>    if request.method == &#x27;GET&#x27;:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604829120\', \'post3119604829120\')\"><pre>        fileURL = query_params.get(&#x27;fileURL&#x27;) if query_params.get(&#x27;fileURL&#x27;) else &#x27;&#x27;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604829120\', \'post3119604829120\')\"><pre>        needPrediction = query_params.get(&#x27;needPrediction&#x27;) if query_params.get(&#x27;needPrediction&#x27;) else &#x27;&#x27;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604829120\', \'post3119604829120\')\"><pre>        months = int(query_params.get(&#x27;monthsCount&#x27;)) if query_params.get(&#x27;monthsCount&#x27;) else 1</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604829120\', \'post3119604829120\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"38\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119604829120\', \'post3119604829120\')\"><pre>        res = getPredict2.getPredict(fileURL,needPrediction,months)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'39\' class=\"post-context\" id=\"post3119604829120\">\n                  \n                  <li onclick=\"toggle(\'pre3119604829120\', \'post3119604829120\')\"><pre>        return Response(res)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119604829120\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119604829120\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;butter cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>query_params</td>\n                    <td class=\"code\"><pre>{&#x27;email&#x27;: &#x27;chanakabalasuriya123@gmail.com&#x27;,\n &#x27;fileURL&#x27;: &#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;,\n &#x27;headers&#x27;: &#x27;[{&quot;name&quot;:&quot;Month&quot;,&quot;mappedProductID&quot;:&quot;Month&quot;},{&quot;name&quot;:&quot;chocolate &#x27;\n            &#x27;cake&quot;,&quot;mappedProductID&quot;:1},{&quot;name&quot;:&quot;butter &#x27;\n            &#x27;cake&quot;,&quot;mappedProductID&quot;:2}]&#x27;,\n &#x27;needPrediction&#x27;: &#x27;butter cake&#x27;,\n &#x27;salesReportId&#x27;: &#x27;20&#x27;,\n &#x27;userId&#x27;: &#x27;U000010&#x27;,\n &#x27;userName&#x27;: &#x27;chanaka&#x27;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\services\\getPredict2.py</code>, line 121, in getPredict\n\n          \n            <div class=\"context\" id=\"c3119604826368\">\n              \n                <ol start=\"114\" class=\"pre-context\" id=\"pre3119604826368\">\n                \n                  <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre>    datasetLogDiffShifting = indexedDataset_logScale - indexedDataset_logScale.shift()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre>    # plt.plot(datasetLogDiffShifting)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre>    datasetLogDiffShifting.dropna(inplace=True)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre>    # test_stationarity(datasetLogDiffShifting, needPrediction)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"121\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre>    decomposition = seasonal_decompose(indexedDataset_logScale)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'122\' class=\"post-context\" id=\"post3119604826368\">\n                  \n                  <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre>    trend = decomposition.trend</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre>    seasonal = decomposition.seasonal</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre>    residual = decomposition.resid</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119604826368\', \'post3119604826368\')\"><pre>    # plt.subplot(411)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119604826368\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119604826368\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>         Month  chocolate cake  butter cake\n0   2009-01-01            99.4        110.4\n1   2009-02-01            99.8         99.8\n2   2009-03-01           100.2        100.2\n3   2009-04-01           100.2        100.2\n4   2009-05-01            99.7         99.7\n..         ...             ...          ...\n136 2020-05-01           121.8        121.8\n137 2020-06-01           119.9        119.9\n138 2020-07-01           120.8        120.8\n139 2020-08-01           120.2        120.2\n140 2020-09-01           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogDiffShifting</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-02-01        0.004016    -0.100942\n2009-03-01        0.004000     0.004000\n2009-04-01        0.000000     0.000000\n2009-05-01       -0.005003    -0.005003\n2009-06-01        0.004004     0.004004\n...                    ...          ...\n2020-05-01        0.009072     0.009072\n2020-06-01       -0.015722    -0.015722\n2020-07-01        0.007478     0.007478\n2020-08-01       -0.004979    -0.004979\n2020-09-01        0.000832     0.000832\n\n[140 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-12-01        0.000086    -0.008660\n2010-01-01       -0.000332    -0.000332\n2010-02-01       -0.000415    -0.000415\n2010-03-01        0.001668     0.001668\n2010-04-01       -0.001919    -0.001919\n...                    ...          ...\n2020-05-01        0.011780     0.011780\n2020-06-01       -0.004290    -0.004290\n2020-07-01        0.002773     0.002773\n2020-08-01       -0.002553    -0.002553\n2020-09-01       -0.002069    -0.002069\n\n[130 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingExponentialDecayAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        0.000000     0.000000\n2009-02-01        0.001950    -0.049014\n2009-03-01        0.003851    -0.029135\n2009-04-01        0.002803    -0.021208\n2009-05-01       -0.001707    -0.020346\n...                    ...          ...\n2020-05-01        0.040494     0.040492\n2020-06-01        0.023381     0.023379\n2020-07-01        0.029127     0.029125\n2020-08-01        0.022792     0.022790\n2020-09-01        0.022297     0.022295\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dfoutput</td>\n                    <td class=\"code\"><pre>Test statics                     -0.553577\np-values                          0.881131\n#Lags Used                        9.000000\n Number of Observations used    131.000000\ndtype: float64</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dftest</td>\n                    <td class=\"code\"><pre>(-0.5535771825909882,\n 0.8811305125066138,\n 9,\n 131,\n {&#x27;1%&#x27;: -3.481281802271349,\n  &#x27;10%&#x27;: -2.5786771965503177,\n  &#x27;5%&#x27;: -2.883867891664528},\n 278.29564832008947)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exponentialDecayWeightAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.601218     4.652182\n2009-03-01        4.603317     4.636303\n2009-04-01        4.604365     4.628376\n2009-05-01        4.603873     4.622512\n...                    ...          ...\n2020-05-01        4.761886     4.761888\n2020-06-01        4.763277     4.763279\n2020-07-01        4.765010     4.765012\n2020-08-01        4.766365     4.766367\n2020-09-01        4.767692     4.767693\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01            99.4        110.4\n2009-02-01            99.8         99.8\n2009-03-01           100.2        100.2\n2009-04-01           100.2        100.2\n2009-05-01            99.7         99.7\n...                    ...          ...\n2020-05-01           121.8        121.8\n2020-06-01           119.9        119.9\n2020-07-01           120.8        120.8\n2020-08-01           120.2        120.2\n2020-09-01           120.3        120.3\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset_logScale</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.603168     4.603168\n2009-03-01        4.607168     4.607168\n2009-04-01        4.607168     4.607168\n2009-05-01        4.602166     4.602166\n...                    ...          ...\n2020-05-01        4.802380     4.802380\n2020-06-01        4.786658     4.786658\n2020-07-01        4.794136     4.794136\n2020-08-01        4.789157     4.789157\n2020-09-01        4.789989     4.789989\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>mean</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x000002D64CA78640&gt;,\n &lt;matplotlib.lines.Line2D object at 0x000002D64CA78A60&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        4.790600     4.790600\n2020-06-01        4.790948     4.790948\n2020-07-01        4.791363     4.791363\n2020-08-01        4.791710     4.791710\n2020-09-01        4.792058     4.792058\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingStd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(21, 'U000010', 20, '1619597703707', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>TypeError\n          at /app/getPredictionEduraca</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n  \n  <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = \'none\';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll(\'table.vars\'));\n      hideAll(document.querySelectorAll(\'ol.pre-context\'));\n      hideAll(document.querySelectorAll(\'ol.post-context\'));\n      hideAll(document.querySelectorAll(\'div.pastebin\'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == \'none\' ? \'block\': \'none\';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle(\'v\' + id);\n      var s = link.getElementsByTagName(\'span\')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle(\'browserTraceback\', \'pastebinTraceback\');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>TypeError\n       at /app/getPredictionEduraca</h1>\n  <pre class=\"exception_value\">Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>GET</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://localhost:8000/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>3.1.7</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>TypeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td><span class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\indexes\\base.py</span>, line 372, in __new__</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>C:\\Users\\chana\\.conda\\envs\\mytensor\\python.exe</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.8.5</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#x27;D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\python38.zip&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\DLLs&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib\\\\site-packages&#x27;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Wed, 28 Apr 2021 08:15:00 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py</code>, line 47, in inner\n\n          \n            <div class=\"context\" id=\"c3119348840704\">\n              \n                <ol start=\"40\" class=\"pre-context\" id=\"pre3119348840704\">\n                \n                  <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre>            return response</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre>        return inner</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre>    else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre>        @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre>        def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"47\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre>                response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'48\' class=\"post-context\" id=\"post3119348840704\">\n                  \n                  <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre>            except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre>            return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre>        return inner</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840704\', \'post3119348840704\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119348840704\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119348840704\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x000002D66CFED640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py</code>, line 181, in _get_response\n\n          \n            <div class=\"context\" id=\"c3119348839808\">\n              \n                <ol start=\"174\" class=\"pre-context\" id=\"pre3119348839808\">\n                \n                  <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre>        if response is None:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"181\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'182\' class=\"post-context\" id=\"post3119348839808\">\n                  \n                  <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre>            except Exception as e:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre>                if response is None:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre>                    raise</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348839808\', \'post3119348839808\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119348839808\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119348839808\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000002D64725ACA0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>middleware_method</td>\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x000002D647400BE0&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x000002D66CFED640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>wrapped_callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000002D64725ACA0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n\n          \n            <div class=\"context\" id=\"c3119348840192\">\n              \n                <ol start=\"47\" class=\"pre-context\" id=\"pre3119348840192\">\n                \n                  <li onclick=\"toggle(\'pre3119348840192\', \'post3119348840192\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840192\', \'post3119348840192\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840192\', \'post3119348840192\')\"><pre>def csrf_exempt(view_func):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840192\', \'post3119348840192\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840192\', \'post3119348840192\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840192\', \'post3119348840192\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840192\', \'post3119348840192\')\"><pre>    def wrapped_view(*args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"54\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119348840192\', \'post3119348840192\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'55\' class=\"post-context\" id=\"post3119348840192\">\n                  \n                  <li onclick=\"toggle(\'pre3119348840192\', \'post3119348840192\')\"><pre>    wrapped_view.csrf_exempt = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840192\', \'post3119348840192\')\"><pre>    return wraps(view_func)(wrapped_view)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119348840192\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119348840192\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>view_func</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000002D64725AC10&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py</code>, line 70, in view\n\n          \n            <div class=\"context\" id=\"c3119348840256\">\n              \n                <ol start=\"63\" class=\"pre-context\" id=\"pre3119348840256\">\n                \n                  <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre>            self = cls(**initkwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre>                raise AttributeError(</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre>                )</pre></li>\n                \n                </ol>\n              \n              <ol start=\"70\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'71\' class=\"post-context\" id=\"post3119348840256\">\n                  \n                  <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre>        view.view_class = cls</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre>        # take name and docstring from class</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre>        update_wrapper(view, cls, updated=())</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840256\', \'post3119348840256\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119348840256\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119348840256\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>cls</td>\n                    <td class=\"code\"><pre>&lt;class &#x27;predictApp.views.WrappedAPIView&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>initkwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002D647A494F0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 509, in dispatch\n\n          \n            <div class=\"context\" id=\"c3119348839936\">\n              \n                <ol start=\"502\" class=\"pre-context\" id=\"pre3119348839936\">\n                \n                  <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre>        except Exception as exc:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"509\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'510\' class=\"post-context\" id=\"post3119348839936\">\n                  \n                  <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre>        return self.response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348839936\', \'post3119348839936\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119348839936\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119348839936\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x000002D647A494F0&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002D647A494F0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 469, in handle_exception\n\n          \n            <div class=\"context\" id=\"c3119348840128\">\n              \n                <ol start=\"462\" class=\"pre-context\" id=\"pre3119348840128\">\n                \n                  <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre>        response = exception_handler(exc, context)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre>        if response is None:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"469\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'470\' class=\"post-context\" id=\"post3119348840128\">\n                  \n                  <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre>        response.exception = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840128\', \'post3119348840128\')\"><pre>        if settings.DEBUG:</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119348840128\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119348840128\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>context</td>\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\n &#x27;kwargs&#x27;: {},\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;,\n &#x27;view&#x27;: &lt;predictApp.views.WrappedAPIView object at 0x000002D647A494F0&gt;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exception_handler</td>\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x000002D66E41BA60&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002D647A494F0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 480, in raise_uncaught_exception\n\n          \n            <div class=\"context\" id=\"c3119348840384\">\n              \n                <ol start=\"473\" class=\"pre-context\" id=\"pre3119348840384\">\n                \n                  <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre>        if settings.DEBUG:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre>            request = self.request</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"480\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre>        raise exc</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'481\' class=\"post-context\" id=\"post3119348840384\">\n                  \n                  <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre>    # be overridden.</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840384\', \'post3119348840384\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119348840384\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119348840384\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>renderer_format</td>\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002D647A494F0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>use_plaintext_traceback</td>\n                    <td class=\"code\"><pre>True</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 506, in dispatch\n\n          \n            <div class=\"context\" id=\"c3119348840064\">\n              \n                <ol start=\"499\" class=\"pre-context\" id=\"pre3119348840064\">\n                \n                  <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre>            # Get the appropriate handler method</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"506\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'507\' class=\"post-context\" id=\"post3119348840064\">\n                  \n                  <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre>            response = self.handle_exception(exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840064\', \'post3119348840064\')\"><pre>        return self.response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119348840064\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119348840064\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x000002D647A494F0&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002D647A494F0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py</code>, line 50, in handler\n\n          \n            <div class=\"context\" id=\"c3119348840000\">\n              \n                <ol start=\"43\" class=\"pre-context\" id=\"pre3119348840000\">\n                \n                  <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre>        assert isinstance(http_method_names, (list, tuple)), \\</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre>            &#x27;@api_view expected a list of strings, received %s&#x27; % type(http_method_names).__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre>        allowed_methods = set(http_method_names) | {&#x27;options&#x27;}</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre>        WrappedAPIView.http_method_names = [method.lower() for method in allowed_methods]</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre>        def handler(self, *args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"50\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre>            return func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'51\' class=\"post-context\" id=\"post3119348840000\">\n                  \n                  <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre>        for method in http_method_names:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre>            setattr(WrappedAPIView, method.lower(), handler)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre>        WrappedAPIView.__name__ = func.__name__</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348840000\', \'post3119348840000\')\"><pre>        WrappedAPIView.__module__ = func.__module__</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119348840000\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119348840000\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;rest_framework.request.Request: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>func</td>\n                    <td class=\"code\"><pre>&lt;function getPredictionEduraca at 0x000002D64725AA60&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002D647A494F0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py</code>, line 38, in getPredictionEduraca\n\n          \n            <div class=\"context\" id=\"c3119348839872\">\n              \n                <ol start=\"31\" class=\"pre-context\" id=\"pre3119348839872\">\n                \n                  <li onclick=\"toggle(\'pre3119348839872\', \'post3119348839872\')\"><pre>    print(query_params)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839872\', \'post3119348839872\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839872\', \'post3119348839872\')\"><pre>    if request.method == &#x27;GET&#x27;:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839872\', \'post3119348839872\')\"><pre>        fileURL = query_params.get(&#x27;fileURL&#x27;) if query_params.get(&#x27;fileURL&#x27;) else &#x27;&#x27;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839872\', \'post3119348839872\')\"><pre>        needPrediction = query_params.get(&#x27;needPrediction&#x27;) if query_params.get(&#x27;needPrediction&#x27;) else &#x27;&#x27;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839872\', \'post3119348839872\')\"><pre>        months = int(query_params.get(&#x27;monthsCount&#x27;)) if query_params.get(&#x27;monthsCount&#x27;) else 1</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348839872\', \'post3119348839872\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"38\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119348839872\', \'post3119348839872\')\"><pre>        res = getPredict2.getPredict(fileURL,needPrediction,months)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'39\' class=\"post-context\" id=\"post3119348839872\">\n                  \n                  <li onclick=\"toggle(\'pre3119348839872\', \'post3119348839872\')\"><pre>        return Response(res)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119348839872\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119348839872\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;butter cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>query_params</td>\n                    <td class=\"code\"><pre>{&#x27;email&#x27;: &#x27;chanakabalasuriya123@gmail.com&#x27;,\n &#x27;fileURL&#x27;: &#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;,\n &#x27;headers&#x27;: &#x27;[{&quot;name&quot;:&quot;Month&quot;,&quot;mappedProductID&quot;:&quot;Month&quot;},{&quot;name&quot;:&quot;chocolate &#x27;\n            &#x27;cake&quot;,&quot;mappedProductID&quot;:1},{&quot;name&quot;:&quot;butter &#x27;\n            &#x27;cake&quot;,&quot;mappedProductID&quot;:2}]&#x27;,\n &#x27;needPrediction&#x27;: &#x27;butter cake&#x27;,\n &#x27;salesReportId&#x27;: &#x27;20&#x27;,\n &#x27;userId&#x27;: &#x27;U000010&#x27;,\n &#x27;userName&#x27;: &#x27;chanaka&#x27;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getPredictionEduraca?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\services\\getPredict2.py</code>, line 121, in getPredict\n\n          \n            <div class=\"context\" id=\"c3119348842176\">\n              \n                <ol start=\"114\" class=\"pre-context\" id=\"pre3119348842176\">\n                \n                  <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre>    datasetLogDiffShifting = indexedDataset_logScale - indexedDataset_logScale.shift()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre>    # plt.plot(datasetLogDiffShifting)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre>    datasetLogDiffShifting.dropna(inplace=True)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre>    # test_stationarity(datasetLogDiffShifting, needPrediction)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"121\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre>    decomposition = seasonal_decompose(indexedDataset_logScale)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'122\' class=\"post-context\" id=\"post3119348842176\">\n                  \n                  <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre>    trend = decomposition.trend</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre>    seasonal = decomposition.seasonal</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre>    residual = decomposition.resid</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre3119348842176\', \'post3119348842176\')\"><pre>    # plt.subplot(411)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'3119348842176\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v3119348842176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>         Month  chocolate cake  butter cake\n0   2009-01-01            99.4        110.4\n1   2009-02-01            99.8         99.8\n2   2009-03-01           100.2        100.2\n3   2009-04-01           100.2        100.2\n4   2009-05-01            99.7         99.7\n..         ...             ...          ...\n136 2020-05-01           121.8        121.8\n137 2020-06-01           119.9        119.9\n138 2020-07-01           120.8        120.8\n139 2020-08-01           120.2        120.2\n140 2020-09-01           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogDiffShifting</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-02-01        0.004016    -0.100942\n2009-03-01        0.004000     0.004000\n2009-04-01        0.000000     0.000000\n2009-05-01       -0.005003    -0.005003\n2009-06-01        0.004004     0.004004\n...                    ...          ...\n2020-05-01        0.009072     0.009072\n2020-06-01       -0.015722    -0.015722\n2020-07-01        0.007478     0.007478\n2020-08-01       -0.004979    -0.004979\n2020-09-01        0.000832     0.000832\n\n[140 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-12-01        0.000086    -0.008660\n2010-01-01       -0.000332    -0.000332\n2010-02-01       -0.000415    -0.000415\n2010-03-01        0.001668     0.001668\n2010-04-01       -0.001919    -0.001919\n...                    ...          ...\n2020-05-01        0.011780     0.011780\n2020-06-01       -0.004290    -0.004290\n2020-07-01        0.002773     0.002773\n2020-08-01       -0.002553    -0.002553\n2020-09-01       -0.002069    -0.002069\n\n[130 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingExponentialDecayAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        0.000000     0.000000\n2009-02-01        0.001950    -0.049014\n2009-03-01        0.003851    -0.029135\n2009-04-01        0.002803    -0.021208\n2009-05-01       -0.001707    -0.020346\n...                    ...          ...\n2020-05-01        0.040494     0.040492\n2020-06-01        0.023381     0.023379\n2020-07-01        0.029127     0.029125\n2020-08-01        0.022792     0.022790\n2020-09-01        0.022297     0.022295\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dfoutput</td>\n                    <td class=\"code\"><pre>Test statics                     -0.553577\np-values                          0.881131\n#Lags Used                        9.000000\n Number of Observations used    131.000000\ndtype: float64</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dftest</td>\n                    <td class=\"code\"><pre>(-0.5535771825909882,\n 0.8811305125066138,\n 9,\n 131,\n {&#x27;1%&#x27;: -3.481281802271349,\n  &#x27;10%&#x27;: -2.5786771965503177,\n  &#x27;5%&#x27;: -2.883867891664528},\n 278.29564832008947)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exponentialDecayWeightAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.601218     4.652182\n2009-03-01        4.603317     4.636303\n2009-04-01        4.604365     4.628376\n2009-05-01        4.603873     4.622512\n...                    ...          ...\n2020-05-01        4.761886     4.761888\n2020-06-01        4.763277     4.763279\n2020-07-01        4.765010     4.765012\n2020-08-01        4.766365     4.766367\n2020-09-01        4.767692     4.767693\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01            99.4        110.4\n2009-02-01            99.8         99.8\n2009-03-01           100.2        100.2\n2009-04-01           100.2        100.2\n2009-05-01            99.7         99.7\n...                    ...          ...\n2020-05-01           121.8        121.8\n2020-06-01           119.9        119.9\n2020-07-01           120.8        120.8\n2020-08-01           120.2        120.2\n2020-09-01           120.3        120.3\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset_logScale</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.603168     4.603168\n2009-03-01        4.607168     4.607168\n2009-04-01        4.607168     4.607168\n2009-05-01        4.602166     4.602166\n...                    ...          ...\n2020-05-01        4.802380     4.802380\n2020-06-01        4.786658     4.786658\n2020-07-01        4.794136     4.794136\n2020-08-01        4.789157     4.789157\n2020-09-01        4.789989     4.789989\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>mean</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x000002D647A83790&gt;,\n &lt;matplotlib.lines.Line2D object at 0x000002D647A83C70&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        4.790600     4.790600\n2020-06-01        4.790948     4.790948\n2020-07-01        4.791363     4.791363\n2020-08-01        4.791710     4.791710\n2020-09-01        4.792058     4.792058\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingStd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(22, 'U000010', 20, '1619598273307', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>AssertionError\n          at /app/getMonthlyPrediction</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n  \n  <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = \'none\';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll(\'table.vars\'));\n      hideAll(document.querySelectorAll(\'ol.pre-context\'));\n      hideAll(document.querySelectorAll(\'ol.post-context\'));\n      hideAll(document.querySelectorAll(\'div.pastebin\'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == \'none\' ? \'block\': \'none\';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle(\'v\' + id);\n      var s = link.getElementsByTagName(\'span\')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle(\'browserTraceback\', \'pastebinTraceback\');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>AssertionError\n       at /app/getMonthlyPrediction</h1>\n  <pre class=\"exception_value\">Expected a `Response`, `HttpResponse` or `HttpStreamingResponse` to be returned from the view, but received a `&lt;class &#x27;NoneType&#x27;&gt;`</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>GET</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://localhost:8000/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>3.1.7</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>AssertionError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>Expected a `Response`, `HttpResponse` or `HttpStreamingResponse` to be returned from the view, but received a `&lt;class &#x27;NoneType&#x27;&gt;`</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td><span class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</span>, line 423, in finalize_response</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>C:\\Users\\chana\\.conda\\envs\\mytensor\\python.exe</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.8.5</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#x27;D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\python38.zip&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\DLLs&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib\\\\site-packages&#x27;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Wed, 28 Apr 2021 08:24:31 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py</code>, line 47, in inner\n\n          \n            <div class=\"context\" id=\"c2663509093952\">\n              \n                <ol start=\"40\" class=\"pre-context\" id=\"pre2663509093952\">\n                \n                  <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre>            return response</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre>        return inner</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre>    else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre>        @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre>        def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"47\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre>                response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'48\' class=\"post-context\" id=\"post2663509093952\">\n                  \n                  <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre>            except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre>            return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre>        return inner</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663509093952\', \'post2663509093952\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2663509093952\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2663509093952\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>AssertionError(&quot;Expected a `Response`, `HttpResponse` or `HttpStreamingResponse` to be returned from the view, but received a `&lt;class &#x27;NoneType&#x27;&gt;`&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000026C4A9FD640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py</code>, line 181, in _get_response\n\n          \n            <div class=\"context\" id=\"c2663510459264\">\n              \n                <ol start=\"174\" class=\"pre-context\" id=\"pre2663510459264\">\n                \n                  <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre>        if response is None:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"181\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'182\' class=\"post-context\" id=\"post2663510459264\">\n                  \n                  <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre>            except Exception as e:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre>                if response is None:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre>                    raise</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510459264\', \'post2663510459264\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2663510459264\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2663510459264\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x0000026C24B1D0D0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>middleware_method</td>\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x0000026C24C90BE0&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000026C4A9FD640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>wrapped_callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x0000026C24B1D0D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n\n          \n            <div class=\"context\" id=\"c2663510459712\">\n              \n                <ol start=\"47\" class=\"pre-context\" id=\"pre2663510459712\">\n                \n                  <li onclick=\"toggle(\'pre2663510459712\', \'post2663510459712\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510459712\', \'post2663510459712\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510459712\', \'post2663510459712\')\"><pre>def csrf_exempt(view_func):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510459712\', \'post2663510459712\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510459712\', \'post2663510459712\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510459712\', \'post2663510459712\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510459712\', \'post2663510459712\')\"><pre>    def wrapped_view(*args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"54\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2663510459712\', \'post2663510459712\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'55\' class=\"post-context\" id=\"post2663510459712\">\n                  \n                  <li onclick=\"toggle(\'pre2663510459712\', \'post2663510459712\')\"><pre>    wrapped_view.csrf_exempt = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510459712\', \'post2663510459712\')\"><pre>    return wraps(view_func)(wrapped_view)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2663510459712\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2663510459712\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>view_func</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x0000026C24B1D040&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py</code>, line 70, in view\n\n          \n            <div class=\"context\" id=\"c2663510461056\">\n              \n                <ol start=\"63\" class=\"pre-context\" id=\"pre2663510461056\">\n                \n                  <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre>            self = cls(**initkwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre>                raise AttributeError(</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre>                )</pre></li>\n                \n                </ol>\n              \n              <ol start=\"70\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'71\' class=\"post-context\" id=\"post2663510461056\">\n                  \n                  <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre>        view.view_class = cls</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre>        # take name and docstring from class</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre>        update_wrapper(view, cls, updated=())</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510461056\', \'post2663510461056\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2663510461056\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2663510461056\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>cls</td>\n                    <td class=\"code\"><pre>&lt;class &#x27;predictApp.views.WrappedAPIView&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>initkwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x0000026C2598F3D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 511, in dispatch\n\n          \n            <div class=\"context\" id=\"c2663510460224\">\n              \n                <ol start=\"504\" class=\"pre-context\" id=\"pre2663510460224\">\n                \n                  <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre>        except Exception as exc:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre>            response = self.handle_exception(exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"511\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'512\' class=\"post-context\" id=\"post2663510460224\">\n                  \n                  <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre>        return self.response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre>        Handler method for HTTP &#x27;OPTIONS&#x27; request.</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510460224\', \'post2663510460224\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2663510460224\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2663510460224\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x0000026C2598F3D0&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x0000026C2598F3D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 423, in finalize_response\n\n          \n            <div class=\"context\" id=\"c2663510461696\">\n              \n                <ol start=\"416\" class=\"pre-context\" id=\"pre2663510461696\">\n                \n                  <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre>        self.check_throttles(request)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre>    def finalize_response(self, request, response, *args, **kwargs):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre>        Returns the final response object.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre>        # Make the error obvious if a proper response is not returned</pre></li>\n                \n                </ol>\n              \n              <ol start=\"423\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre>        assert isinstance(response, HttpResponseBase), (</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'424\' class=\"post-context\" id=\"post2663510461696\">\n                  \n                  <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre>            &#x27;Expected a `Response`, `HttpResponse` or `HttpStreamingResponse` &#x27;</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre>            &#x27;to be returned from the view, but received a `%s`&#x27;</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre>            % type(response)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre>        )</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2663510461696\', \'post2663510461696\')\"><pre>        if isinstance(response, Response):</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2663510461696\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2663510461696\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x0000026C2598F3D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"AssertionError at /app/getMonthlyPrediction\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://localhost:8000/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake\n\nDjango Version: 3.1.7\nPython Version: 3.8.5\nInstalled Applications:\n[&#x27;django.contrib.admin&#x27;,\n &#x27;django.contrib.auth&#x27;,\n &#x27;django.contrib.contenttypes&#x27;,\n &#x27;django.contrib.sessions&#x27;,\n &#x27;django.contrib.messages&#x27;,\n &#x27;django.contrib.staticfiles&#x27;,\n &#x27;rest_framework&#x27;,\n &#x27;predictApp&#x27;]\nInstalled Middleware:\n[&#x27;django.middleware.security.SecurityMiddleware&#x27;,\n &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]\n\n\n\nTraceback (most recent call last):\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py\", line 47, in inner\n    response = get_response(request)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 181, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py\", line 54, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py\", line 70, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 511, in dispatch\n    self.response = self.finalize_response(request, response, *args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 423, in finalize_response\n    assert isinstance(response, HttpResponseBase), (\n\nException Type: AssertionError at /app/getMonthlyPrediction\nException Value: Expected a `Response`, `HttpResponse` or `HttpStreamingResponse` to be returned from the view, but received a `&lt;class &#x27;NoneType&#x27;&gt;`\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>AnonymousUser</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>userId</td>\n            <td class=\"code\"><pre>&#x27;U000010&#x27;</pre></td>\n          </tr>\n        \n          <tr>\n            <td>userName</td>\n            <td class=\"code\"><pre>&#x27;chanaka&#x27;</pre></td>\n          </tr>\n        \n          <tr>\n            <td>email</td>\n            <td class=\"code\"><pre>&#x27;chanakabalasuriya123@gmail.com&#x27;</pre></td>\n          </tr>\n        \n          <tr>\n            <td>salesReportId</td>\n            <td class=\"code\"><pre>&#x27;20&#x27;</pre></td>\n          </tr>\n        \n          <tr>\n            <td>fileURL</td>\n            <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n          </tr>\n        \n          <tr>\n            <td>headers</td>\n            <td class=\"code\"><pre>(&#x27;[{&quot;name&quot;:&quot;Month&quot;,&quot;mappedProductID&quot;:&quot;Month&quot;},{&quot;name&quot;:&quot;chocolate &#x27;\n &#x27;cake&quot;,&quot;mappedProductID&quot;:1},{&quot;name&quot;:&quot;butter cake&quot;,&quot;mappedProductID&quot;:2}]&#x27;)</pre></td>\n          </tr>\n        \n          <tr>\n            <td>needPrediction</td>\n            <td class=\"code\"><pre>&#x27;butter cake&#x27;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <p>No cookie data</p>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ALLUSERSPROFILE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\AppData\\\\Roaming&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHOCOLATEYINSTALL</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\chocolatey&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHOCOLATEYLASTPATHUPDATE</td>\n          <td class=\"code\"><pre>&#x27;132571304489820617&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHROME_CRASHPAD_PIPE_NAME</td>\n          <td class=\"code\"><pre>&#x27;\\\\\\\\.\\\\pipe\\\\crashpad_13460_LMTVQYFUCUIWFYKC&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COLORTERM</td>\n          <td class=\"code\"><pre>&#x27;truecolor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMFILES</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMFILES(X86)</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files (x86)\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMW6432</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMPUTERNAME</td>\n          <td class=\"code\"><pre>&#x27;DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMSPEC</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\WINDOWS\\\\system32\\\\cmd.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_DEFAULT_ENV</td>\n          <td class=\"code\"><pre>&#x27;mytensor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_EXE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\Anaconda3\\\\Scripts\\\\conda.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PREFIX</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PROMPT_MODIFIER</td>\n          <td class=\"code\"><pre>&#x27;(mytensor) &#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PYTHON_EXE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\Anaconda3\\\\python.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_SHLVL</td>\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#x27;text/plain&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DJANGO_SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#x27;cakeryAiTensorflow.settings&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRIVERDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Windows\\\\System32\\\\Drivers\\\\DriverData&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FPS_BROWSER_APP_PROFILE_STRING</td>\n          <td class=\"code\"><pre>&#x27;Internet Explorer&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FPS_BROWSER_USER_PROFILE_STRING</td>\n          <td class=\"code\"><pre>&#x27;Default&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GATEWAY_INTERFACE</td>\n          <td class=\"code\"><pre>&#x27;CGI/1.1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GIT_ASKPASS</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HOMEDRIVE</td>\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HOMEPATH</td>\n          <td class=\"code\"><pre>&#x27;\\\\Users\\\\chana&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#x27;close&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#x27;localhost:8000&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANG</td>\n          <td class=\"code\"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALAPPDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\AppData\\\\Local&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGONSERVER</td>\n          <td class=\"code\"><pre>&#x27;\\\\\\\\DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_OF_PROCESSORS</td>\n          <td class=\"code\"><pre>&#x27;8&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ONEDRIVE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\OneDrive&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ONEDRIVECONSUMER</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\OneDrive&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>\n          <td class=\"code\"><pre>&#x27;undefined&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>OS</td>\n          <td class=\"code\"><pre>&#x27;Windows_NT&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH</td>\n          <td class=\"code\"><pre>(&#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\Library\\\\mingw-w64\\\\bin;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\Library\\\\usr\\\\bin;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\Library\\\\bin;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\Scripts;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\bin;C:\\\\Program &#x27;\n &#x27;Files (x86)\\\\Common &#x27;\n &#x27;Files\\\\Oracle\\\\Java\\\\javapath;C:\\\\ProgramData\\\\Anaconda3\\\\condabin;C:\\\\Python39\\\\Scripts;C:\\\\Python39;C:\\\\WINDOWS\\\\system32;C:\\\\WINDOWS;C:\\\\WINDOWS\\\\System32\\\\Wbem;C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0;C:\\\\WINDOWS\\\\System32\\\\OpenSSH;C:\\\\Program &#x27;\n &#x27;Files (x86)\\\\NVIDIA Corporation\\\\PhysX\\\\Common;C:\\\\Program Files\\\\NVIDIA &#x27;\n &#x27;Corporation\\\\NVIDIA NvDLISR;C:\\\\Program &#x27;\n &#x27;Files\\\\nodejs;C:\\\\ProgramData\\\\chocolatey\\\\bin;C:\\\\Program &#x27;\n &#x27;Files\\\\Git\\\\cmd;C:\\\\Users\\\\chana\\\\AppData\\\\Local\\\\Microsoft\\\\WindowsApps;.;C:\\\\Users\\\\chana\\\\AppData\\\\Local\\\\Programs\\\\Microsoft &#x27;\n &#x27;VS Code\\\\bin;C:\\\\Users\\\\chana\\\\AppData\\\\Roaming\\\\npm;C:\\\\Program &#x27;\n &#x27;Files\\\\JetBrains\\\\PyCharm 2020.3.4\\\\bin;.&#x27;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATHEXT</td>\n          <td class=\"code\"><pre>&#x27;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#x27;/app/getMonthlyPrediction&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROCESSOR_ARCHITECTURE</td>\n          <td class=\"code\"><pre>&#x27;AMD64&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROCESSOR_IDENTIFIER</td>\n          <td class=\"code\"><pre>&#x27;Intel64 Family 6 Model 158 Stepping 9, GenuineIntel&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROCESSOR_LEVEL</td>\n          <td class=\"code\"><pre>&#x27;6&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROCESSOR_REVISION</td>\n          <td class=\"code\"><pre>&#x27;9e09&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROGRAMDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROGRAMFILES</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROGRAMFILES(X86)</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files (x86)&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROGRAMW6432</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROMPT</td>\n          <td class=\"code\"><pre>&#x27;(mytensor) $P$G&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PSMODULEPATH</td>\n          <td class=\"code\"><pre>(&#x27;C:\\\\Program &#x27;\n &#x27;Files\\\\WindowsPowerShell\\\\Modules;C:\\\\WINDOWS\\\\system32\\\\WindowsPowerShell\\\\v1.0\\\\Modules&#x27;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUBLIC</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\Public&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PYCHARM</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files\\\\JetBrains\\\\PyCharm 2020.3.4\\\\bin;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#x27;userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#x27;127.0.0.1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_HOST</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#x27;GET&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RUN_MAIN</td>\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#x27;DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#x27;8000&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#x27;HTTP/1.1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSIONNAME</td>\n          <td class=\"code\"><pre>&#x27;Console&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEMDRIVE</td>\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEMROOT</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\WINDOWS&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMP</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\AppData\\\\Local\\\\Temp&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TERM_PROGRAM</td>\n          <td class=\"code\"><pre>&#x27;vscode&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TERM_PROGRAM_VERSION</td>\n          <td class=\"code\"><pre>&#x27;1.54.0&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\AppData\\\\Local\\\\Temp&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USERDOMAIN</td>\n          <td class=\"code\"><pre>&#x27;DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USERDOMAIN_ROAMINGPROFILE</td>\n          <td class=\"code\"><pre>&#x27;DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USERNAME</td>\n          <td class=\"code\"><pre>&#x27;chana&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USERPROFILE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>VSCODE_GIT_ASKPASS_MAIN</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>VSCODE_GIT_ASKPASS_NODE</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>VSCODE_GIT_IPC_HANDLE</td>\n          <td class=\"code\"><pre>&#x27;\\\\\\\\.\\\\pipe\\\\vscode-git-e8c4958d86-sock&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WINDIR</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\WINDOWS&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x0000026C258288B0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#x27;http&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>cakeryAiTensorflow.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#x27;auth.User&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BASE_DIR</td>\n          <td class=\"code\"><pre>WindowsPath(&#x27;D:/BeforeReset/htdocs/Cakery_managment_Sys_NodeAngularPython/cakeryAiTensorflow&#x27;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#x27;csrftoken&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,\n             &#x27;AUTOCOMMIT&#x27;: True,\n             &#x27;CONN_MAX_AGE&#x27;: 0,\n             &#x27;ENGINE&#x27;: &#x27;django.db.backends.sqlite3&#x27;,\n             &#x27;HOST&#x27;: &#x27;&#x27;,\n             &#x27;NAME&#x27;: WindowsPath(&#x27;D:/BeforeReset/htdocs/Cakery_managment_Sys_NodeAngularPython/cakeryAiTensorflow/db.sqlite3&#x27;),\n             &#x27;OPTIONS&#x27;: {},\n             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,\n             &#x27;PORT&#x27;: &#x27;&#x27;,\n             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,\n                      &#x27;COLLATION&#x27;: None,\n                      &#x27;MIGRATE&#x27;: True,\n                      &#x27;MIRROR&#x27;: None,\n                      &#x27;NAME&#x27;: None},\n             &#x27;TIME_ZONE&#x27;: None,\n             &#x27;USER&#x27;: &#x27;&#x27;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#x27;N j, Y, P&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,\n &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,\n &#x27;%Y-%m-%d %H:%M&#x27;,\n &#x27;%m/%d/%Y %H:%M:%S&#x27;,\n &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,\n &#x27;%m/%d/%Y %H:%M&#x27;,\n &#x27;%m/%d/%y %H:%M:%S&#x27;,\n &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,\n &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#x27;N j, Y&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d&#x27;,\n &#x27;%m/%d/%Y&#x27;,\n &#x27;%m/%d/%y&#x27;,\n &#x27;%b %d %Y&#x27;,\n &#x27;%b %d, %Y&#x27;,\n &#x27;%d %b %Y&#x27;,\n &#x27;%d %b, %Y&#x27;,\n &#x27;%B %d %Y&#x27;,\n &#x27;%B %d, %Y&#x27;,\n &#x27;%d %B %Y&#x27;,\n &#x27;%d %B, %Y&#x27;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#x27;.&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER</td>\n          <td class=\"code\"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#x27;webmaster@localhost&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_HASHING_ALGORITHM</td>\n          <td class=\"code\"><pre>&#x27;sha256&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#x27;localhost&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#x27;[Django] &#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,\n &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>420</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n         ', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(23, 'U000010', 20, '1619598325948', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>AssertionError\n          at /app/getMonthlyPrediction</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n  \n  <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = \'none\';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll(\'table.vars\'));\n      hideAll(document.querySelectorAll(\'ol.pre-context\'));\n      hideAll(document.querySelectorAll(\'ol.post-context\'));\n      hideAll(document.querySelectorAll(\'div.pastebin\'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == \'none\' ? \'block\': \'none\';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle(\'v\' + id);\n      var s = link.getElementsByTagName(\'span\')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle(\'browserTraceback\', \'pastebinTraceback\');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>AssertionError\n       at /app/getMonthlyPrediction</h1>\n  <pre class=\"exception_value\">Expected a `Response`, `HttpResponse` or `HttpStreamingResponse` to be returned from the view, but received a `&lt;class &#x27;str&#x27;&gt;`</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>GET</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://localhost:8000/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>3.1.7</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>AssertionError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>Expected a `Response`, `HttpResponse` or `HttpStreamingResponse` to be returned from the view, but received a `&lt;class &#x27;str&#x27;&gt;`</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td><span class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</span>, line 423, in finalize_response</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>C:\\Users\\chana\\.conda\\envs\\mytensor\\python.exe</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.8.5</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#x27;D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\python38.zip&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\DLLs&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib\\\\site-packages&#x27;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Wed, 28 Apr 2021 08:25:23 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py</code>, line 47, in inner\n\n          \n            <div class=\"context\" id=\"c1698237993408\">\n              \n                <ol start=\"40\" class=\"pre-context\" id=\"pre1698237993408\">\n                \n                  <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre>            return response</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre>        return inner</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre>    else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre>        @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre>        def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"47\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre>                response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'48\' class=\"post-context\" id=\"post1698237993408\">\n                  \n                  <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre>            except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre>            return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre>        return inner</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237993408\', \'post1698237993408\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1698237993408\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1698237993408\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>AssertionError(&quot;Expected a `Response`, `HttpResponse` or `HttpStreamingResponse` to be returned from the view, but received a `&lt;class &#x27;str&#x27;&gt;`&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000018B0BFBD640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py</code>, line 181, in _get_response\n\n          \n            <div class=\"context\" id=\"c1698237994752\">\n              \n                <ol start=\"174\" class=\"pre-context\" id=\"pre1698237994752\">\n                \n                  <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre>        if response is None:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"181\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'182\' class=\"post-context\" id=\"post1698237994752\">\n                  \n                  <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre>            except Exception as e:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre>                if response is None:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre>                    raise</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237994752\', \'post1698237994752\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1698237994752\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1698237994752\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x0000018B65F900D0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>middleware_method</td>\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x0000018B66105BB0&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000018B0BFBD640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>wrapped_callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x0000018B65F900D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n\n          \n            <div class=\"context\" id=\"c1698237996288\">\n              \n                <ol start=\"47\" class=\"pre-context\" id=\"pre1698237996288\">\n                \n                  <li onclick=\"toggle(\'pre1698237996288\', \'post1698237996288\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237996288\', \'post1698237996288\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237996288\', \'post1698237996288\')\"><pre>def csrf_exempt(view_func):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237996288\', \'post1698237996288\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237996288\', \'post1698237996288\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237996288\', \'post1698237996288\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237996288\', \'post1698237996288\')\"><pre>    def wrapped_view(*args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"54\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1698237996288\', \'post1698237996288\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'55\' class=\"post-context\" id=\"post1698237996288\">\n                  \n                  <li onclick=\"toggle(\'pre1698237996288\', \'post1698237996288\')\"><pre>    wrapped_view.csrf_exempt = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237996288\', \'post1698237996288\')\"><pre>    return wraps(view_func)(wrapped_view)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1698237996288\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1698237996288\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>view_func</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x0000018B65F90040&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py</code>, line 70, in view\n\n          \n            <div class=\"context\" id=\"c1698237996160\">\n              \n                <ol start=\"63\" class=\"pre-context\" id=\"pre1698237996160\">\n                \n                  <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre>            self = cls(**initkwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre>                raise AttributeError(</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre>                )</pre></li>\n                \n                </ol>\n              \n              <ol start=\"70\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'71\' class=\"post-context\" id=\"post1698237996160\">\n                  \n                  <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre>        view.view_class = cls</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre>        # take name and docstring from class</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre>        update_wrapper(view, cls, updated=())</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237996160\', \'post1698237996160\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1698237996160\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1698237996160\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>cls</td>\n                    <td class=\"code\"><pre>&lt;class &#x27;predictApp.views.WrappedAPIView&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>initkwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x0000018B66DE8670&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 511, in dispatch\n\n          \n            <div class=\"context\" id=\"c1698237985984\">\n              \n                <ol start=\"504\" class=\"pre-context\" id=\"pre1698237985984\">\n                \n                  <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre>        except Exception as exc:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre>            response = self.handle_exception(exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"511\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'512\' class=\"post-context\" id=\"post1698237985984\">\n                  \n                  <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre>        return self.response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre>        Handler method for HTTP &#x27;OPTIONS&#x27; request.</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237985984\', \'post1698237985984\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1698237985984\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1698237985984\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x0000018B66DE8670&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x0000018B66DE8670&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 423, in finalize_response\n\n          \n            <div class=\"context\" id=\"c1698237986368\">\n              \n                <ol start=\"416\" class=\"pre-context\" id=\"pre1698237986368\">\n                \n                  <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre>        self.check_throttles(request)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre>    def finalize_response(self, request, response, *args, **kwargs):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre>        Returns the final response object.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre>        # Make the error obvious if a proper response is not returned</pre></li>\n                \n                </ol>\n              \n              <ol start=\"423\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre>        assert isinstance(response, HttpResponseBase), (</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'424\' class=\"post-context\" id=\"post1698237986368\">\n                  \n                  <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre>            &#x27;Expected a `Response`, `HttpResponse` or `HttpStreamingResponse` &#x27;</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre>            &#x27;to be returned from the view, but received a `%s`&#x27;</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre>            % type(response)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre>        )</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1698237986368\', \'post1698237986368\')\"><pre>        if isinstance(response, Response):</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1698237986368\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1698237986368\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x0000018B66DE8670&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"AssertionError at /app/getMonthlyPrediction\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://localhost:8000/app/getMonthlyPrediction?userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake\n\nDjango Version: 3.1.7\nPython Version: 3.8.5\nInstalled Applications:\n[&#x27;django.contrib.admin&#x27;,\n &#x27;django.contrib.auth&#x27;,\n &#x27;django.contrib.contenttypes&#x27;,\n &#x27;django.contrib.sessions&#x27;,\n &#x27;django.contrib.messages&#x27;,\n &#x27;django.contrib.staticfiles&#x27;,\n &#x27;rest_framework&#x27;,\n &#x27;predictApp&#x27;]\nInstalled Middleware:\n[&#x27;django.middleware.security.SecurityMiddleware&#x27;,\n &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]\n\n\n\nTraceback (most recent call last):\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py\", line 47, in inner\n    response = get_response(request)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 181, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py\", line 54, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py\", line 70, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 511, in dispatch\n    self.response = self.finalize_response(request, response, *args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 423, in finalize_response\n    assert isinstance(response, HttpResponseBase), (\n\nException Type: AssertionError at /app/getMonthlyPrediction\nException Value: Expected a `Response`, `HttpResponse` or `HttpStreamingResponse` to be returned from the view, but received a `&lt;class &#x27;str&#x27;&gt;`\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>AnonymousUser</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>userId</td>\n            <td class=\"code\"><pre>&#x27;U000010&#x27;</pre></td>\n          </tr>\n        \n          <tr>\n            <td>userName</td>\n            <td class=\"code\"><pre>&#x27;chanaka&#x27;</pre></td>\n          </tr>\n        \n          <tr>\n            <td>email</td>\n            <td class=\"code\"><pre>&#x27;chanakabalasuriya123@gmail.com&#x27;</pre></td>\n          </tr>\n        \n          <tr>\n            <td>salesReportId</td>\n            <td class=\"code\"><pre>&#x27;20&#x27;</pre></td>\n          </tr>\n        \n          <tr>\n            <td>fileURL</td>\n            <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n          </tr>\n        \n          <tr>\n            <td>headers</td>\n            <td class=\"code\"><pre>(&#x27;[{&quot;name&quot;:&quot;Month&quot;,&quot;mappedProductID&quot;:&quot;Month&quot;},{&quot;name&quot;:&quot;chocolate &#x27;\n &#x27;cake&quot;,&quot;mappedProductID&quot;:1},{&quot;name&quot;:&quot;butter cake&quot;,&quot;mappedProductID&quot;:2}]&#x27;)</pre></td>\n          </tr>\n        \n          <tr>\n            <td>needPrediction</td>\n            <td class=\"code\"><pre>&#x27;butter cake&#x27;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <p>No cookie data</p>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ALLUSERSPROFILE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\AppData\\\\Roaming&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHOCOLATEYINSTALL</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\chocolatey&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHOCOLATEYLASTPATHUPDATE</td>\n          <td class=\"code\"><pre>&#x27;132571304489820617&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHROME_CRASHPAD_PIPE_NAME</td>\n          <td class=\"code\"><pre>&#x27;\\\\\\\\.\\\\pipe\\\\crashpad_13460_LMTVQYFUCUIWFYKC&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COLORTERM</td>\n          <td class=\"code\"><pre>&#x27;truecolor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMFILES</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMFILES(X86)</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files (x86)\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMW6432</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMPUTERNAME</td>\n          <td class=\"code\"><pre>&#x27;DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMSPEC</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\WINDOWS\\\\system32\\\\cmd.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_DEFAULT_ENV</td>\n          <td class=\"code\"><pre>&#x27;mytensor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_EXE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\Anaconda3\\\\Scripts\\\\conda.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PREFIX</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PROMPT_MODIFIER</td>\n          <td class=\"code\"><pre>&#x27;(mytensor) &#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PYTHON_EXE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\Anaconda3\\\\python.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_SHLVL</td>\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#x27;text/plain&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DJANGO_SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#x27;cakeryAiTensorflow.settings&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRIVERDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Windows\\\\System32\\\\Drivers\\\\DriverData&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FPS_BROWSER_APP_PROFILE_STRING</td>\n          <td class=\"code\"><pre>&#x27;Internet Explorer&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FPS_BROWSER_USER_PROFILE_STRING</td>\n          <td class=\"code\"><pre>&#x27;Default&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GATEWAY_INTERFACE</td>\n          <td class=\"code\"><pre>&#x27;CGI/1.1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GIT_ASKPASS</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HOMEDRIVE</td>\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HOMEPATH</td>\n          <td class=\"code\"><pre>&#x27;\\\\Users\\\\chana&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#x27;close&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#x27;localhost:8000&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANG</td>\n          <td class=\"code\"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALAPPDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\AppData\\\\Local&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGONSERVER</td>\n          <td class=\"code\"><pre>&#x27;\\\\\\\\DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_OF_PROCESSORS</td>\n          <td class=\"code\"><pre>&#x27;8&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ONEDRIVE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\OneDrive&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ONEDRIVECONSUMER</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\OneDrive&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>\n          <td class=\"code\"><pre>&#x27;undefined&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>OS</td>\n          <td class=\"code\"><pre>&#x27;Windows_NT&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH</td>\n          <td class=\"code\"><pre>(&#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\Library\\\\mingw-w64\\\\bin;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\Library\\\\usr\\\\bin;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\Library\\\\bin;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\Scripts;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\bin;C:\\\\Program &#x27;\n &#x27;Files (x86)\\\\Common &#x27;\n &#x27;Files\\\\Oracle\\\\Java\\\\javapath;C:\\\\ProgramData\\\\Anaconda3\\\\condabin;C:\\\\Python39\\\\Scripts;C:\\\\Python39;C:\\\\WINDOWS\\\\system32;C:\\\\WINDOWS;C:\\\\WINDOWS\\\\System32\\\\Wbem;C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0;C:\\\\WINDOWS\\\\System32\\\\OpenSSH;C:\\\\Program &#x27;\n &#x27;Files (x86)\\\\NVIDIA Corporation\\\\PhysX\\\\Common;C:\\\\Program Files\\\\NVIDIA &#x27;\n &#x27;Corporation\\\\NVIDIA NvDLISR;C:\\\\Program &#x27;\n &#x27;Files\\\\nodejs;C:\\\\ProgramData\\\\chocolatey\\\\bin;C:\\\\Program &#x27;\n &#x27;Files\\\\Git\\\\cmd;C:\\\\Users\\\\chana\\\\AppData\\\\Local\\\\Microsoft\\\\WindowsApps;.;C:\\\\Users\\\\chana\\\\AppData\\\\Local\\\\Programs\\\\Microsoft &#x27;\n &#x27;VS Code\\\\bin;C:\\\\Users\\\\chana\\\\AppData\\\\Roaming\\\\npm;C:\\\\Program &#x27;\n &#x27;Files\\\\JetBrains\\\\PyCharm 2020.3.4\\\\bin;.&#x27;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATHEXT</td>\n          <td class=\"code\"><pre>&#x27;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#x27;/app/getMonthlyPrediction&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROCESSOR_ARCHITECTURE</td>\n          <td class=\"code\"><pre>&#x27;AMD64&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROCESSOR_IDENTIFIER</td>\n          <td class=\"code\"><pre>&#x27;Intel64 Family 6 Model 158 Stepping 9, GenuineIntel&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROCESSOR_LEVEL</td>\n          <td class=\"code\"><pre>&#x27;6&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROCESSOR_REVISION</td>\n          <td class=\"code\"><pre>&#x27;9e09&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROGRAMDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROGRAMFILES</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROGRAMFILES(X86)</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files (x86)&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROGRAMW6432</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROMPT</td>\n          <td class=\"code\"><pre>&#x27;(mytensor) $P$G&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PSMODULEPATH</td>\n          <td class=\"code\"><pre>(&#x27;C:\\\\Program &#x27;\n &#x27;Files\\\\WindowsPowerShell\\\\Modules;C:\\\\WINDOWS\\\\system32\\\\WindowsPowerShell\\\\v1.0\\\\Modules&#x27;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUBLIC</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\Public&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PYCHARM</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files\\\\JetBrains\\\\PyCharm 2020.3.4\\\\bin;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#x27;userId=U000010&amp;userName=chanaka&amp;email=chanakabalasuriya123%40gmail.com&amp;salesReportId=20&amp;fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;headers=%5B%7B%22name%22%3A%22Month%22%2C%22mappedProductID%22%3A%22Month%22%7D%2C%7B%22name%22%3A%22chocolate%20cake%22%2C%22mappedProductID%22%3A1%7D%2C%7B%22name%22%3A%22butter%20cake%22%2C%22mappedProductID%22%3A2%7D%5D&amp;needPrediction=chocolate%20cake&amp;needPrediction=butter%20cake&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#x27;127.0.0.1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_HOST</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#x27;GET&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RUN_MAIN</td>\n          <td class=\"code\"><pre>&#x27;true&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#x27;DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#x27;8000&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#x27;HTTP/1.1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSIONNAME</td>\n          <td class=\"code\"><pre>&#x27;Console&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEMDRIVE</td>\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEMROOT</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\WINDOWS&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMP</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\AppData\\\\Local\\\\Temp&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TERM_PROGRAM</td>\n          <td class=\"code\"><pre>&#x27;vscode&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TERM_PROGRAM_VERSION</td>\n          <td class=\"code\"><pre>&#x27;1.54.0&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\AppData\\\\Local\\\\Temp&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USERDOMAIN</td>\n          <td class=\"code\"><pre>&#x27;DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USERDOMAIN_ROAMINGPROFILE</td>\n          <td class=\"code\"><pre>&#x27;DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USERNAME</td>\n          <td class=\"code\"><pre>&#x27;chana&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USERPROFILE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>VSCODE_GIT_ASKPASS_MAIN</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>VSCODE_GIT_ASKPASS_NODE</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>VSCODE_GIT_IPC_HANDLE</td>\n          <td class=\"code\"><pre>&#x27;\\\\\\\\.\\\\pipe\\\\vscode-git-e8c4958d86-sock&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WINDIR</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\WINDOWS&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x0000018B66C92CA0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#x27;http&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>cakeryAiTensorflow.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#x27;auth.User&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BASE_DIR</td>\n          <td class=\"code\"><pre>WindowsPath(&#x27;D:/BeforeReset/htdocs/Cakery_managment_Sys_NodeAngularPython/cakeryAiTensorflow&#x27;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#x27;default&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#x27;csrftoken&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#x27;/&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#x27;Lax&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,\n             &#x27;AUTOCOMMIT&#x27;: True,\n             &#x27;CONN_MAX_AGE&#x27;: 0,\n             &#x27;ENGINE&#x27;: &#x27;django.db.backends.sqlite3&#x27;,\n             &#x27;HOST&#x27;: &#x27;&#x27;,\n             &#x27;NAME&#x27;: WindowsPath(&#x27;D:/BeforeReset/htdocs/Cakery_managment_Sys_NodeAngularPython/cakeryAiTensorflow/db.sqlite3&#x27;),\n             &#x27;OPTIONS&#x27;: {},\n             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,\n             &#x27;PORT&#x27;: &#x27;&#x27;,\n             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,\n                      &#x27;COLLATION&#x27;: None,\n                      &#x27;MIGRATE&#x27;: True,\n                      &#x27;MIRROR&#x27;: None,\n                      &#x27;NAME&#x27;: None},\n             &#x27;TIME_ZONE&#x27;: None,\n             &#x27;USER&#x27;: &#x27;&#x27;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#x27;N j, Y, P&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,\n &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,\n &#x27;%Y-%m-%d %H:%M&#x27;,\n &#x27;%m/%d/%Y %H:%M:%S&#x27;,\n &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,\n &#x27;%m/%d/%Y %H:%M&#x27;,\n &#x27;%m/%d/%y %H:%M:%S&#x27;,\n &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,\n &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#x27;N j, Y&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#x27;%Y-%m-%d&#x27;,\n &#x27;%m/%d/%Y&#x27;,\n &#x27;%m/%d/%y&#x27;,\n &#x27;%b %d %Y&#x27;,\n &#x27;%b %d, %Y&#x27;,\n &#x27;%d %b %Y&#x27;,\n &#x27;%d %b, %Y&#x27;,\n &#x27;%B %d %Y&#x27;,\n &#x27;%B %d, %Y&#x27;,\n &#x27;%d %B %Y&#x27;,\n &#x27;%d %B, %Y&#x27;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#x27;.&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#x27;utf-8&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER</td>\n          <td class=\"code\"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#x27;webmaster@localhost&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_HASHING_ALGORITHM</td>\n          <td class=\"code\"><pre>&#x27;sha256&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#x27;localhost&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#x27;[Django] &#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,\n &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>420</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(24, 'U000010', 20, '1619598369315', NULL, 'Welcome to cakery.Ai predict app', NULL, '0000-00-00'),
(25, 'U000010', 20, '1619598768042', NULL, 'Welcome to cakery.Ai predict app', NULL, '0000-00-00'),
(26, 'U000010', 20, '1619598967963', NULL, 'Welcome to cakery.Ai predict app', NULL, '0000-00-00'),
(27, 'U000010', 20, '1619599118015', NULL, 'Welcome to cakery.Ai predict app', NULL, '0000-00-00'),
(28, 'U000010', 20, '1619599168157', NULL, 'Welcome to cakery.Ai predict app', NULL, '0000-00-00'),
(29, 'U000010', 20, '1619604610264', NULL, 'Welcome to cakery.Ai predict app', NULL, '0000-00-00'),
(30, 'U000010', 20, '1619604733920', NULL, 'Welcome to cakery.Ai predict app', NULL, '0000-00-00'),
(31, 'U000010', 20, '1619604816563', NULL, 'Welcome to cakery.Ai predict app', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(32, 'U000010', 20, '1619605176073', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>TypeError\n          at /app/getMonthlyPrediction</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n  \n  <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = \'none\';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll(\'table.vars\'));\n      hideAll(document.querySelectorAll(\'ol.pre-context\'));\n      hideAll(document.querySelectorAll(\'ol.post-context\'));\n      hideAll(document.querySelectorAll(\'div.pastebin\'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == \'none\' ? \'block\': \'none\';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle(\'v\' + id);\n      var s = link.getElementsByTagName(\'span\')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle(\'browserTraceback\', \'pastebinTraceback\');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>TypeError\n       at /app/getMonthlyPrediction</h1>\n  <pre class=\"exception_value\">Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>GET</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://localhost:8000/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>3.1.7</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>TypeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td><span class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\indexes\\base.py</span>, line 372, in __new__</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>C:\\Users\\chana\\.conda\\envs\\mytensor\\python.exe</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.8.5</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#x27;D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\python38.zip&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\DLLs&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib\\\\site-packages&#x27;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Wed, 28 Apr 2021 10:19:32 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py</code>, line 47, in inner\n\n          \n            <div class=\"context\" id=\"c1578362370496\">\n              \n                <ol start=\"40\" class=\"pre-context\" id=\"pre1578362370496\">\n                \n                  <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre>            return response</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre>        return inner</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre>    else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre>        @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre>        def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"47\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre>                response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'48\' class=\"post-context\" id=\"post1578362370496\">\n                  \n                  <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre>            except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre>            return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre>        return inner</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370496\', \'post1578362370496\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1578362370496\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1578362370496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000016F219FD640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py</code>, line 181, in _get_response\n\n          \n            <div class=\"context\" id=\"c1578362370432\">\n              \n                <ol start=\"174\" class=\"pre-context\" id=\"pre1578362370432\">\n                \n                  <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre>        if response is None:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"181\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'182\' class=\"post-context\" id=\"post1578362370432\">\n                  \n                  <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre>            except Exception as e:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre>                if response is None:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre>                    raise</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370432\', \'post1578362370432\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1578362370432\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1578362370432\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x0000016F7B9D1160&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>middleware_method</td>\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x0000016F7BB46B80&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000016F219FD640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>wrapped_callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x0000016F7B9D1160&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n\n          \n            <div class=\"context\" id=\"c1578362370368\">\n              \n                <ol start=\"47\" class=\"pre-context\" id=\"pre1578362370368\">\n                \n                  <li onclick=\"toggle(\'pre1578362370368\', \'post1578362370368\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370368\', \'post1578362370368\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370368\', \'post1578362370368\')\"><pre>def csrf_exempt(view_func):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370368\', \'post1578362370368\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370368\', \'post1578362370368\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370368\', \'post1578362370368\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370368\', \'post1578362370368\')\"><pre>    def wrapped_view(*args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"54\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1578362370368\', \'post1578362370368\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'55\' class=\"post-context\" id=\"post1578362370368\">\n                  \n                  <li onclick=\"toggle(\'pre1578362370368\', \'post1578362370368\')\"><pre>    wrapped_view.csrf_exempt = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370368\', \'post1578362370368\')\"><pre>    return wraps(view_func)(wrapped_view)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1578362370368\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1578362370368\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>view_func</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x0000016F7B9D10D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py</code>, line 70, in view\n\n          \n            <div class=\"context\" id=\"c1578362370304\">\n              \n                <ol start=\"63\" class=\"pre-context\" id=\"pre1578362370304\">\n                \n                  <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre>            self = cls(**initkwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre>                raise AttributeError(</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre>                )</pre></li>\n                \n                </ol>\n              \n              <ol start=\"70\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'71\' class=\"post-context\" id=\"post1578362370304\">\n                  \n                  <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre>        view.view_class = cls</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre>        # take name and docstring from class</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre>        update_wrapper(view, cls, updated=())</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370304\', \'post1578362370304\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1578362370304\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1578362370304\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>cls</td>\n                    <td class=\"code\"><pre>&lt;class &#x27;predictApp.views.WrappedAPIView&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>initkwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x0000016F7C830970&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 509, in dispatch\n\n          \n            <div class=\"context\" id=\"c1578362370240\">\n              \n                <ol start=\"502\" class=\"pre-context\" id=\"pre1578362370240\">\n                \n                  <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre>        except Exception as exc:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"509\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'510\' class=\"post-context\" id=\"post1578362370240\">\n                  \n                  <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre>        return self.response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370240\', \'post1578362370240\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1578362370240\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1578362370240\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x0000016F7C830970&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x0000016F7C830970&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 469, in handle_exception\n\n          \n            <div class=\"context\" id=\"c1578362370176\">\n              \n                <ol start=\"462\" class=\"pre-context\" id=\"pre1578362370176\">\n                \n                  <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre>        response = exception_handler(exc, context)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre>        if response is None:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"469\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'470\' class=\"post-context\" id=\"post1578362370176\">\n                  \n                  <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre>        response.exception = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370176\', \'post1578362370176\')\"><pre>        if settings.DEBUG:</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1578362370176\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1578362370176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>context</td>\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\n &#x27;kwargs&#x27;: {},\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,\n &#x27;view&#x27;: &lt;predictApp.views.WrappedAPIView object at 0x0000016F7C830970&gt;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exception_handler</td>\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x0000016F22E2DAF0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x0000016F7C830970&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 480, in raise_uncaught_exception\n\n          \n            <div class=\"context\" id=\"c1578362091712\">\n              \n                <ol start=\"473\" class=\"pre-context\" id=\"pre1578362091712\">\n                \n                  <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre>        if settings.DEBUG:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre>            request = self.request</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"480\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre>        raise exc</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'481\' class=\"post-context\" id=\"post1578362091712\">\n                  \n                  <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre>    # be overridden.</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362091712\', \'post1578362091712\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1578362091712\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1578362091712\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>renderer_format</td>\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x0000016F7C830970&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>use_plaintext_traceback</td>\n                    <td class=\"code\"><pre>True</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 506, in dispatch\n\n          \n            <div class=\"context\" id=\"c1578362370112\">\n              \n                <ol start=\"499\" class=\"pre-context\" id=\"pre1578362370112\">\n                \n                  <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre>            # Get the appropriate handler method</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"506\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'507\' class=\"post-context\" id=\"post1578362370112\">\n                  \n                  <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre>            response = self.handle_exception(exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370112\', \'post1578362370112\')\"><pre>        return self.response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1578362370112\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1578362370112\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x0000016F7C830970&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x0000016F7C830970&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py</code>, line 50, in handler\n\n          \n            <div class=\"context\" id=\"c1578362370048\">\n              \n                <ol start=\"43\" class=\"pre-context\" id=\"pre1578362370048\">\n                \n                  <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre>        assert isinstance(http_method_names, (list, tuple)), \\</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre>            &#x27;@api_view expected a list of strings, received %s&#x27; % type(http_method_names).__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre>        allowed_methods = set(http_method_names) | {&#x27;options&#x27;}</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre>        WrappedAPIView.http_method_names = [method.lower() for method in allowed_methods]</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre>        def handler(self, *args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"50\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre>            return func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'51\' class=\"post-context\" id=\"post1578362370048\">\n                  \n                  <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre>        for method in http_method_names:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre>            setattr(WrappedAPIView, method.lower(), handler)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre>        WrappedAPIView.__name__ = func.__name__</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362370048\', \'post1578362370048\')\"><pre>        WrappedAPIView.__module__ = func.__module__</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1578362370048\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1578362370048\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>func</td>\n                    <td class=\"code\"><pre>&lt;function getMonthlyPrediction at 0x0000016F7B9CEEE0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x0000016F7C830970&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py</code>, line 63, in getMonthlyPrediction\n\n          \n            <div class=\"context\" id=\"c1578362369984\">\n              \n                <ol start=\"56\" class=\"pre-context\" id=\"pre1578362369984\">\n                \n                  <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre>        r = str(needPrediction).replace(&quot;&#x27;&quot;,&#x27;&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre>        data = json.loads(r)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre>        data</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre>        for product in data:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre>            print(product)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"63\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre>            res = getMonthlyPredictionForUsers.getPredict(fileURL,product,months)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'64\' class=\"post-context\" id=\"post1578362369984\">\n                  \n                  <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre>            outputs.append(res)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre>        print(outputs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362369984\', \'post1578362369984\')\"><pre>        # res = getMonthlyPredictionForUsers.getPredict(fileURL,needPrediction,months)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1578362369984\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1578362369984\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>data</td>\n                    <td class=\"code\"><pre>[&#x27;chocolate cake&#x27;, &#x27;butter cake&#x27;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>outputs</td>\n                    <td class=\"code\"><pre>[]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>product</td>\n                    <td class=\"code\"><pre>&#x27;chocolate cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>query_params</td>\n                    <td class=\"code\"><pre>{&#x27;fileURL&#x27;: &#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;,\n &#x27;needPrediction&#x27;: &#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>r</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\services\\getMonthlyPredictionForUsers.py</code>, line 121, in getPredict\n\n          \n            <div class=\"context\" id=\"c1578362369920\">\n              \n                <ol start=\"114\" class=\"pre-context\" id=\"pre1578362369920\">\n                \n                  <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre>    datasetLogDiffShifting = indexedDataset_logScale - indexedDataset_logScale.shift()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre>    # plt.plot(datasetLogDiffShifting)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre>    datasetLogDiffShifting.dropna(inplace=True)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre>    # test_stationarity(datasetLogDiffShifting, needPrediction)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"121\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre>    decomposition = seasonal_decompose(indexedDataset_logScale)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'122\' class=\"post-context\" id=\"post1578362369920\">\n                  \n                  <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre>    trend = decomposition.trend</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre>    seasonal = decomposition.seasonal</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre>    residual = decomposition.resid</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1578362369920\', \'post1578362369920\')\"><pre>    # plt.subplot(411)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1578362369920\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1578362369920\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>         Month  chocolate cake  butter cake\n0   2009-01-01            99.4        110.4\n1   2009-02-01            99.8         99.8\n2   2009-03-01           100.2        100.2\n3   2009-04-01           100.2        100.2\n4   2009-05-01            99.7         99.7\n..         ...             ...          ...\n136 2020-05-01           121.8        121.8\n137 2020-06-01           119.9        119.9\n138 2020-07-01           120.8        120.8\n139 2020-08-01           120.2        120.2\n140 2020-09-01           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogDiffShifting</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-02-01        0.004016    -0.100942\n2009-03-01        0.004000     0.004000\n2009-04-01        0.000000     0.000000\n2009-05-01       -0.005003    -0.005003\n2009-06-01        0.004004     0.004004\n...                    ...          ...\n2020-05-01        0.009072     0.009072\n2020-06-01       -0.015722    -0.015722\n2020-07-01        0.007478     0.007478\n2020-08-01       -0.004979    -0.004979\n2020-09-01        0.000832     0.000832\n\n[140 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-12-01        0.000086    -0.008660\n2010-01-01       -0.000332    -0.000332\n2010-02-01       -0.000415    -0.000415\n2010-03-01        0.001668     0.001668\n2010-04-01       -0.001919    -0.001919\n...                    ...          ...\n2020-05-01        0.011780     0.011780\n2020-06-01       -0.004290    -0.004290\n2020-07-01        0.002773     0.002773\n2020-08-01       -0.002553    -0.002553\n2020-09-01       -0.002069    -0.002069\n\n[130 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingExponentialDecayAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        0.000000     0.000000\n2009-02-01        0.001950    -0.049014\n2009-03-01        0.003851    -0.029135\n2009-04-01        0.002803    -0.021208\n2009-05-01       -0.001707    -0.020346\n...                    ...          ...\n2020-05-01        0.040494     0.040492\n2020-06-01        0.023381     0.023379\n2020-07-01        0.029127     0.029125\n2020-08-01        0.022792     0.022790\n2020-09-01        0.022297     0.022295\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dfoutput</td>\n                    <td class=\"code\"><pre>Test statics                     -0.748146\np-values                          0.833882\n#Lags Used                        9.000000\n Number of Observations used    131.000000\ndtype: float64</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dftest</td>\n                    <td class=\"code\"><pre>(-0.7481457696540172,\n 0.8338815905691892,\n 9,\n 131,\n {&#x27;1%&#x27;: -3.481281802271349,\n  &#x27;10%&#x27;: -2.5786771965503177,\n  &#x27;5%&#x27;: -2.883867891664528},\n 278.29564832008947)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exponentialDecayWeightAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.601218     4.652182\n2009-03-01        4.603317     4.636303\n2009-04-01        4.604365     4.628376\n2009-05-01        4.603873     4.622512\n...                    ...          ...\n2020-05-01        4.761886     4.761888\n2020-06-01        4.763277     4.763279\n2020-07-01        4.765010     4.765012\n2020-08-01        4.766365     4.766367\n2020-09-01        4.767692     4.767693\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01            99.4        110.4\n2009-02-01            99.8         99.8\n2009-03-01           100.2        100.2\n2009-04-01           100.2        100.2\n2009-05-01            99.7         99.7\n...                    ...          ...\n2020-05-01           121.8        121.8\n2020-06-01           119.9        119.9\n2020-07-01           120.8        120.8\n2020-08-01           120.2        120.2\n2020-09-01           120.3        120.3\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset_logScale</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.603168     4.603168\n2009-03-01        4.607168     4.607168\n2009-04-01        4.607168     4.607168\n2009-05-01        4.602166     4.602166\n...                    ...          ...\n2020-05-01        4.802380     4.802380\n2020-06-01        4.786658     4.786658\n2020-07-01        4.794136     4.794136\n2020-08-01        4.789157     4.789157\n2020-09-01        4.789989     4.789989\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>mean</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x0000016F7DB31BB0&gt;,\n &lt;matplotlib.lines.Line2D object at 0x0000016F7DB31BE0&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        4.790600     4.790600\n2020-06-01        4.790948     4.790948\n2020-07-01        4.791363     4.791363\n2020-08-01        4.791710     4.791710\n2020-09-01        4.792058     4.792058\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingStd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        0.005103     0.005103\n2020-06-01        0.004617     0.004617\n2020-07-01        0.004665     0.004665\n2020-08-01        0.004287     0.004287\n2020-09-01        0.003920     0.003920\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;chocolate cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>orig</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x0000016F7DAEBB20&gt;,\n &lt;matplotlib.lines.Line2D object at 0x0000016F7DB314C0&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>rolmean</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01      120.375000   120.375000\n2020-06-01      120.416667   120.416667\n2020-07-01      120.466667   120.466667\n2020-08-01      120.508333   120.508333\n2020-09-01      120.550000   120.550000\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>rolstd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        0.615150     0.615150\n2020-06-01        0.557320     0.557320\n2020-07-01        0.563001     0.563001\n2020-08-01        0.517790     0.517790\n2020-09-01        0.473862     0.473862\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>std</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x0000016F7DB492E0&gt;,\n &lt;matplotlib.lines.Line2D object at 0x0000016F7DB49310&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>url</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n              </', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(33, 'U000010', 20, '1619605324860', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>TypeError\n          at /app/getMonthlyPrediction</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n  \n  <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = \'none\';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll(\'table.vars\'));\n      hideAll(document.querySelectorAll(\'ol.pre-context\'));\n      hideAll(document.querySelectorAll(\'ol.post-context\'));\n      hideAll(document.querySelectorAll(\'div.pastebin\'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == \'none\' ? \'block\': \'none\';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle(\'v\' + id);\n      var s = link.getElementsByTagName(\'span\')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle(\'browserTraceback\', \'pastebinTraceback\');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>TypeError\n       at /app/getMonthlyPrediction</h1>\n  <pre class=\"exception_value\">Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>GET</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://localhost:8000/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>3.1.7</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>TypeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td><span class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\indexes\\base.py</span>, line 372, in __new__</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>C:\\Users\\chana\\.conda\\envs\\mytensor\\python.exe</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.8.5</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#x27;D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\python38.zip&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\DLLs&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib\\\\site-packages&#x27;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Wed, 28 Apr 2021 10:22:02 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py</code>, line 47, in inner\n\n          \n            <div class=\"context\" id=\"c1554744723008\">\n              \n                <ol start=\"40\" class=\"pre-context\" id=\"pre1554744723008\">\n                \n                  <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre>            return response</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre>        return inner</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre>    else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre>        @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre>        def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"47\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre>                response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'48\' class=\"post-context\" id=\"post1554744723008\">\n                  \n                  <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre>            except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre>            return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre>        return inner</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744723008\', \'post1554744723008\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1554744723008\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1554744723008\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x00000169A112D640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py</code>, line 181, in _get_response\n\n          \n            <div class=\"context\" id=\"c1554744722944\">\n              \n                <ol start=\"174\" class=\"pre-context\" id=\"pre1554744722944\">\n                \n                  <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre>        if response is None:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"181\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'182\' class=\"post-context\" id=\"post1554744722944\">\n                  \n                  <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre>            except Exception as e:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre>                if response is None:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre>                    raise</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722944\', \'post1554744722944\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1554744722944\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1554744722944\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x00000169FB101160&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>middleware_method</td>\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x00000169FB26EC70&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x00000169A112D640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>wrapped_callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x00000169FB101160&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n\n          \n            <div class=\"context\" id=\"c1554744722880\">\n              \n                <ol start=\"47\" class=\"pre-context\" id=\"pre1554744722880\">\n                \n                  <li onclick=\"toggle(\'pre1554744722880\', \'post1554744722880\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722880\', \'post1554744722880\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722880\', \'post1554744722880\')\"><pre>def csrf_exempt(view_func):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722880\', \'post1554744722880\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722880\', \'post1554744722880\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722880\', \'post1554744722880\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722880\', \'post1554744722880\')\"><pre>    def wrapped_view(*args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"54\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1554744722880\', \'post1554744722880\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'55\' class=\"post-context\" id=\"post1554744722880\">\n                  \n                  <li onclick=\"toggle(\'pre1554744722880\', \'post1554744722880\')\"><pre>    wrapped_view.csrf_exempt = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722880\', \'post1554744722880\')\"><pre>    return wraps(view_func)(wrapped_view)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1554744722880\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1554744722880\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>view_func</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x00000169FB1010D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py</code>, line 70, in view\n\n          \n            <div class=\"context\" id=\"c1554744722816\">\n              \n                <ol start=\"63\" class=\"pre-context\" id=\"pre1554744722816\">\n                \n                  <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre>            self = cls(**initkwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre>                raise AttributeError(</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre>                )</pre></li>\n                \n                </ol>\n              \n              <ol start=\"70\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'71\' class=\"post-context\" id=\"post1554744722816\">\n                  \n                  <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre>        view.view_class = cls</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre>        # take name and docstring from class</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre>        update_wrapper(view, cls, updated=())</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722816\', \'post1554744722816\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1554744722816\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1554744722816\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>cls</td>\n                    <td class=\"code\"><pre>&lt;class &#x27;predictApp.views.WrappedAPIView&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>initkwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000169FBF71610&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 509, in dispatch\n\n          \n            <div class=\"context\" id=\"c1554744722752\">\n              \n                <ol start=\"502\" class=\"pre-context\" id=\"pre1554744722752\">\n                \n                  <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre>        except Exception as exc:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"509\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'510\' class=\"post-context\" id=\"post1554744722752\">\n                  \n                  <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre>        return self.response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722752\', \'post1554744722752\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1554744722752\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1554744722752\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x00000169FBF71610&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000169FBF71610&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 469, in handle_exception\n\n          \n            <div class=\"context\" id=\"c1554744722688\">\n              \n                <ol start=\"462\" class=\"pre-context\" id=\"pre1554744722688\">\n                \n                  <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre>        response = exception_handler(exc, context)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre>        if response is None:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"469\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'470\' class=\"post-context\" id=\"post1554744722688\">\n                  \n                  <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre>        response.exception = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722688\', \'post1554744722688\')\"><pre>        if settings.DEBUG:</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1554744722688\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1554744722688\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>context</td>\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\n &#x27;kwargs&#x27;: {},\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,\n &#x27;view&#x27;: &lt;predictApp.views.WrappedAPIView object at 0x00000169FBF71610&gt;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exception_handler</td>\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x00000169A255DAF0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000169FBF71610&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 480, in raise_uncaught_exception\n\n          \n            <div class=\"context\" id=\"c1554744722624\">\n              \n                <ol start=\"473\" class=\"pre-context\" id=\"pre1554744722624\">\n                \n                  <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre>        if settings.DEBUG:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre>            request = self.request</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"480\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre>        raise exc</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'481\' class=\"post-context\" id=\"post1554744722624\">\n                  \n                  <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre>    # be overridden.</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722624\', \'post1554744722624\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1554744722624\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1554744722624\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>renderer_format</td>\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000169FBF71610&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>use_plaintext_traceback</td>\n                    <td class=\"code\"><pre>True</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 506, in dispatch\n\n          \n            <div class=\"context\" id=\"c1554744722560\">\n              \n                <ol start=\"499\" class=\"pre-context\" id=\"pre1554744722560\">\n                \n                  <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre>            # Get the appropriate handler method</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"506\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'507\' class=\"post-context\" id=\"post1554744722560\">\n                  \n                  <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre>            response = self.handle_exception(exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722560\', \'post1554744722560\')\"><pre>        return self.response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1554744722560\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1554744722560\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x00000169FBF71610&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000169FBF71610&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py</code>, line 50, in handler\n\n          \n            <div class=\"context\" id=\"c1554744722496\">\n              \n                <ol start=\"43\" class=\"pre-context\" id=\"pre1554744722496\">\n                \n                  <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre>        assert isinstance(http_method_names, (list, tuple)), \\</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre>            &#x27;@api_view expected a list of strings, received %s&#x27; % type(http_method_names).__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre>        allowed_methods = set(http_method_names) | {&#x27;options&#x27;}</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre>        WrappedAPIView.http_method_names = [method.lower() for method in allowed_methods]</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre>        def handler(self, *args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"50\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre>            return func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'51\' class=\"post-context\" id=\"post1554744722496\">\n                  \n                  <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre>        for method in http_method_names:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre>            setattr(WrappedAPIView, method.lower(), handler)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre>        WrappedAPIView.__name__ = func.__name__</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722496\', \'post1554744722496\')\"><pre>        WrappedAPIView.__module__ = func.__module__</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1554744722496\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1554744722496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>func</td>\n                    <td class=\"code\"><pre>&lt;function getMonthlyPrediction at 0x00000169FB0FEEE0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000169FBF71610&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py</code>, line 63, in getMonthlyPrediction\n\n          \n            <div class=\"context\" id=\"c1554744722432\">\n              \n                <ol start=\"56\" class=\"pre-context\" id=\"pre1554744722432\">\n                \n                  <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre>        r = str(needPrediction).replace(&quot;&#x27;&quot;,&#x27;&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre>        data = json.loads(r)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre>        data</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre>        for product in data:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre>            print(product)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"63\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre>            res = getMonthlyPredictionForUsers.getPredict(fileURL,product,months)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'64\' class=\"post-context\" id=\"post1554744722432\">\n                  \n                  <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre>            # outputs.append(res)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre>            print(res)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre>        # print(outputs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722432\', \'post1554744722432\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1554744722432\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1554744722432\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>data</td>\n                    <td class=\"code\"><pre>[&#x27;chocolate cake&#x27;, &#x27;butter cake&#x27;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>outputs</td>\n                    <td class=\"code\"><pre>[]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>product</td>\n                    <td class=\"code\"><pre>&#x27;chocolate cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>query_params</td>\n                    <td class=\"code\"><pre>{&#x27;fileURL&#x27;: &#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;,\n &#x27;needPrediction&#x27;: &#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>r</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\services\\getMonthlyPredictionForUsers.py</code>, line 121, in getPredict\n\n          \n            <div class=\"context\" id=\"c1554744722368\">\n              \n                <ol start=\"114\" class=\"pre-context\" id=\"pre1554744722368\">\n                \n                  <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre>    datasetLogDiffShifting = indexedDataset_logScale - indexedDataset_logScale.shift()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre>    # plt.plot(datasetLogDiffShifting)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre>    datasetLogDiffShifting.dropna(inplace=True)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre>    # test_stationarity(datasetLogDiffShifting, needPrediction)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"121\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre>    decomposition = seasonal_decompose(indexedDataset_logScale)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'122\' class=\"post-context\" id=\"post1554744722368\">\n                  \n                  <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre>    trend = decomposition.trend</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre>    seasonal = decomposition.seasonal</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre>    residual = decomposition.resid</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1554744722368\', \'post1554744722368\')\"><pre>    # plt.subplot(411)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1554744722368\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1554744722368\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>         Month  chocolate cake  butter cake\n0   2009-01-01            99.4        110.4\n1   2009-02-01            99.8         99.8\n2   2009-03-01           100.2        100.2\n3   2009-04-01           100.2        100.2\n4   2009-05-01            99.7         99.7\n..         ...             ...          ...\n136 2020-05-01           121.8        121.8\n137 2020-06-01           119.9        119.9\n138 2020-07-01           120.8        120.8\n139 2020-08-01           120.2        120.2\n140 2020-09-01           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogDiffShifting</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-02-01        0.004016    -0.100942\n2009-03-01        0.004000     0.004000\n2009-04-01        0.000000     0.000000\n2009-05-01       -0.005003    -0.005003\n2009-06-01        0.004004     0.004004\n...                    ...          ...\n2020-05-01        0.009072     0.009072\n2020-06-01       -0.015722    -0.015722\n2020-07-01        0.007478     0.007478\n2020-08-01       -0.004979    -0.004979\n2020-09-01        0.000832     0.000832\n\n[140 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-12-01        0.000086    -0.008660\n2010-01-01       -0.000332    -0.000332\n2010-02-01       -0.000415    -0.000415\n2010-03-01        0.001668     0.001668\n2010-04-01       -0.001919    -0.001919\n...                    ...          ...\n2020-05-01        0.011780     0.011780\n2020-06-01       -0.004290    -0.004290\n2020-07-01        0.002773     0.002773\n2020-08-01       -0.002553    -0.002553\n2020-09-01       -0.002069    -0.002069\n\n[130 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingExponentialDecayAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        0.000000     0.000000\n2009-02-01        0.001950    -0.049014\n2009-03-01        0.003851    -0.029135\n2009-04-01        0.002803    -0.021208\n2009-05-01       -0.001707    -0.020346\n...                    ...          ...\n2020-05-01        0.040494     0.040492\n2020-06-01        0.023381     0.023379\n2020-07-01        0.029127     0.029125\n2020-08-01        0.022792     0.022790\n2020-09-01        0.022297     0.022295\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dfoutput</td>\n                    <td class=\"code\"><pre>Test statics                     -0.748146\np-values                          0.833882\n#Lags Used                        9.000000\n Number of Observations used    131.000000\ndtype: float64</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dftest</td>\n                    <td class=\"code\"><pre>(-0.7481457696540172,\n 0.8338815905691892,\n 9,\n 131,\n {&#x27;1%&#x27;: -3.481281802271349,\n  &#x27;10%&#x27;: -2.5786771965503177,\n  &#x27;5%&#x27;: -2.883867891664528},\n 278.29564832008947)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exponentialDecayWeightAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.601218     4.652182\n2009-03-01        4.603317     4.636303\n2009-04-01        4.604365     4.628376\n2009-05-01        4.603873     4.622512\n...                    ...          ...\n2020-05-01        4.761886     4.761888\n2020-06-01        4.763277     4.763279\n2020-07-01        4.765010     4.765012\n2020-08-01        4.766365     4.766367\n2020-09-01        4.767692     4.767693\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01            99.4        110.4\n2009-02-01            99.8         99.8\n2009-03-01           100.2        100.2\n2009-04-01           100.2        100.2\n2009-05-01            99.7         99.7\n...                    ...          ...\n2020-05-01           121.8        121.8\n2020-06-01           119.9        119.9\n2020-07-01           120.8        120.8\n2020-08-01           120.2        120.2\n2020-09-01           120.3        120.3\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset_logScale</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.603168     4.603168\n2009-03-01        4.607168     4.607168\n2009-04-01        4.607168     4.607168\n2009-05-01        4.602166     4.602166\n...                    ...          ...\n2020-05-01        4.802380     4.802380\n2020-06-01        4.786658     4.786658\n2020-07-01        4.794136     4.794136\n2020-08-01        4.789157     4.789157\n2020-09-01        4.789989     4.789989\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>mean</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x00000169FCAB2280&gt;,\n &lt;matplotlib.lines.Line2D object at 0x00000169FCAB22B0&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        4.790600     4.790600\n2020-06-01        4.790948     4.790948\n2020-07-01        4.791363     4.791363\n2020-08-01        4.791710     4.791710\n2020-09-01        4.792058     4.792058\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingStd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        0.005103     0.005103\n2020-06-01        0.004617     0.004617\n2020-07-01        0.004665     0.004665\n2020-08-01        0.004287     0.004287\n2020-09-01        0.003920     0.003920\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;chocolate cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>orig</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x00000169FCA65280&gt;,\n &lt;matplotlib.lines.Line2D object at 0x00000169FCA97B80&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>rolmean</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01      120.375000   120.375000\n2020-06-01      120.416667   120.416667\n2020-07-01      120.466667   120.466667\n2020-08-01      120.508333   120.508333\n2020-09-01      120.550000   120.550000\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>rolstd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        0.615150     0.615150\n2020-06-01        0.557320     0.557320\n2020-07-01        0.563001     0.563001\n2020-08-01        0.517790     0.517790\n2020-09-01        0.473862     0.473862\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>std</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x00000169FCAB29A0&gt;,\n &lt;matplotlib.lines.Line2D object at 0x00000169FCAB29D0&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>url</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(34, 'U000010', 20, '1619605924519', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>ValueError\n          at /app/getMonthlyPrediction</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n  \n  <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = \'none\';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll(\'table.vars\'));\n      hideAll(document.querySelectorAll(\'ol.pre-context\'));\n      hideAll(document.querySelectorAll(\'ol.post-context\'));\n      hideAll(document.querySelectorAll(\'div.pastebin\'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == \'none\' ? \'block\': \'none\';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle(\'v\' + id);\n      var s = link.getElementsByTagName(\'span\')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle(\'browserTraceback\', \'pastebinTraceback\');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>ValueError\n       at /app/getMonthlyPrediction</h1>\n  <pre class=\"exception_value\">The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>GET</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://localhost:8000/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>3.1.7</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>ValueError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td><span class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\generic.py</span>, line 1441, in __nonzero__</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>C:\\Users\\chana\\.conda\\envs\\mytensor\\python.exe</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.8.5</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#x27;D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\python38.zip&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\DLLs&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib\\\\site-packages&#x27;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Wed, 28 Apr 2021 10:32:02 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py</code>, line 47, in inner\n\n          \n            <div class=\"context\" id=\"c2558774058688\">\n              \n                <ol start=\"40\" class=\"pre-context\" id=\"pre2558774058688\">\n                \n                  <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre>            return response</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre>        return inner</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre>    else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre>        @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre>        def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"47\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre>                response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'48\' class=\"post-context\" id=\"post2558774058688\">\n                  \n                  <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre>            except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre>            return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre>        return inner</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774058688\', \'post2558774058688\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2558774058688\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2558774058688\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>ValueError(&#x27;The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().&#x27;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x00000253E7C5D640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py</code>, line 181, in _get_response\n\n          \n            <div class=\"context\" id=\"c2558774086400\">\n              \n                <ol start=\"174\" class=\"pre-context\" id=\"pre2558774086400\">\n                \n                  <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre>        if response is None:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"181\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'182\' class=\"post-context\" id=\"post2558774086400\">\n                  \n                  <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre>            except Exception as e:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre>                if response is None:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre>                    raise</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774086400\', \'post2558774086400\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2558774086400\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2558774086400\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x00000253C1EC00D0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>middleware_method</td>\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x00000253C2031AF0&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x00000253E7C5D640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>wrapped_callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x00000253C1EC00D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n\n          \n            <div class=\"context\" id=\"c2558774086016\">\n              \n                <ol start=\"47\" class=\"pre-context\" id=\"pre2558774086016\">\n                \n                  <li onclick=\"toggle(\'pre2558774086016\', \'post2558774086016\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774086016\', \'post2558774086016\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774086016\', \'post2558774086016\')\"><pre>def csrf_exempt(view_func):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774086016\', \'post2558774086016\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774086016\', \'post2558774086016\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774086016\', \'post2558774086016\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774086016\', \'post2558774086016\')\"><pre>    def wrapped_view(*args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"54\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2558774086016\', \'post2558774086016\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'55\' class=\"post-context\" id=\"post2558774086016\">\n                  \n                  <li onclick=\"toggle(\'pre2558774086016\', \'post2558774086016\')\"><pre>    wrapped_view.csrf_exempt = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774086016\', \'post2558774086016\')\"><pre>    return wraps(view_func)(wrapped_view)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2558774086016\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2558774086016\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>view_func</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x00000253C1EC0040&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py</code>, line 70, in view\n\n          \n            <div class=\"context\" id=\"c2558774087488\">\n              \n                <ol start=\"63\" class=\"pre-context\" id=\"pre2558774087488\">\n                \n                  <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre>            self = cls(**initkwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre>                raise AttributeError(</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre>                )</pre></li>\n                \n                </ol>\n              \n              <ol start=\"70\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'71\' class=\"post-context\" id=\"post2558774087488\">\n                  \n                  <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre>        view.view_class = cls</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre>        # take name and docstring from class</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre>        update_wrapper(view, cls, updated=())</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774087488\', \'post2558774087488\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2558774087488\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2558774087488\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>cls</td>\n                    <td class=\"code\"><pre>&lt;class &#x27;predictApp.views.WrappedAPIView&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>initkwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000253C2D13A90&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 509, in dispatch\n\n          \n            <div class=\"context\" id=\"c2558774084224\">\n              \n                <ol start=\"502\" class=\"pre-context\" id=\"pre2558774084224\">\n                \n                  <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre>        except Exception as exc:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"509\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'510\' class=\"post-context\" id=\"post2558774084224\">\n                  \n                  <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre>        return self.response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774084224\', \'post2558774084224\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2558774084224\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2558774084224\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x00000253C2D13A90&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000253C2D13A90&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 469, in handle_exception\n\n          \n            <div class=\"context\" id=\"c2558774113664\">\n              \n                <ol start=\"462\" class=\"pre-context\" id=\"pre2558774113664\">\n                \n                  <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre>        response = exception_handler(exc, context)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre>        if response is None:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"469\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'470\' class=\"post-context\" id=\"post2558774113664\">\n                  \n                  <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre>        response.exception = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774113664\', \'post2558774113664\')\"><pre>        if settings.DEBUG:</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2558774113664\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2558774113664\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>context</td>\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\n &#x27;kwargs&#x27;: {},\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,\n &#x27;view&#x27;: &lt;predictApp.views.WrappedAPIView object at 0x00000253C2D13A90&gt;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>ValueError(&#x27;The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().&#x27;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exception_handler</td>\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x00000253E90A5A60&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000253C2D13A90&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 480, in raise_uncaught_exception\n\n          \n            <div class=\"context\" id=\"c2558774110464\">\n              \n                <ol start=\"473\" class=\"pre-context\" id=\"pre2558774110464\">\n                \n                  <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre>        if settings.DEBUG:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre>            request = self.request</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"480\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre>        raise exc</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'481\' class=\"post-context\" id=\"post2558774110464\">\n                  \n                  <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre>    # be overridden.</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774110464\', \'post2558774110464\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2558774110464\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2558774110464\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>ValueError(&#x27;The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().&#x27;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>renderer_format</td>\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000253C2D13A90&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>use_plaintext_traceback</td>\n                    <td class=\"code\"><pre>True</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 506, in dispatch\n\n          \n            <div class=\"context\" id=\"c2558753685248\">\n              \n                <ol start=\"499\" class=\"pre-context\" id=\"pre2558753685248\">\n                \n                  <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre>            # Get the appropriate handler method</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"506\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'507\' class=\"post-context\" id=\"post2558753685248\">\n                  \n                  <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre>            response = self.handle_exception(exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558753685248\', \'post2558753685248\')\"><pre>        return self.response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2558753685248\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2558753685248\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x00000253C2D13A90&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000253C2D13A90&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py</code>, line 50, in handler\n\n          \n            <div class=\"context\" id=\"c2558774043584\">\n              \n                <ol start=\"43\" class=\"pre-context\" id=\"pre2558774043584\">\n                \n                  <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre>        assert isinstance(http_method_names, (list, tuple)), \\</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre>            &#x27;@api_view expected a list of strings, received %s&#x27; % type(http_method_names).__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre>        allowed_methods = set(http_method_names) | {&#x27;options&#x27;}</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre>        WrappedAPIView.http_method_names = [method.lower() for method in allowed_methods]</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre>        def handler(self, *args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"50\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre>            return func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'51\' class=\"post-context\" id=\"post2558774043584\">\n                  \n                  <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre>        for method in http_method_names:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre>            setattr(WrappedAPIView, method.lower(), handler)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre>        WrappedAPIView.__name__ = func.__name__</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774043584\', \'post2558774043584\')\"><pre>        WrappedAPIView.__module__ = func.__module__</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2558774043584\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2558774043584\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>func</td>\n                    <td class=\"code\"><pre>&lt;function getMonthlyPrediction at 0x00000253C1EBCE50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000253C2D13A90&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py</code>, line 60, in getMonthlyPrediction\n\n          \n            <div class=\"context\" id=\"c2558774045248\">\n              \n                <ol start=\"53\" class=\"pre-context\" id=\"pre2558774045248\">\n                \n                  <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre>        needPrediction = query_params.get(&#x27;needPrediction&#x27;) if query_params.get(&#x27;needPrediction&#x27;) else &#x27;&#x27;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre>        months = int(query_params.get(&#x27;monthsCount&#x27;)) if query_params.get(&#x27;monthsCount&#x27;) else 1</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre>    </pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre>        url = fileURL</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre>        dataset = pd.read_csv(url)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"60\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre>        if dataset:</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'61\' class=\"post-context\" id=\"post2558774045248\">\n                  \n                  <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre>          print(&#x27;file found xxxxxxxxxxxxxxxxxx&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre>          print(&#x27;file not found lllllllllllllllllllllll&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre>        # outputs = []</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774045248\', \'post2558774045248\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2558774045248\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2558774045248\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>        Month  chocolate cake  butter cake\n0    1/1/2009            99.4        110.4\n1    2/1/2009            99.8         99.8\n2    3/1/2009           100.2        100.2\n3    4/1/2009           100.2        100.2\n4    5/1/2009            99.7         99.7\n..        ...             ...          ...\n136  5/1/2020           121.8        121.8\n137  6/1/2020           119.9        119.9\n138  7/1/2020           120.8        120.8\n139  8/1/2020           120.2        120.2\n140  9/1/2020           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>query_params</td>\n                    <td class=\"code\"><pre>{&#x27;fileURL&#x27;: &#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;,\n &#x27;needPrediction&#x27;: &#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>url</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\generic.py</code>, line 1441, in __nonzero__\n\n          \n            <div class=\"context\" id=\"c2558774108416\">\n              \n                <ol start=\"1434\" class=\"pre-context\" id=\"pre2558774108416\">\n                \n                  <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre>        new_data = self._mgr.apply(operator.invert)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre>        result = self._constructor(new_data).__finalize__(self, method=&quot;__invert__&quot;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre>        return result</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre>    @final</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre>    def __nonzero__(self):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"1441\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre>        raise ValueError(</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'1442\' class=\"post-context\" id=\"post2558774108416\">\n                  \n                  <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre>            f&quot;The truth value of a {type(self).__name__} is ambiguous. &quot;</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre>            &quot;Use a.empty, a.bool(), a.item(), a.any() or a.all().&quot;</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre>        )</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre>    __bool__ = __nonzero__</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2558774108416\', \'post2558774108416\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2558774108416\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2558774108416\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>        Month  chocolate cake  butter cake\n0    1/1/2009            99.4        110.4\n1    2/1/2009            99.8         99.8\n2    3/1/2009           100.2        100.2\n3    4/1/2009           100.2        100.2\n4    5/1/2009            99.7         99.7\n..        ...             ...          ...\n136  5/1/2020           121.8        121.8\n137  6/1/2020           119.9        119.9\n138  7/1/2020           120.8        120.8\n139  8/1/2020           120.2        120.2\n140  9/1/2020           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"ValueError at /app/getMonthlyPrediction\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://localhost:8000/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D\n\nDjango Version: 3.1.7\nPython Version: 3.8.5\nInstalled Applications:\n[&#x27;django.contrib.admin&#x27;,\n &#x27;django.contrib.auth&#x27;,\n &#x27;django.contrib.contenttypes&#x27;,\n &#x27;django.contrib.sessions&#x27;,\n &#x27;django.contrib.messages&#x27;,\n &#x27;django.contrib.staticfiles&#x27;,\n &#x27;rest_framework&#x27;,\n &#x27;predictApp&#x27;]\nInstalled Middleware:\n[&#x27;django.middleware.security.SecurityMiddleware&#x27;,\n &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]\n\n\n\nTraceback (most recent call last):\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py\", line 47, in inner\n    response = get_response(request)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 181, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py\", line 54, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py\", line 70, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py\", line 50, in handler\n    return func(*args, **kwargs)\n  File \"D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py\", line 60, in getMonthlyPrediction\n    if dataset:\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\generic.py\", line 1441, in __nonzero__\n    raise ValueError(\n\nException Type: ValueError at /app/getMonthlyPrediction\nException Value: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>AnonymousUser</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>fileURL</td>\n            <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n          </tr>\n        \n          <tr>\n            <td>needPrediction</td>\n            <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <p>No cookie data</p>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ALLUSERSPROFILE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\AppData\\\\Roaming&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHOCOLATEYINSTALL</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\chocolatey&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHOCOLATEYLASTPATHUPDATE</td>\n          <td class=\"code\"><pre>&#x27;132571304489820617&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHROME_CRASHPAD_PIPE_NAME</td>\n          <td class=\"code\"><pre>&#x27;\\\\\\\\.\\\\pipe\\\\crashpad_13460_LMTVQYFUCUIWFYKC&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COLORTERM</td>\n          <td class=\"code\"><pre>&#x27;truecolor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMFILES</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMFILES(X86)</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files (x86)\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMW6432</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMPUTERNAME</td>\n          <td class=\"code\"><pre>&#x27;DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMSPEC</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\WINDOWS\\\\system32\\\\cmd.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_DEFAULT_ENV</td>\n          <td class=\"code\"><pre>&#x27;mytensor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_EXE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\Anaconda3\\\\Scripts\\\\conda.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PREFIX</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PROMPT_MODIFIER</td>\n          <td class=\"code\"><pre>&#x27;(mytensor) &#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PYTHON_EXE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\Anaconda3\\\\python.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_SHLVL</td>\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#x27;text/plain&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DJANGO_SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#x27;cakeryAiTensorflow.settings&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRIVERDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Windows\\\\System32\\\\Drivers\\\\DriverData&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FPS_BROWSER_APP_PROFILE_STRING</td>\n          <td class=\"code\"><pre>&#x27;Internet Explorer&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FPS_BROWSER_USER_PROFILE_STRING</td>\n          <td class=\"code\"><pre>&#x27;Default&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GATEWAY_INTERFACE</td>\n          <td class=\"code\"><pre>&#x27;CGI/1.1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GIT_ASKPASS</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HOMEDRIVE</td>\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HOMEPATH</td>\n          <td class=\"code\"><pre>&#x27;\\\\Users\\\\chana&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#x27;close&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#x27;localhost:8000&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANG</td>\n          <td class=\"code\"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALAPPDATA</td>\n   ', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(35, 'U000010', 20, '1619606090937', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>ValueError\n          at /app/getMonthlyPrediction</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n  \n  <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = \'none\';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll(\'table.vars\'));\n      hideAll(document.querySelectorAll(\'ol.pre-context\'));\n      hideAll(document.querySelectorAll(\'ol.post-context\'));\n      hideAll(document.querySelectorAll(\'div.pastebin\'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == \'none\' ? \'block\': \'none\';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle(\'v\' + id);\n      var s = link.getElementsByTagName(\'span\')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle(\'browserTraceback\', \'pastebinTraceback\');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>ValueError\n       at /app/getMonthlyPrediction</h1>\n  <pre class=\"exception_value\">The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>GET</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://localhost:8000/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>3.1.7</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>ValueError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td><span class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\generic.py</span>, line 1441, in __nonzero__</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>C:\\Users\\chana\\.conda\\envs\\mytensor\\python.exe</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.8.5</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#x27;D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\python38.zip&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\DLLs&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib\\\\site-packages&#x27;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Wed, 28 Apr 2021 10:34:48 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py</code>, line 47, in inner\n\n          \n            <div class=\"context\" id=\"c2227836953856\">\n              \n                <ol start=\"40\" class=\"pre-context\" id=\"pre2227836953856\">\n                \n                  <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre>            return response</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre>        return inner</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre>    else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre>        @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre>        def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"47\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre>                response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'48\' class=\"post-context\" id=\"post2227836953856\">\n                  \n                  <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre>            except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre>            return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre>        return inner</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836953856\', \'post2227836953856\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2227836953856\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2227836953856\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>ValueError(&#x27;The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().&#x27;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x00000206DA4FD640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py</code>, line 181, in _get_response\n\n          \n            <div class=\"context\" id=\"c2227835696448\">\n              \n                <ol start=\"174\" class=\"pre-context\" id=\"pre2227835696448\">\n                \n                  <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre>        if response is None:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"181\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'182\' class=\"post-context\" id=\"post2227835696448\">\n                  \n                  <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre>            except Exception as e:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre>                if response is None:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre>                    raise</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835696448\', \'post2227835696448\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2227835696448\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2227835696448\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x00000206B47600D0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>middleware_method</td>\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x00000206B48B7B50&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x00000206DA4FD640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>wrapped_callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x00000206B47600D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n\n          \n            <div class=\"context\" id=\"c2227835786432\">\n              \n                <ol start=\"47\" class=\"pre-context\" id=\"pre2227835786432\">\n                \n                  <li onclick=\"toggle(\'pre2227835786432\', \'post2227835786432\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835786432\', \'post2227835786432\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835786432\', \'post2227835786432\')\"><pre>def csrf_exempt(view_func):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835786432\', \'post2227835786432\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835786432\', \'post2227835786432\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835786432\', \'post2227835786432\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835786432\', \'post2227835786432\')\"><pre>    def wrapped_view(*args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"54\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2227835786432\', \'post2227835786432\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'55\' class=\"post-context\" id=\"post2227835786432\">\n                  \n                  <li onclick=\"toggle(\'pre2227835786432\', \'post2227835786432\')\"><pre>    wrapped_view.csrf_exempt = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835786432\', \'post2227835786432\')\"><pre>    return wraps(view_func)(wrapped_view)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2227835786432\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2227835786432\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>view_func</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x00000206B4760040&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py</code>, line 70, in view\n\n          \n            <div class=\"context\" id=\"c2227835786688\">\n              \n                <ol start=\"63\" class=\"pre-context\" id=\"pre2227835786688\">\n                \n                  <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre>            self = cls(**initkwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre>                raise AttributeError(</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre>                )</pre></li>\n                \n                </ol>\n              \n              <ol start=\"70\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'71\' class=\"post-context\" id=\"post2227835786688\">\n                  \n                  <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre>        view.view_class = cls</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre>        # take name and docstring from class</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre>        update_wrapper(view, cls, updated=())</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835786688\', \'post2227835786688\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2227835786688\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2227835786688\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>cls</td>\n                    <td class=\"code\"><pre>&lt;class &#x27;predictApp.views.WrappedAPIView&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>initkwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000206B55BB4F0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 509, in dispatch\n\n          \n            <div class=\"context\" id=\"c2227835785920\">\n              \n                <ol start=\"502\" class=\"pre-context\" id=\"pre2227835785920\">\n                \n                  <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre>        except Exception as exc:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"509\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'510\' class=\"post-context\" id=\"post2227835785920\">\n                  \n                  <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre>        return self.response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835785920\', \'post2227835785920\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2227835785920\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2227835785920\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x00000206B55BB4F0&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000206B55BB4F0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 469, in handle_exception\n\n          \n            <div class=\"context\" id=\"c2227805805952\">\n              \n                <ol start=\"462\" class=\"pre-context\" id=\"pre2227805805952\">\n                \n                  <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre>        response = exception_handler(exc, context)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre>        if response is None:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"469\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'470\' class=\"post-context\" id=\"post2227805805952\">\n                  \n                  <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre>        response.exception = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227805805952\', \'post2227805805952\')\"><pre>        if settings.DEBUG:</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2227805805952\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2227805805952\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>context</td>\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\n &#x27;kwargs&#x27;: {},\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,\n &#x27;view&#x27;: &lt;predictApp.views.WrappedAPIView object at 0x00000206B55BB4F0&gt;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>ValueError(&#x27;The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().&#x27;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exception_handler</td>\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x00000206DB944A60&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000206B55BB4F0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 480, in raise_uncaught_exception\n\n          \n            <div class=\"context\" id=\"c2227835735872\">\n              \n                <ol start=\"473\" class=\"pre-context\" id=\"pre2227835735872\">\n                \n                  <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre>        if settings.DEBUG:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre>            request = self.request</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"480\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre>        raise exc</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'481\' class=\"post-context\" id=\"post2227835735872\">\n                  \n                  <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre>    # be overridden.</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835735872\', \'post2227835735872\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2227835735872\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2227835735872\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>ValueError(&#x27;The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().&#x27;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>renderer_format</td>\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000206B55BB4F0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>use_plaintext_traceback</td>\n                    <td class=\"code\"><pre>True</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 506, in dispatch\n\n          \n            <div class=\"context\" id=\"c2227835742976\">\n              \n                <ol start=\"499\" class=\"pre-context\" id=\"pre2227835742976\">\n                \n                  <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre>            # Get the appropriate handler method</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"506\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'507\' class=\"post-context\" id=\"post2227835742976\">\n                  \n                  <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre>            response = self.handle_exception(exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227835742976\', \'post2227835742976\')\"><pre>        return self.response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2227835742976\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2227835742976\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x00000206B55BB4F0&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000206B55BB4F0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py</code>, line 50, in handler\n\n          \n            <div class=\"context\" id=\"c2227836931520\">\n              \n                <ol start=\"43\" class=\"pre-context\" id=\"pre2227836931520\">\n                \n                  <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre>        assert isinstance(http_method_names, (list, tuple)), \\</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre>            &#x27;@api_view expected a list of strings, received %s&#x27; % type(http_method_names).__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre>        allowed_methods = set(http_method_names) | {&#x27;options&#x27;}</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre>        WrappedAPIView.http_method_names = [method.lower() for method in allowed_methods]</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre>        def handler(self, *args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"50\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre>            return func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'51\' class=\"post-context\" id=\"post2227836931520\">\n                  \n                  <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre>        for method in http_method_names:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre>            setattr(WrappedAPIView, method.lower(), handler)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre>        WrappedAPIView.__name__ = func.__name__</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931520\', \'post2227836931520\')\"><pre>        WrappedAPIView.__module__ = func.__module__</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2227836931520\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2227836931520\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>func</td>\n                    <td class=\"code\"><pre>&lt;function getMonthlyPrediction at 0x00000206B475CE50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000206B55BB4F0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py</code>, line 60, in getMonthlyPrediction\n\n          \n            <div class=\"context\" id=\"c2227836931648\">\n              \n                <ol start=\"53\" class=\"pre-context\" id=\"pre2227836931648\">\n                \n                  <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre>        needPrediction = query_params.get(&#x27;needPrediction&#x27;) if query_params.get(&#x27;needPrediction&#x27;) else &#x27;&#x27;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre>        months = int(query_params.get(&#x27;monthsCount&#x27;)) if query_params.get(&#x27;monthsCount&#x27;) else 1</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre>    </pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre>        url = fileURL</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre>        dataset = pd.read_csv(url)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"60\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre>        if pd.read_csv(url):</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'61\' class=\"post-context\" id=\"post2227836931648\">\n                  \n                  <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre>          print(&#x27;file found xxxxxxxxxxxxxxxxxx&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre>          print(&#x27;file not found lllllllllllllllllllllll&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre>        # outputs = []</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931648\', \'post2227836931648\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2227836931648\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2227836931648\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>        Month  chocolate cake  butter cake\n0    1/1/2009            99.4        110.4\n1    2/1/2009            99.8         99.8\n2    3/1/2009           100.2        100.2\n3    4/1/2009           100.2        100.2\n4    5/1/2009            99.7         99.7\n..        ...             ...          ...\n136  5/1/2020           121.8        121.8\n137  6/1/2020           119.9        119.9\n138  7/1/2020           120.8        120.8\n139  8/1/2020           120.2        120.2\n140  9/1/2020           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>query_params</td>\n                    <td class=\"code\"><pre>{&#x27;fileURL&#x27;: &#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;,\n &#x27;needPrediction&#x27;: &#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>url</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\generic.py</code>, line 1441, in __nonzero__\n\n          \n            <div class=\"context\" id=\"c2227836931584\">\n              \n                <ol start=\"1434\" class=\"pre-context\" id=\"pre2227836931584\">\n                \n                  <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre>        new_data = self._mgr.apply(operator.invert)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre>        result = self._constructor(new_data).__finalize__(self, method=&quot;__invert__&quot;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre>        return result</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre>    @final</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre>    def __nonzero__(self):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"1441\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre>        raise ValueError(</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'1442\' class=\"post-context\" id=\"post2227836931584\">\n                  \n                  <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre>            f&quot;The truth value of a {type(self).__name__} is ambiguous. &quot;</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre>            &quot;Use a.empty, a.bool(), a.item(), a.any() or a.all().&quot;</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre>        )</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre>    __bool__ = __nonzero__</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2227836931584\', \'post2227836931584\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2227836931584\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2227836931584\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>        Month  chocolate cake  butter cake\n0    1/1/2009            99.4        110.4\n1    2/1/2009            99.8         99.8\n2    3/1/2009           100.2        100.2\n3    4/1/2009           100.2        100.2\n4    5/1/2009            99.7         99.7\n..        ...             ...          ...\n136  5/1/2020           121.8        121.8\n137  6/1/2020           119.9        119.9\n138  7/1/2020           120.8        120.8\n139  8/1/2020           120.2        120.2\n140  9/1/2020           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"ValueError at /app/getMonthlyPrediction\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://localhost:8000/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D\n\nDjango Version: 3.1.7\nPython Version: 3.8.5\nInstalled Applications:\n[&#x27;django.contrib.admin&#x27;,\n &#x27;django.contrib.auth&#x27;,\n &#x27;django.contrib.contenttypes&#x27;,\n &#x27;django.contrib.sessions&#x27;,\n &#x27;django.contrib.messages&#x27;,\n &#x27;django.contrib.staticfiles&#x27;,\n &#x27;rest_framework&#x27;,\n &#x27;predictApp&#x27;]\nInstalled Middleware:\n[&#x27;django.middleware.security.SecurityMiddleware&#x27;,\n &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]\n\n\n\nTraceback (most recent call last):\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py\", line 47, in inner\n    response = get_response(request)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 181, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py\", line 54, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py\", line 70, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py\", line 50, in handler\n    return func(*args, **kwargs)\n  File \"D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py\", line 60, in getMonthlyPrediction\n    if pd.read_csv(url):\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\generic.py\", line 1441, in __nonzero__\n    raise ValueError(\n\nException Type: ValueError at /app/getMonthlyPrediction\nException Value: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>AnonymousUser</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>fileURL</td>\n            <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n          </tr>\n        \n          <tr>\n            <td>needPrediction</td>\n            <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <p>No cookie data</p>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ALLUSERSPROFILE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\AppData\\\\Roaming&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHOCOLATEYINSTALL</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\chocolatey&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHOCOLATEYLASTPATHUPDATE</td>\n          <td class=\"code\"><pre>&#x27;132571304489820617&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHROME_CRASHPAD_PIPE_NAME</td>\n          <td class=\"code\"><pre>&#x27;\\\\\\\\.\\\\pipe\\\\crashpad_13460_LMTVQYFUCUIWFYKC&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COLORTERM</td>\n          <td class=\"code\"><pre>&#x27;truecolor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMFILES</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMFILES(X86)</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files (x86)\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMW6432</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMPUTERNAME</td>\n          <td class=\"code\"><pre>&#x27;DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMSPEC</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\WINDOWS\\\\system32\\\\cmd.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_DEFAULT_ENV</td>\n          <td class=\"code\"><pre>&#x27;mytensor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_EXE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\Anaconda3\\\\Scripts\\\\conda.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PREFIX</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PROMPT_MODIFIER</td>\n          <td class=\"code\"><pre>&#x27;(mytensor) &#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PYTHON_EXE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\Anaconda3\\\\python.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_SHLVL</td>\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#x27;text/plain&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DJANGO_SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#x27;cakeryAiTensorflow.settings&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRIVERDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Windows\\\\System32\\\\Drivers\\\\DriverData&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FPS_BROWSER_APP_PROFILE_STRING</td>\n          <td class=\"code\"><pre>&#x27;Internet Explorer&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FPS_BROWSER_USER_PROFILE_STRING</td>\n          <td class=\"code\"><pre>&#x27;Default&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GATEWAY_INTERFACE</td>\n          <td class=\"code\"><pre>&#x27;CGI/1.1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GIT_ASKPASS</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HOMEDRIVE</td>\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HOMEPATH</td>\n          <td class=\"code\"><pre>&#x27;\\\\Users\\\\chana&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#x27;close&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#x27;localhost:8000&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANG</td>\n          <td class=\"code\"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOC', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(36, 'U000010', 20, '1619606422227', NULL, 'Welcome to cakery.Ai predict app', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(37, 'U000010', 20, '1619606705437', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>NameError\n          at /app/getMonthlyPrediction</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n  \n  <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = \'none\';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll(\'table.vars\'));\n      hideAll(document.querySelectorAll(\'ol.pre-context\'));\n      hideAll(document.querySelectorAll(\'ol.post-context\'));\n      hideAll(document.querySelectorAll(\'div.pastebin\'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == \'none\' ? \'block\': \'none\';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle(\'v\' + id);\n      var s = link.getElementsByTagName(\'span\')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle(\'browserTraceback\', \'pastebinTraceback\');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>NameError\n       at /app/getMonthlyPrediction</h1>\n  <pre class=\"exception_value\">name &#x27;df&#x27; is not defined</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>GET</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://localhost:8000/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>3.1.7</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>NameError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>name &#x27;df&#x27; is not defined</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td><span class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py</span>, line 71, in getMonthlyPrediction</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>C:\\Users\\chana\\.conda\\envs\\mytensor\\python.exe</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.8.5</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#x27;D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\python38.zip&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\DLLs&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib\\\\site-packages&#x27;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Wed, 28 Apr 2021 10:45:03 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py</code>, line 47, in inner\n\n          \n            <div class=\"context\" id=\"c2413383862592\">\n              \n                <ol start=\"40\" class=\"pre-context\" id=\"pre2413383862592\">\n                \n                  <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre>            return response</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre>        return inner</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre>    else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre>        @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre>        def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"47\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre>                response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'48\' class=\"post-context\" id=\"post2413383862592\">\n                  \n                  <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre>            except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre>            return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre>        return inner</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383862592\', \'post2413383862592\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2413383862592\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2413383862592\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>NameError(&quot;name &#x27;df&#x27; is not defined&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x000002318DFFD640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py</code>, line 181, in _get_response\n\n          \n            <div class=\"context\" id=\"c2413383803264\">\n              \n                <ol start=\"174\" class=\"pre-context\" id=\"pre2413383803264\">\n                \n                  <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre>        if response is None:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"181\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'182\' class=\"post-context\" id=\"post2413383803264\">\n                  \n                  <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre>            except Exception as e:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre>                if response is None:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre>                    raise</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383803264\', \'post2413383803264\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2413383803264\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2413383803264\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x00000231E7FD0160&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>middleware_method</td>\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x00000231E8142880&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x000002318DFFD640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>wrapped_callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x00000231E7FD0160&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n\n          \n            <div class=\"context\" id=\"c2413383805760\">\n              \n                <ol start=\"47\" class=\"pre-context\" id=\"pre2413383805760\">\n                \n                  <li onclick=\"toggle(\'pre2413383805760\', \'post2413383805760\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383805760\', \'post2413383805760\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383805760\', \'post2413383805760\')\"><pre>def csrf_exempt(view_func):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383805760\', \'post2413383805760\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383805760\', \'post2413383805760\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383805760\', \'post2413383805760\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383805760\', \'post2413383805760\')\"><pre>    def wrapped_view(*args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"54\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2413383805760\', \'post2413383805760\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'55\' class=\"post-context\" id=\"post2413383805760\">\n                  \n                  <li onclick=\"toggle(\'pre2413383805760\', \'post2413383805760\')\"><pre>    wrapped_view.csrf_exempt = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383805760\', \'post2413383805760\')\"><pre>    return wraps(view_func)(wrapped_view)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2413383805760\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2413383805760\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>view_func</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x00000231E7FD00D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py</code>, line 70, in view\n\n          \n            <div class=\"context\" id=\"c2413376990144\">\n              \n                <ol start=\"63\" class=\"pre-context\" id=\"pre2413376990144\">\n                \n                  <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre>            self = cls(**initkwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre>                raise AttributeError(</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre>                )</pre></li>\n                \n                </ol>\n              \n              <ol start=\"70\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'71\' class=\"post-context\" id=\"post2413376990144\">\n                  \n                  <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre>        view.view_class = cls</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre>        # take name and docstring from class</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre>        update_wrapper(view, cls, updated=())</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413376990144\', \'post2413376990144\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2413376990144\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2413376990144\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>cls</td>\n                    <td class=\"code\"><pre>&lt;class &#x27;predictApp.views.WrappedAPIView&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>initkwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000231E8E47310&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 509, in dispatch\n\n          \n            <div class=\"context\" id=\"c2413383791104\">\n              \n                <ol start=\"502\" class=\"pre-context\" id=\"pre2413383791104\">\n                \n                  <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre>        except Exception as exc:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"509\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'510\' class=\"post-context\" id=\"post2413383791104\">\n                  \n                  <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre>        return self.response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383791104\', \'post2413383791104\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2413383791104\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2413383791104\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x00000231E8E47310&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000231E8E47310&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 469, in handle_exception\n\n          \n            <div class=\"context\" id=\"c2413383812352\">\n              \n                <ol start=\"462\" class=\"pre-context\" id=\"pre2413383812352\">\n                \n                  <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre>        response = exception_handler(exc, context)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre>        if response is None:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"469\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'470\' class=\"post-context\" id=\"post2413383812352\">\n                  \n                  <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre>        response.exception = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383812352\', \'post2413383812352\')\"><pre>        if settings.DEBUG:</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2413383812352\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2413383812352\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>context</td>\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\n &#x27;kwargs&#x27;: {},\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,\n &#x27;view&#x27;: &lt;predictApp.views.WrappedAPIView object at 0x00000231E8E47310&gt;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>NameError(&quot;name &#x27;df&#x27; is not defined&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exception_handler</td>\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x000002318F427D30&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000231E8E47310&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 480, in raise_uncaught_exception\n\n          \n            <div class=\"context\" id=\"c2413383813376\">\n              \n                <ol start=\"473\" class=\"pre-context\" id=\"pre2413383813376\">\n                \n                  <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre>        if settings.DEBUG:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre>            request = self.request</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"480\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre>        raise exc</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'481\' class=\"post-context\" id=\"post2413383813376\">\n                  \n                  <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre>    # be overridden.</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383813376\', \'post2413383813376\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2413383813376\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2413383813376\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>NameError(&quot;name &#x27;df&#x27; is not defined&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>renderer_format</td>\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000231E8E47310&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>use_plaintext_traceback</td>\n                    <td class=\"code\"><pre>True</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 506, in dispatch\n\n          \n            <div class=\"context\" id=\"c2413383858688\">\n              \n                <ol start=\"499\" class=\"pre-context\" id=\"pre2413383858688\">\n                \n                  <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre>            # Get the appropriate handler method</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"506\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'507\' class=\"post-context\" id=\"post2413383858688\">\n                  \n                  <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre>            response = self.handle_exception(exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413383858688\', \'post2413383858688\')\"><pre>        return self.response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2413383858688\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2413383858688\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x00000231E8E47310&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000231E8E47310&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py</code>, line 50, in handler\n\n          \n            <div class=\"context\" id=\"c2413384143680\">\n              \n                <ol start=\"43\" class=\"pre-context\" id=\"pre2413384143680\">\n                \n                  <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre>        assert isinstance(http_method_names, (list, tuple)), \\</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre>            &#x27;@api_view expected a list of strings, received %s&#x27; % type(http_method_names).__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre>        allowed_methods = set(http_method_names) | {&#x27;options&#x27;}</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre>        WrappedAPIView.http_method_names = [method.lower() for method in allowed_methods]</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre>        def handler(self, *args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"50\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre>            return func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'51\' class=\"post-context\" id=\"post2413384143680\">\n                  \n                  <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre>        for method in http_method_names:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre>            setattr(WrappedAPIView, method.lower(), handler)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre>        WrappedAPIView.__name__ = func.__name__</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413384143680\', \'post2413384143680\')\"><pre>        WrappedAPIView.__module__ = func.__module__</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2413384143680\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2413384143680\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>func</td>\n                    <td class=\"code\"><pre>&lt;function getMonthlyPrediction at 0x00000231E7FCDEE0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x00000231E8E47310&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py</code>, line 71, in getMonthlyPrediction\n\n          \n            <div class=\"context\" id=\"c2413384143360\">\n              \n                <ol start=\"64\" class=\"pre-context\" id=\"pre2413384143360\">\n                \n                  <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre>            print (&#x27;CSV file is not empty&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre>            r = str(needPrediction).replace(&quot;&#x27;&quot;,&#x27;&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre>            data = json.loads(r)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre>            for product in data:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre>                print(product)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre>                </pre></li>\n                \n                </ol>\n              \n              <ol start=\"71\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre>                if product in df.columns:</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'72\' class=\"post-context\" id=\"post2413384143360\">\n                  \n                  <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre>                    print(product +&#x27; is exists in dataset&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre>                else:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre>                    print(product +&#x27; is not exists in dataset&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre>                # res = getMonthlyPredictionForUsers.getPredict(fileURL,product,months)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2413384143360\', \'post2413384143360\')\"><pre>                # outputs.append(res)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2413384143360\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2413384143360\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>data</td>\n                    <td class=\"code\"><pre>[&#x27;chocolate cake&#x27;, &#x27;butter cake&#x27;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>        Month  chocolate cake  butter cake\n0    1/1/2009            99.4        110.4\n1    2/1/2009            99.8         99.8\n2    3/1/2009           100.2        100.2\n3    4/1/2009           100.2        100.2\n4    5/1/2009            99.7         99.7\n..        ...             ...          ...\n136  5/1/2020           121.8        121.8\n137  6/1/2020           119.9        119.9\n138  7/1/2020           120.8        120.8\n139  8/1/2020           120.2        120.2\n140  9/1/2020           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>product</td>\n                    <td class=\"code\"><pre>&#x27;chocolate cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>query_params</td>\n                    <td class=\"code\"><pre>{&#x27;fileURL&#x27;: &#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;,\n &#x27;needPrediction&#x27;: &#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>r</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>url</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"NameError at /app/getMonthlyPrediction\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://localhost:8000/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D\n\nDjango Version: 3.1.7\nPython Version: 3.8.5\nInstalled Applications:\n[&#x27;django.contrib.admin&#x27;,\n &#x27;django.contrib.auth&#x27;,\n &#x27;django.contrib.contenttypes&#x27;,\n &#x27;django.contrib.sessions&#x27;,\n &#x27;django.contrib.messages&#x27;,\n &#x27;django.contrib.staticfiles&#x27;,\n &#x27;rest_framework&#x27;,\n &#x27;predictApp&#x27;]\nInstalled Middleware:\n[&#x27;django.middleware.security.SecurityMiddleware&#x27;,\n &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,\n &#x27;django.middleware.common.CommonMiddleware&#x27;,\n &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,\n &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,\n &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,\n &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]\n\n\n\nTraceback (most recent call last):\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py\", line 47, in inner\n    response = get_response(request)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 181, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py\", line 54, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py\", line 70, in view\n    return self.dispatch(request, *args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 469, in handle_exception\n    self.raise_uncaught_exception(exc)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 480, in raise_uncaught_exception\n    raise exc\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py\", line 50, in handler\n    return func(*args, **kwargs)\n  File \"D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py\", line 71, in getMonthlyPrediction\n    if product in df.columns:\n\nException Type: NameError at /app/getMonthlyPrediction\nException Value: name &#x27;df&#x27; is not defined\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>AnonymousUser</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>fileURL</td>\n            <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n          </tr>\n        \n          <tr>\n            <td>needPrediction</td>\n            <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <p>No cookie data</p>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ALLUSERSPROFILE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\AppData\\\\Roaming&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHOCOLATEYINSTALL</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\chocolatey&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHOCOLATEYLASTPATHUPDATE</td>\n          <td class=\"code\"><pre>&#x27;132571304489820617&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CHROME_CRASHPAD_PIPE_NAME</td>\n          <td class=\"code\"><pre>&#x27;\\\\\\\\.\\\\pipe\\\\crashpad_13460_LMTVQYFUCUIWFYKC&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COLORTERM</td>\n          <td class=\"code\"><pre>&#x27;truecolor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMFILES</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMFILES(X86)</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files (x86)\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMMONPROGRAMW6432</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files\\\\Common Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMPUTERNAME</td>\n          <td class=\"code\"><pre>&#x27;DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>COMSPEC</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\WINDOWS\\\\system32\\\\cmd.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_DEFAULT_ENV</td>\n          <td class=\"code\"><pre>&#x27;mytensor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_EXE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\Anaconda3\\\\Scripts\\\\conda.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PREFIX</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PROMPT_MODIFIER</td>\n          <td class=\"code\"><pre>&#x27;(mytensor) &#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_PYTHON_EXE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData\\\\Anaconda3\\\\python.exe&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONDA_SHLVL</td>\n          <td class=\"code\"><pre>&#x27;1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#x27;&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#x27;text/plain&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DJANGO_SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#x27;cakeryAiTensorflow.settings&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRIVERDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Windows\\\\System32\\\\Drivers\\\\DriverData&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FPS_BROWSER_APP_PROFILE_STRING</td>\n          <td class=\"code\"><pre>&#x27;Internet Explorer&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FPS_BROWSER_USER_PROFILE_STRING</td>\n          <td class=\"code\"><pre>&#x27;Default&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GATEWAY_INTERFACE</td>\n          <td class=\"code\"><pre>&#x27;CGI/1.1&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GIT_ASKPASS</td>\n          <td class=\"code\"><pre>&#x27;********************&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HOMEDRIVE</td>\n          <td class=\"code\"><pre>&#x27;C:&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HOMEPATH</td>\n          <td class=\"code\"><pre>&#x27;\\\\Users\\\\chana&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#x27;close&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#x27;localhost:8000&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANG</td>\n          <td class=\"code\"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALAPPDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\AppData\\\\Local&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGONSERVER</td>\n          <td class=\"code\"><pre>&#x27;\\\\\\\\DESKTOP-S3K98MI&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_OF_PROCESSORS</td>\n          <td class=\"code\"><pre>&#x27;8&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ONEDRIVE</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\OneDrive&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ONEDRIVECONSUMER</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Users\\\\chana\\\\OneDrive&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>\n          <td class=\"code\"><pre>&#x27;undefined&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>OS</td>\n          <td class=\"code\"><pre>&#x27;Windows_NT&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH</td>\n          <td class=\"code\"><pre>(&#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\Library\\\\mingw-w64\\\\bin;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\Library\\\\usr\\\\bin;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\Library\\\\bin;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\Scripts;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\bin;C:\\\\Program &#x27;\n &#x27;Files (x86)\\\\Common &#x27;\n &#x27;Files\\\\Oracle\\\\Java\\\\javapath;C:\\\\ProgramData\\\\Anaconda3\\\\condabin;C:\\\\Python39\\\\Scripts;C:\\\\Python39;C:\\\\WINDOWS\\\\system32;C:\\\\WINDOWS;C:\\\\WINDOWS\\\\System32\\\\Wbem;C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0;C:\\\\WINDOWS\\\\System32\\\\OpenSSH;C:\\\\Program &#x27;\n &#x27;Files (x86)\\\\NVIDIA Corporation\\\\PhysX\\\\Common;C:\\\\Program Files\\\\NVIDIA &#x27;\n &#x27;Corporation\\\\NVIDIA NvDLISR;C:\\\\Program &#x27;\n &#x27;Files\\\\nodejs;C:\\\\ProgramData\\\\chocolatey\\\\bin;C:\\\\Program &#x27;\n &#x27;Files\\\\Git\\\\cmd;C:\\\\Users\\\\chana\\\\AppData\\\\Local\\\\Microsoft\\\\WindowsApps;.;C:\\\\Users\\\\chana\\\\AppData\\\\Local\\\\Programs\\\\Microsoft &#x27;\n &#x27;VS Code\\\\bin;C:\\\\Users\\\\chana\\\\AppData\\\\Roaming\\\\npm;C:\\\\Program &#x27;\n &#x27;Files\\\\JetBrains\\\\PyCharm 2020.3.4\\\\bin;.&#x27;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATHEXT</td>\n          <td class=\"code\"><pre>&#x27;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#x27;/app/getMonthlyPrediction&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROCESSOR_ARCHITECTURE</td>\n          <td class=\"code\"><pre>&#x27;AMD64&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROCESSOR_IDENTIFIER</td>\n          <td class=\"code\"><pre>&#x27;Intel64 Family 6 Model 158 Stepping 9, GenuineIntel&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROCESSOR_LEVEL</td>\n          <td class=\"code\"><pre>&#x27;6&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROCESSOR_REVISION</td>\n          <td class=\"code\"><pre>&#x27;9e09&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROGRAMDATA</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\ProgramData&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROGRAMFILES</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROGRAMFILES(X86)</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files (x86)&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROGRAMW6432</td>\n          <td class=\"code\"><pre>&#x27;C:\\\\Program Files&#x27;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROMPT</td>\n          <td clas', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(38, 'U000010', 20, '1619606729770', NULL, 'Welcome to cakery.Ai predict app', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(39, 'U000010', 20, '1619606850086', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>TypeError\n          at /app/getMonthlyPrediction</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n  \n  <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = \'none\';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll(\'table.vars\'));\n      hideAll(document.querySelectorAll(\'ol.pre-context\'));\n      hideAll(document.querySelectorAll(\'ol.post-context\'));\n      hideAll(document.querySelectorAll(\'div.pastebin\'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == \'none\' ? \'block\': \'none\';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle(\'v\' + id);\n      var s = link.getElementsByTagName(\'span\')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle(\'browserTraceback\', \'pastebinTraceback\');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>TypeError\n       at /app/getMonthlyPrediction</h1>\n  <pre class=\"exception_value\">Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>GET</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://localhost:8000/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>3.1.7</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>TypeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td><span class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\indexes\\base.py</span>, line 372, in __new__</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>C:\\Users\\chana\\.conda\\envs\\mytensor\\python.exe</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.8.5</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#x27;D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\python38.zip&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\DLLs&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib\\\\site-packages&#x27;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Wed, 28 Apr 2021 10:47:27 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py</code>, line 47, in inner\n\n          \n            <div class=\"context\" id=\"c2487305283712\">\n              \n                <ol start=\"40\" class=\"pre-context\" id=\"pre2487305283712\">\n                \n                  <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre>            return response</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre>        return inner</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre>    else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre>        @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre>        def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"47\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre>                response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'48\' class=\"post-context\" id=\"post2487305283712\">\n                  \n                  <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre>            except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre>            return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre>        return inner</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283712\', \'post2487305283712\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2487305283712\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2487305283712\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000024341D2D640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py</code>, line 181, in _get_response\n\n          \n            <div class=\"context\" id=\"c2487305283648\">\n              \n                <ol start=\"174\" class=\"pre-context\" id=\"pre2487305283648\">\n                \n                  <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre>        if response is None:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"181\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'182\' class=\"post-context\" id=\"post2487305283648\">\n                  \n                  <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre>            except Exception as e:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre>                if response is None:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre>                    raise</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283648\', \'post2487305283648\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2487305283648\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2487305283648\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000002431BF8F0D0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>middleware_method</td>\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x000002431C101DF0&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000024341D2D640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>wrapped_callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000002431BF8F0D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n\n          \n            <div class=\"context\" id=\"c2487305283584\">\n              \n                <ol start=\"47\" class=\"pre-context\" id=\"pre2487305283584\">\n                \n                  <li onclick=\"toggle(\'pre2487305283584\', \'post2487305283584\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283584\', \'post2487305283584\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283584\', \'post2487305283584\')\"><pre>def csrf_exempt(view_func):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283584\', \'post2487305283584\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283584\', \'post2487305283584\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283584\', \'post2487305283584\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283584\', \'post2487305283584\')\"><pre>    def wrapped_view(*args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"54\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2487305283584\', \'post2487305283584\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'55\' class=\"post-context\" id=\"post2487305283584\">\n                  \n                  <li onclick=\"toggle(\'pre2487305283584\', \'post2487305283584\')\"><pre>    wrapped_view.csrf_exempt = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283584\', \'post2487305283584\')\"><pre>    return wraps(view_func)(wrapped_view)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2487305283584\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2487305283584\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>view_func</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000002431BF8F040&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py</code>, line 70, in view\n\n          \n            <div class=\"context\" id=\"c2487305283520\">\n              \n                <ol start=\"63\" class=\"pre-context\" id=\"pre2487305283520\">\n                \n                  <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre>            self = cls(**initkwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre>                raise AttributeError(</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre>                )</pre></li>\n                \n                </ol>\n              \n              <ol start=\"70\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'71\' class=\"post-context\" id=\"post2487305283520\">\n                  \n                  <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre>        view.view_class = cls</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre>        # take name and docstring from class</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre>        update_wrapper(view, cls, updated=())</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283520\', \'post2487305283520\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2487305283520\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2487305283520\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>cls</td>\n                    <td class=\"code\"><pre>&lt;class &#x27;predictApp.views.WrappedAPIView&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>initkwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002431CDF7490&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 509, in dispatch\n\n          \n            <div class=\"context\" id=\"c2487305283456\">\n              \n                <ol start=\"502\" class=\"pre-context\" id=\"pre2487305283456\">\n                \n                  <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre>        except Exception as exc:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"509\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'510\' class=\"post-context\" id=\"post2487305283456\">\n                  \n                  <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre>        return self.response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283456\', \'post2487305283456\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2487305283456\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2487305283456\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x000002431CDF7490&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002431CDF7490&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 469, in handle_exception\n\n          \n            <div class=\"context\" id=\"c2487305283392\">\n              \n                <ol start=\"462\" class=\"pre-context\" id=\"pre2487305283392\">\n                \n                  <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre>        response = exception_handler(exc, context)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre>        if response is None:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"469\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'470\' class=\"post-context\" id=\"post2487305283392\">\n                  \n                  <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre>        response.exception = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283392\', \'post2487305283392\')\"><pre>        if settings.DEBUG:</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2487305283392\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2487305283392\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>context</td>\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\n &#x27;kwargs&#x27;: {},\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,\n &#x27;view&#x27;: &lt;predictApp.views.WrappedAPIView object at 0x000002431CDF7490&gt;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exception_handler</td>\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x0000024343155CA0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002431CDF7490&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 480, in raise_uncaught_exception\n\n          \n            <div class=\"context\" id=\"c2487305283328\">\n              \n                <ol start=\"473\" class=\"pre-context\" id=\"pre2487305283328\">\n                \n                  <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre>        if settings.DEBUG:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre>            request = self.request</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"480\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre>        raise exc</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'481\' class=\"post-context\" id=\"post2487305283328\">\n                  \n                  <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre>    # be overridden.</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283328\', \'post2487305283328\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2487305283328\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2487305283328\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>renderer_format</td>\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002431CDF7490&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>use_plaintext_traceback</td>\n                    <td class=\"code\"><pre>True</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 506, in dispatch\n\n          \n            <div class=\"context\" id=\"c2487305283264\">\n              \n                <ol start=\"499\" class=\"pre-context\" id=\"pre2487305283264\">\n                \n                  <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre>            # Get the appropriate handler method</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"506\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'507\' class=\"post-context\" id=\"post2487305283264\">\n                  \n                  <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre>            response = self.handle_exception(exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283264\', \'post2487305283264\')\"><pre>        return self.response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2487305283264\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2487305283264\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x000002431CDF7490&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002431CDF7490&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py</code>, line 50, in handler\n\n          \n            <div class=\"context\" id=\"c2487305283200\">\n              \n                <ol start=\"43\" class=\"pre-context\" id=\"pre2487305283200\">\n                \n                  <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre>        assert isinstance(http_method_names, (list, tuple)), \\</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre>            &#x27;@api_view expected a list of strings, received %s&#x27; % type(http_method_names).__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre>        allowed_methods = set(http_method_names) | {&#x27;options&#x27;}</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre>        WrappedAPIView.http_method_names = [method.lower() for method in allowed_methods]</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre>        def handler(self, *args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"50\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre>            return func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'51\' class=\"post-context\" id=\"post2487305283200\">\n                  \n                  <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre>        for method in http_method_names:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre>            setattr(WrappedAPIView, method.lower(), handler)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre>        WrappedAPIView.__name__ = func.__name__</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283200\', \'post2487305283200\')\"><pre>        WrappedAPIView.__module__ = func.__module__</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2487305283200\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2487305283200\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>func</td>\n                    <td class=\"code\"><pre>&lt;function getMonthlyPrediction at 0x000002431BF8DE50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000002431CDF7490&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py</code>, line 74, in getMonthlyPrediction\n\n          \n            <div class=\"context\" id=\"c2487305283136\">\n              \n                <ol start=\"67\" class=\"pre-context\" id=\"pre2487305283136\">\n                \n                  <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre>            for product in data:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre>                print(product)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre>                </pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre>                if product in dataset.columns:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre>                    print(&#x27;\\n\\n\\n\\n\\n\\n\\n\\n&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre>                    print(product +&#x27; is exists in dataset&#x27;)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"74\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre>                    res = getMonthlyPredictionForUsers.getPredict(fileURL,product,months)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'75\' class=\"post-context\" id=\"post2487305283136\">\n                  \n                  <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre>                    print(res)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre>                else:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre>                    print(&#x27;\\n\\n\\n\\n\\n\\n\\n\\n&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre>                    print(product +&#x27; is not exists in dataset&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre>                    res = getMonthlyPredictionForUsers.getPredict(fileURL,product,months)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283136\', \'post2487305283136\')\"><pre>                    print(res)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2487305283136\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2487305283136\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>data</td>\n                    <td class=\"code\"><pre>[&#x27;chocolate cake&#x27;, &#x27;butter cake&#x27;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>        Month  chocolate cake  butter cake\n0    1/1/2009            99.4        110.4\n1    2/1/2009            99.8         99.8\n2    3/1/2009           100.2        100.2\n3    4/1/2009           100.2        100.2\n4    5/1/2009            99.7         99.7\n..        ...             ...          ...\n136  5/1/2020           121.8        121.8\n137  6/1/2020           119.9        119.9\n138  7/1/2020           120.8        120.8\n139  8/1/2020           120.2        120.2\n140  9/1/2020           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>product</td>\n                    <td class=\"code\"><pre>&#x27;chocolate cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>query_params</td>\n                    <td class=\"code\"><pre>{&#x27;fileURL&#x27;: &#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;,\n &#x27;needPrediction&#x27;: &#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>r</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>url</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\services\\getMonthlyPredictionForUsers.py</code>, line 121, in getPredict\n\n          \n            <div class=\"context\" id=\"c2487305283072\">\n              \n                <ol start=\"114\" class=\"pre-context\" id=\"pre2487305283072\">\n                \n                  <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre>    datasetLogDiffShifting = indexedDataset_logScale - indexedDataset_logScale.shift()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre>    # plt.plot(datasetLogDiffShifting)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre>    datasetLogDiffShifting.dropna(inplace=True)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre>    # test_stationarity(datasetLogDiffShifting, needPrediction)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"121\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre>    decomposition = seasonal_decompose(indexedDataset_logScale)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'122\' class=\"post-context\" id=\"post2487305283072\">\n                  \n                  <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre>    trend = decomposition.trend</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre>    seasonal = decomposition.seasonal</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre>    residual = decomposition.resid</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2487305283072\', \'post2487305283072\')\"><pre>    # plt.subplot(411)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2487305283072\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2487305283072\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>         Month  chocolate cake  butter cake\n0   2009-01-01            99.4        110.4\n1   2009-02-01            99.8         99.8\n2   2009-03-01           100.2        100.2\n3   2009-04-01           100.2        100.2\n4   2009-05-01            99.7         99.7\n..         ...             ...          ...\n136 2020-05-01           121.8        121.8\n137 2020-06-01           119.9        119.9\n138 2020-07-01           120.8        120.8\n139 2020-08-01           120.2        120.2\n140 2020-09-01           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogDiffShifting</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-02-01        0.004016    -0.100942\n2009-03-01        0.004000     0.004000\n2009-04-01        0.000000     0.000000\n2009-05-01       -0.005003    -0.005003\n2009-06-01        0.004004     0.004004\n...                    ...          ...\n2020-05-01        0.009072     0.009072\n2020-06-01       -0.015722    -0.015722\n2020-07-01        0.007478     0.007478\n2020-08-01       -0.004979    -0.004979\n2020-09-01        0.000832     0.000832\n\n[140 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-12-01        0.000086    -0.008660\n2010-01-01       -0.000332    -0.000332\n2010-02-01       -0.000415    -0.000415\n2010-03-01        0.001668     0.001668\n2010-04-01       -0.001919    -0.001919\n...                    ...          ...\n2020-05-01        0.011780     0.011780\n2020-06-01       -0.004290    -0.004290\n2020-07-01        0.002773     0.002773\n2020-08-01       -0.002553    -0.002553\n2020-09-01       -0.002069    -0.002069\n\n[130 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingExponentialDecayAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        0.000000     0.000000\n2009-02-01        0.001950    -0.049014\n2009-03-01        0.003851    -0.029135\n2009-04-01        0.002803    -0.021208\n2009-05-01       -0.001707    -0.020346\n...                    ...          ...\n2020-05-01        0.040494     0.040492\n2020-06-01        0.023381     0.023379\n2020-07-01        0.029127     0.029125\n2020-08-01        0.022792     0.022790\n2020-09-01        0.022297     0.022295\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dfoutput</td>\n                    <td class=\"code\"><pre>Test statics                     -0.748146\np-values                          0.833882\n#Lags Used                        9.000000\n Number of Observations used    131.000000\ndtype: float64</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dftest</td>\n                    <td class=\"code\"><pre>(-0.7481457696540172,\n 0.8338815905691892,\n 9,\n 131,\n {&#x27;1%&#x27;: -3.481281802271349,\n  &#x27;10%&#x27;: -2.5786771965503177,\n  &#x27;5%&#x27;: -2.883867891664528},\n 278.29564832008947)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exponentialDecayWeightAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.601218     4.652182\n2009-03-01        4.603317     4.636303\n2009-04-01        4.604365     4.628376\n2009-05-01        4.603873     4.622512\n...                    ...          ...\n2020-05-01        4.761886     4.761888\n2020-06-01        4.763277     4.763279\n2020-07-01        4.765010     4.765012\n2020-08-01        4.766365     4.766367\n2020-09-01        4.767692     4.767693\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01            99.4        110.4\n2009-02-01            99.8         99.8\n2009-03-01           100.2        100.2\n2009-04-01           100.2        100.2\n2009-05-01            99.7         99.7\n...                    ...          ...\n2020-05-01           121.8        121.8\n2020-06-01           119.9        119.9\n2020-07-01           120.8        120.8\n2020-08-01           120.2        120.2\n2020-09-01           120.3        120.3\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset_logScale</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.603168     4.603168\n2009-03-01        4.607168     4.607168\n2009-04-01        4.607168     4.607168\n2009-05-01        4.602166     4.602166\n...                    ...          ...\n2020-05-01        4.802380     4.802380\n2020-06-01        4.786658     4.786658\n2020-07-01        4.794136     4.794136\n2020-08-01        4.789157     4.789157\n2020-09-01        4.789989     4.789989\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>mean</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x000002431EEC49D0&gt;,\n &lt;matplotlib.lines.Line2D object at 0x000002431EEC4A00&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        4.790600     4.790600\n2020-06-01        4.790948     4.790948\n2020-07-01        4.791363     4.791363\n2020-08-01        4.791710     4.791710\n2020-09-01        4.792058     4.792058\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingStd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        0.005103     0.005103\n2020-06-01        0.004617     0.004617\n2020-07-01        0.004665     0.004665\n2020-08-01        0.004287     0.004287\n2020-09-01        0.003920     0.003920\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;chocolate cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>orig</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x000002431EEC42E0&gt;,\n &lt;matplotlib.lines.Line2D object at 0x000002431EEC4580&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>rolmean</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01      120.375000   120.375000\n2020-06-01      120.416667   120.416667\n2020-07-01      120.466667   120.466667\n2020-08-01      120.508333   120.508333\n2020-09-01      120.550000   120.550000\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>rolstd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01            ', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(40, 'U000010', 20, '1619606930362', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>TypeError\n          at /app/getMonthlyPrediction</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n  \n  <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = \'none\';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll(\'table.vars\'));\n      hideAll(document.querySelectorAll(\'ol.pre-context\'));\n      hideAll(document.querySelectorAll(\'ol.post-context\'));\n      hideAll(document.querySelectorAll(\'div.pastebin\'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == \'none\' ? \'block\': \'none\';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle(\'v\' + id);\n      var s = link.getElementsByTagName(\'span\')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle(\'browserTraceback\', \'pastebinTraceback\');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>TypeError\n       at /app/getMonthlyPrediction</h1>\n  <pre class=\"exception_value\">Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>GET</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://localhost:8000/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>3.1.7</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>TypeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td><span class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\indexes\\base.py</span>, line 372, in __new__</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>C:\\Users\\chana\\.conda\\envs\\mytensor\\python.exe</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.8.5</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#x27;D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\python38.zip&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\DLLs&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib\\\\site-packages&#x27;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Wed, 28 Apr 2021 10:48:47 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py</code>, line 47, in inner\n\n          \n            <div class=\"context\" id=\"c2181264040512\">\n              \n                <ol start=\"40\" class=\"pre-context\" id=\"pre2181264040512\">\n                \n                  <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre>            return response</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre>        return inner</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre>    else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre>        @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre>        def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"47\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre>                response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'48\' class=\"post-context\" id=\"post2181264040512\">\n                  \n                  <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre>            except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre>            return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre>        return inner</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040512\', \'post2181264040512\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2181264040512\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2181264040512\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x000001FB8088D640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py</code>, line 181, in _get_response\n\n          \n            <div class=\"context\" id=\"c2181264040448\">\n              \n                <ol start=\"174\" class=\"pre-context\" id=\"pre2181264040448\">\n                \n                  <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre>        if response is None:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"181\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'182\' class=\"post-context\" id=\"post2181264040448\">\n                  \n                  <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre>            except Exception as e:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre>                if response is None:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre>                    raise</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040448\', \'post2181264040448\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2181264040448\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2181264040448\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000001FBDA85F0D0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>middleware_method</td>\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x000001FBDA9CD220&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x000001FB8088D640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>wrapped_callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000001FBDA85F0D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n\n          \n            <div class=\"context\" id=\"c2181264040384\">\n              \n                <ol start=\"47\" class=\"pre-context\" id=\"pre2181264040384\">\n                \n                  <li onclick=\"toggle(\'pre2181264040384\', \'post2181264040384\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040384\', \'post2181264040384\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040384\', \'post2181264040384\')\"><pre>def csrf_exempt(view_func):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040384\', \'post2181264040384\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040384\', \'post2181264040384\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040384\', \'post2181264040384\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040384\', \'post2181264040384\')\"><pre>    def wrapped_view(*args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"54\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2181264040384\', \'post2181264040384\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'55\' class=\"post-context\" id=\"post2181264040384\">\n                  \n                  <li onclick=\"toggle(\'pre2181264040384\', \'post2181264040384\')\"><pre>    wrapped_view.csrf_exempt = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040384\', \'post2181264040384\')\"><pre>    return wraps(view_func)(wrapped_view)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2181264040384\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2181264040384\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>view_func</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000001FBDA85F040&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py</code>, line 70, in view\n\n          \n            <div class=\"context\" id=\"c2181264040320\">\n              \n                <ol start=\"63\" class=\"pre-context\" id=\"pre2181264040320\">\n                \n                  <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre>            self = cls(**initkwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre>                raise AttributeError(</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre>                )</pre></li>\n                \n                </ol>\n              \n              <ol start=\"70\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'71\' class=\"post-context\" id=\"post2181264040320\">\n                  \n                  <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre>        view.view_class = cls</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre>        # take name and docstring from class</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre>        update_wrapper(view, cls, updated=())</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040320\', \'post2181264040320\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2181264040320\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2181264040320\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>cls</td>\n                    <td class=\"code\"><pre>&lt;class &#x27;predictApp.views.WrappedAPIView&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>initkwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001FBDB6B8640&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 509, in dispatch\n\n          \n            <div class=\"context\" id=\"c2181264040256\">\n              \n                <ol start=\"502\" class=\"pre-context\" id=\"pre2181264040256\">\n                \n                  <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre>        except Exception as exc:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"509\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'510\' class=\"post-context\" id=\"post2181264040256\">\n                  \n                  <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre>        return self.response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040256\', \'post2181264040256\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2181264040256\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2181264040256\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x000001FBDB6B8640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001FBDB6B8640&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 469, in handle_exception\n\n          \n            <div class=\"context\" id=\"c2181264040192\">\n              \n                <ol start=\"462\" class=\"pre-context\" id=\"pre2181264040192\">\n                \n                  <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre>        response = exception_handler(exc, context)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre>        if response is None:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"469\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'470\' class=\"post-context\" id=\"post2181264040192\">\n                  \n                  <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre>        response.exception = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040192\', \'post2181264040192\')\"><pre>        if settings.DEBUG:</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2181264040192\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2181264040192\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>context</td>\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\n &#x27;kwargs&#x27;: {},\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,\n &#x27;view&#x27;: &lt;predictApp.views.WrappedAPIView object at 0x000001FBDB6B8640&gt;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exception_handler</td>\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x000001FB81CD5A60&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001FBDB6B8640&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 480, in raise_uncaught_exception\n\n          \n            <div class=\"context\" id=\"c2181264040128\">\n              \n                <ol start=\"473\" class=\"pre-context\" id=\"pre2181264040128\">\n                \n                  <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre>        if settings.DEBUG:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre>            request = self.request</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"480\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre>        raise exc</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'481\' class=\"post-context\" id=\"post2181264040128\">\n                  \n                  <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre>    # be overridden.</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040128\', \'post2181264040128\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2181264040128\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2181264040128\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>renderer_format</td>\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001FBDB6B8640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>use_plaintext_traceback</td>\n                    <td class=\"code\"><pre>True</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 506, in dispatch\n\n          \n            <div class=\"context\" id=\"c2181264040064\">\n              \n                <ol start=\"499\" class=\"pre-context\" id=\"pre2181264040064\">\n                \n                  <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre>            # Get the appropriate handler method</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"506\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'507\' class=\"post-context\" id=\"post2181264040064\">\n                  \n                  <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre>            response = self.handle_exception(exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040064\', \'post2181264040064\')\"><pre>        return self.response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2181264040064\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2181264040064\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x000001FBDB6B8640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001FBDB6B8640&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py</code>, line 50, in handler\n\n          \n            <div class=\"context\" id=\"c2181264040000\">\n              \n                <ol start=\"43\" class=\"pre-context\" id=\"pre2181264040000\">\n                \n                  <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre>        assert isinstance(http_method_names, (list, tuple)), \\</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre>            &#x27;@api_view expected a list of strings, received %s&#x27; % type(http_method_names).__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre>        allowed_methods = set(http_method_names) | {&#x27;options&#x27;}</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre>        WrappedAPIView.http_method_names = [method.lower() for method in allowed_methods]</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre>        def handler(self, *args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"50\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre>            return func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'51\' class=\"post-context\" id=\"post2181264040000\">\n                  \n                  <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre>        for method in http_method_names:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre>            setattr(WrappedAPIView, method.lower(), handler)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre>        WrappedAPIView.__name__ = func.__name__</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181264040000\', \'post2181264040000\')\"><pre>        WrappedAPIView.__module__ = func.__module__</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2181264040000\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2181264040000\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>func</td>\n                    <td class=\"code\"><pre>&lt;function getMonthlyPrediction at 0x000001FBDA85CE50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001FBDB6B8640&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py</code>, line 74, in getMonthlyPrediction\n\n          \n            <div class=\"context\" id=\"c2181263962048\">\n              \n                <ol start=\"67\" class=\"pre-context\" id=\"pre2181263962048\">\n                \n                  <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre>            for product in data:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre>                print(product)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre>                </pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre>                if product in dataset.columns:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre>                    print(&#x27;\\n\\n\\n\\n\\n\\n\\n\\n&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre>                    print(product +&#x27; is exists in dataset&#x27;)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"74\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre>                    res = getMonthlyPredictionForUsers.getPredict(fileURL,dataset,product,months)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'75\' class=\"post-context\" id=\"post2181263962048\">\n                  \n                  <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre>                    print(res)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre>                else:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre>                    print(&#x27;\\n\\n\\n\\n\\n\\n\\n\\n&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre>                    print(product +&#x27; is not exists in dataset&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre>                    # res = getMonthlyPredictionForUsers.getPredict(fileURL,product,months)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181263962048\', \'post2181263962048\')\"><pre>                    # print(res)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2181263962048\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2181263962048\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>data</td>\n                    <td class=\"code\"><pre>[&#x27;chocolate cake&#x27;, &#x27;butter cake&#x27;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>         Month  chocolate cake  butter cake\n0   2009-01-01            99.4        110.4\n1   2009-02-01            99.8         99.8\n2   2009-03-01           100.2        100.2\n3   2009-04-01           100.2        100.2\n4   2009-05-01            99.7         99.7\n..         ...             ...          ...\n136 2020-05-01           121.8        121.8\n137 2020-06-01           119.9        119.9\n138 2020-07-01           120.8        120.8\n139 2020-08-01           120.2        120.2\n140 2020-09-01           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>product</td>\n                    <td class=\"code\"><pre>&#x27;chocolate cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>query_params</td>\n                    <td class=\"code\"><pre>{&#x27;fileURL&#x27;: &#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;,\n &#x27;needPrediction&#x27;: &#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>r</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>url</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\services\\getMonthlyPredictionForUsers.py</code>, line 123, in getPredict\n\n          \n            <div class=\"context\" id=\"c2181263961984\">\n              \n                <ol start=\"116\" class=\"pre-context\" id=\"pre2181263961984\">\n                \n                  <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre>    datasetLogDiffShifting = indexedDataset_logScale - indexedDataset_logScale.shift()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre>    # plt.plot(datasetLogDiffShifting)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre>    datasetLogDiffShifting.dropna(inplace=True)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre>    # test_stationarity(datasetLogDiffShifting, needPrediction)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"123\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre>    decomposition = seasonal_decompose(indexedDataset_logScale)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'124\' class=\"post-context\" id=\"post2181263961984\">\n                  \n                  <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre>    trend = decomposition.trend</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre>    seasonal = decomposition.seasonal</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre>    residual = decomposition.resid</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2181263961984\', \'post2181263961984\')\"><pre>    # plt.subplot(411)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2181263961984\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2181263961984\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>         Month  chocolate cake  butter cake\n0   2009-01-01            99.4        110.4\n1   2009-02-01            99.8         99.8\n2   2009-03-01           100.2        100.2\n3   2009-04-01           100.2        100.2\n4   2009-05-01            99.7         99.7\n..         ...             ...          ...\n136 2020-05-01           121.8        121.8\n137 2020-06-01           119.9        119.9\n138 2020-07-01           120.8        120.8\n139 2020-08-01           120.2        120.2\n140 2020-09-01           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogDiffShifting</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-02-01        0.004016    -0.100942\n2009-03-01        0.004000     0.004000\n2009-04-01        0.000000     0.000000\n2009-05-01       -0.005003    -0.005003\n2009-06-01        0.004004     0.004004\n...                    ...          ...\n2020-05-01        0.009072     0.009072\n2020-06-01       -0.015722    -0.015722\n2020-07-01        0.007478     0.007478\n2020-08-01       -0.004979    -0.004979\n2020-09-01        0.000832     0.000832\n\n[140 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-12-01        0.000086    -0.008660\n2010-01-01       -0.000332    -0.000332\n2010-02-01       -0.000415    -0.000415\n2010-03-01        0.001668     0.001668\n2010-04-01       -0.001919    -0.001919\n...                    ...          ...\n2020-05-01        0.011780     0.011780\n2020-06-01       -0.004290    -0.004290\n2020-07-01        0.002773     0.002773\n2020-08-01       -0.002553    -0.002553\n2020-09-01       -0.002069    -0.002069\n\n[130 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingExponentialDecayAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        0.000000     0.000000\n2009-02-01        0.001950    -0.049014\n2009-03-01        0.003851    -0.029135\n2009-04-01        0.002803    -0.021208\n2009-05-01       -0.001707    -0.020346\n...                    ...          ...\n2020-05-01        0.040494     0.040492\n2020-06-01        0.023381     0.023379\n2020-07-01        0.029127     0.029125\n2020-08-01        0.022792     0.022790\n2020-09-01        0.022297     0.022295\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dfoutput</td>\n                    <td class=\"code\"><pre>Test statics                     -0.748146\np-values                          0.833882\n#Lags Used                        9.000000\n Number of Observations used    131.000000\ndtype: float64</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dftest</td>\n                    <td class=\"code\"><pre>(-0.7481457696540172,\n 0.8338815905691892,\n 9,\n 131,\n {&#x27;1%&#x27;: -3.481281802271349,\n  &#x27;10%&#x27;: -2.5786771965503177,\n  &#x27;5%&#x27;: -2.883867891664528},\n 278.29564832008947)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exponentialDecayWeightAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.601218     4.652182\n2009-03-01        4.603317     4.636303\n2009-04-01        4.604365     4.628376\n2009-05-01        4.603873     4.622512\n...                    ...          ...\n2020-05-01        4.761886     4.761888\n2020-06-01        4.763277     4.763279\n2020-07-01        4.765010     4.765012\n2020-08-01        4.766365     4.766367\n2020-09-01        4.767692     4.767693\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01            99.4        110.4\n2009-02-01            99.8         99.8\n2009-03-01           100.2        100.2\n2009-04-01           100.2        100.2\n2009-05-01            99.7         99.7\n...                    ...          ...\n2020-05-01           121.8        121.8\n2020-06-01           119.9        119.9\n2020-07-01           120.8        120.8\n2020-08-01           120.2        120.2\n2020-09-01           120.3        120.3\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset_logScale</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.603168     4.603168\n2009-03-01        4.607168     4.607168\n2009-04-01        4.607168     4.607168\n2009-05-01        4.602166     4.602166\n...                    ...          ...\n2020-05-01        4.802380     4.802380\n2020-06-01        4.786658     4.786658\n2020-07-01        4.794136     4.794136\n2020-08-01        4.789157     4.789157\n2020-09-01        4.789989     4.789989\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>mean</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x000001FBDC2126A0&gt;,\n &lt;matplotlib.lines.Line2D object at 0x000001FBDC2126D0&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        4.790600     4.790600\n2020-06-01        4.790948     4.790948\n2020-07-01        4.791363     4.791363\n2020-08-01        4.791710     4.791710\n2020-09-01        4.792058     4.792058\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingStd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        0.005103     0.005103\n2020-06-01        0.004617     0.004617\n2020-07-01        0.004665     0.004665\n2020-08-01        0.004287     0.004287\n2020-09-01        0.003920     0.003920\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;chocolate cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>orig</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x000001FBDC1F6FA0&gt;,\n &lt;matplotlib.lines.Line2D object at 0x000001FBDC1F6F10&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>rolmean</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01      120.375000   120.375000\n2020-06-01      120.416667   120.416667\n2020-07-01      120.466667   120.466667\n2020-08-01      120.508333   120.508333\n2020-09-01      120.550000   120.550000\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>rolstd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                 ', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(41, 'U000010', 20, '1619607348529', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>TypeError\n          at /app/getMonthlyPrediction</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n  \n  <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = \'none\';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll(\'table.vars\'));\n      hideAll(document.querySelectorAll(\'ol.pre-context\'));\n      hideAll(document.querySelectorAll(\'ol.post-context\'));\n      hideAll(document.querySelectorAll(\'div.pastebin\'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == \'none\' ? \'block\': \'none\';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle(\'v\' + id);\n      var s = link.getElementsByTagName(\'span\')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle(\'browserTraceback\', \'pastebinTraceback\');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>TypeError\n       at /app/getMonthlyPrediction</h1>\n  <pre class=\"exception_value\">Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>GET</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://localhost:8000/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>3.1.7</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>TypeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td><span class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\indexes\\base.py</span>, line 372, in __new__</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>C:\\Users\\chana\\.conda\\envs\\mytensor\\python.exe</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.8.5</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#x27;D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\python38.zip&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\DLLs&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib\\\\site-packages&#x27;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Wed, 28 Apr 2021 10:55:45 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py</code>, line 47, in inner\n\n          \n            <div class=\"context\" id=\"c2184770000768\">\n              \n                <ol start=\"40\" class=\"pre-context\" id=\"pre2184770000768\">\n                \n                  <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre>            return response</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre>        return inner</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre>    else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre>        @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre>        def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"47\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre>                response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'48\' class=\"post-context\" id=\"post2184770000768\">\n                  \n                  <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre>            except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre>            return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre>        return inner</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000768\', \'post2184770000768\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2184770000768\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2184770000768\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x000001FCD27ED640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py</code>, line 181, in _get_response\n\n          \n            <div class=\"context\" id=\"c2184770000704\">\n              \n                <ol start=\"174\" class=\"pre-context\" id=\"pre2184770000704\">\n                \n                  <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre>        if response is None:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"181\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'182\' class=\"post-context\" id=\"post2184770000704\">\n                  \n                  <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre>            except Exception as e:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre>                if response is None:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre>                    raise</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000704\', \'post2184770000704\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2184770000704\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2184770000704\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000001FCAC7C1160&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>middleware_method</td>\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x000001FCAC94EB80&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x000001FCD27ED640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>wrapped_callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000001FCAC7C1160&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n\n          \n            <div class=\"context\" id=\"c2184770000640\">\n              \n                <ol start=\"47\" class=\"pre-context\" id=\"pre2184770000640\">\n                \n                  <li onclick=\"toggle(\'pre2184770000640\', \'post2184770000640\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000640\', \'post2184770000640\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000640\', \'post2184770000640\')\"><pre>def csrf_exempt(view_func):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000640\', \'post2184770000640\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000640\', \'post2184770000640\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000640\', \'post2184770000640\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000640\', \'post2184770000640\')\"><pre>    def wrapped_view(*args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"54\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2184770000640\', \'post2184770000640\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'55\' class=\"post-context\" id=\"post2184770000640\">\n                  \n                  <li onclick=\"toggle(\'pre2184770000640\', \'post2184770000640\')\"><pre>    wrapped_view.csrf_exempt = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000640\', \'post2184770000640\')\"><pre>    return wraps(view_func)(wrapped_view)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2184770000640\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2184770000640\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>view_func</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000001FCAC7C10D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py</code>, line 70, in view\n\n          \n            <div class=\"context\" id=\"c2184770000576\">\n              \n                <ol start=\"63\" class=\"pre-context\" id=\"pre2184770000576\">\n                \n                  <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre>            self = cls(**initkwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre>                raise AttributeError(</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre>                )</pre></li>\n                \n                </ol>\n              \n              <ol start=\"70\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'71\' class=\"post-context\" id=\"post2184770000576\">\n                  \n                  <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre>        view.view_class = cls</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre>        # take name and docstring from class</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre>        update_wrapper(view, cls, updated=())</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000576\', \'post2184770000576\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2184770000576\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2184770000576\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>cls</td>\n                    <td class=\"code\"><pre>&lt;class &#x27;predictApp.views.WrappedAPIView&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>initkwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001FCAD614520&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 509, in dispatch\n\n          \n            <div class=\"context\" id=\"c2184770000512\">\n              \n                <ol start=\"502\" class=\"pre-context\" id=\"pre2184770000512\">\n                \n                  <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre>        except Exception as exc:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"509\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'510\' class=\"post-context\" id=\"post2184770000512\">\n                  \n                  <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre>        return self.response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000512\', \'post2184770000512\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2184770000512\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2184770000512\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x000001FCAD614520&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001FCAD614520&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 469, in handle_exception\n\n          \n            <div class=\"context\" id=\"c2184770000448\">\n              \n                <ol start=\"462\" class=\"pre-context\" id=\"pre2184770000448\">\n                \n                  <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre>        response = exception_handler(exc, context)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre>        if response is None:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"469\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'470\' class=\"post-context\" id=\"post2184770000448\">\n                  \n                  <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre>        response.exception = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000448\', \'post2184770000448\')\"><pre>        if settings.DEBUG:</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2184770000448\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2184770000448\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>context</td>\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\n &#x27;kwargs&#x27;: {},\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,\n &#x27;view&#x27;: &lt;predictApp.views.WrappedAPIView object at 0x000001FCAD614520&gt;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exception_handler</td>\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x000001FCD3C34A60&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001FCAD614520&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 480, in raise_uncaught_exception\n\n          \n            <div class=\"context\" id=\"c2184770000384\">\n              \n                <ol start=\"473\" class=\"pre-context\" id=\"pre2184770000384\">\n                \n                  <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre>        if settings.DEBUG:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre>            request = self.request</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"480\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre>        raise exc</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'481\' class=\"post-context\" id=\"post2184770000384\">\n                  \n                  <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre>    # be overridden.</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000384\', \'post2184770000384\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2184770000384\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2184770000384\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>renderer_format</td>\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001FCAD614520&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>use_plaintext_traceback</td>\n                    <td class=\"code\"><pre>True</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 506, in dispatch\n\n          \n            <div class=\"context\" id=\"c2184770000320\">\n              \n                <ol start=\"499\" class=\"pre-context\" id=\"pre2184770000320\">\n                \n                  <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre>            # Get the appropriate handler method</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"506\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'507\' class=\"post-context\" id=\"post2184770000320\">\n                  \n                  <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre>            response = self.handle_exception(exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000320\', \'post2184770000320\')\"><pre>        return self.response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2184770000320\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2184770000320\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x000001FCAD614520&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001FCAD614520&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py</code>, line 50, in handler\n\n          \n            <div class=\"context\" id=\"c2184770000256\">\n              \n                <ol start=\"43\" class=\"pre-context\" id=\"pre2184770000256\">\n                \n                  <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre>        assert isinstance(http_method_names, (list, tuple)), \\</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre>            &#x27;@api_view expected a list of strings, received %s&#x27; % type(http_method_names).__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre>        allowed_methods = set(http_method_names) | {&#x27;options&#x27;}</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre>        WrappedAPIView.http_method_names = [method.lower() for method in allowed_methods]</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre>        def handler(self, *args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"50\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre>            return func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'51\' class=\"post-context\" id=\"post2184770000256\">\n                  \n                  <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre>        for method in http_method_names:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre>            setattr(WrappedAPIView, method.lower(), handler)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre>        WrappedAPIView.__name__ = func.__name__</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000256\', \'post2184770000256\')\"><pre>        WrappedAPIView.__module__ = func.__module__</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2184770000256\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2184770000256\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>func</td>\n                    <td class=\"code\"><pre>&lt;function getMonthlyPrediction at 0x000001FCAC7BCEE0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001FCAD614520&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py</code>, line 74, in getMonthlyPrediction\n\n          \n            <div class=\"context\" id=\"c2184770000192\">\n              \n                <ol start=\"67\" class=\"pre-context\" id=\"pre2184770000192\">\n                \n                  <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre>            for product in data:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre>                print(product)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre>                </pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre>                if product in dataset.columns:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre>                    print(&#x27;\\n\\n\\n\\n\\n\\n\\n\\n&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre>                    print(product +&#x27; is exists in dataset&#x27;)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"74\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre>                    getMonthlyPredictionForUsers.getPredictMonthly(fileURL, dataset, product, months)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'75\' class=\"post-context\" id=\"post2184770000192\">\n                  \n                  <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre>                    # print(res)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre>                else:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre>                    print(&#x27;\\n\\n\\n\\n\\n\\n\\n\\n&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre>                    print(product +&#x27; is not exists in dataset&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre>                    # res = getMonthlyPredictionForUsers.getPredict(fileURL,product,months)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000192\', \'post2184770000192\')\"><pre>                    # print(res)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2184770000192\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2184770000192\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>data</td>\n                    <td class=\"code\"><pre>[&#x27;chocolate cake&#x27;, &#x27;butter cake&#x27;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>         Month  chocolate cake  butter cake\n0   2009-01-01            99.4        110.4\n1   2009-02-01            99.8         99.8\n2   2009-03-01           100.2        100.2\n3   2009-04-01           100.2        100.2\n4   2009-05-01            99.7         99.7\n..         ...             ...          ...\n136 2020-05-01           121.8        121.8\n137 2020-06-01           119.9        119.9\n138 2020-07-01           120.8        120.8\n139 2020-08-01           120.2        120.2\n140 2020-09-01           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>product</td>\n                    <td class=\"code\"><pre>&#x27;chocolate cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>query_params</td>\n                    <td class=\"code\"><pre>{&#x27;fileURL&#x27;: &#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;,\n &#x27;needPrediction&#x27;: &#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>r</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>url</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\services\\getMonthlyPredictionForUsers.py</code>, line 123, in getPredictMonthly\n\n          \n            <div class=\"context\" id=\"c2184770000128\">\n              \n                <ol start=\"116\" class=\"pre-context\" id=\"pre2184770000128\">\n                \n                  <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre>    datasetLogDiffShifting = indexedDataset_logScale - indexedDataset_logScale.shift()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre>    # plt.plot(datasetLogDiffShifting)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre>    datasetLogDiffShifting.dropna(inplace=True)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre>    # test_stationarity(datasetLogDiffShifting, needPrediction)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"123\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre>    decomposition = seasonal_decompose(indexedDataset_logScale)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'124\' class=\"post-context\" id=\"post2184770000128\">\n                  \n                  <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre>    trend = decomposition.trend</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre>    seasonal = decomposition.seasonal</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre>    residual = decomposition.resid</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre2184770000128\', \'post2184770000128\')\"><pre>    # plt.subplot(411)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'2184770000128\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v2184770000128\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>         Month  chocolate cake  butter cake\n0   2009-01-01            99.4        110.4\n1   2009-02-01            99.8         99.8\n2   2009-03-01           100.2        100.2\n3   2009-04-01           100.2        100.2\n4   2009-05-01            99.7         99.7\n..         ...             ...          ...\n136 2020-05-01           121.8        121.8\n137 2020-06-01           119.9        119.9\n138 2020-07-01           120.8        120.8\n139 2020-08-01           120.2        120.2\n140 2020-09-01           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogDiffShifting</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-02-01        0.004016    -0.100942\n2009-03-01        0.004000     0.004000\n2009-04-01        0.000000     0.000000\n2009-05-01       -0.005003    -0.005003\n2009-06-01        0.004004     0.004004\n...                    ...          ...\n2020-05-01        0.009072     0.009072\n2020-06-01       -0.015722    -0.015722\n2020-07-01        0.007478     0.007478\n2020-08-01       -0.004979    -0.004979\n2020-09-01        0.000832     0.000832\n\n[140 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-12-01        0.000086    -0.008660\n2010-01-01       -0.000332    -0.000332\n2010-02-01       -0.000415    -0.000415\n2010-03-01        0.001668     0.001668\n2010-04-01       -0.001919    -0.001919\n...                    ...          ...\n2020-05-01        0.011780     0.011780\n2020-06-01       -0.004290    -0.004290\n2020-07-01        0.002773     0.002773\n2020-08-01       -0.002553    -0.002553\n2020-09-01       -0.002069    -0.002069\n\n[130 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingExponentialDecayAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        0.000000     0.000000\n2009-02-01        0.001950    -0.049014\n2009-03-01        0.003851    -0.029135\n2009-04-01        0.002803    -0.021208\n2009-05-01       -0.001707    -0.020346\n...                    ...          ...\n2020-05-01        0.040494     0.040492\n2020-06-01        0.023381     0.023379\n2020-07-01        0.029127     0.029125\n2020-08-01        0.022792     0.022790\n2020-09-01        0.022297     0.022295\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dfoutput</td>\n                    <td class=\"code\"><pre>Test statics                     -0.748146\np-values                          0.833882\n#Lags Used                        9.000000\n Number of Observations used    131.000000\ndtype: float64</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dftest</td>\n                    <td class=\"code\"><pre>(-0.7481457696540172,\n 0.8338815905691892,\n 9,\n 131,\n {&#x27;1%&#x27;: -3.481281802271349,\n  &#x27;10%&#x27;: -2.5786771965503177,\n  &#x27;5%&#x27;: -2.883867891664528},\n 278.29564832008947)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exponentialDecayWeightAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.601218     4.652182\n2009-03-01        4.603317     4.636303\n2009-04-01        4.604365     4.628376\n2009-05-01        4.603873     4.622512\n...                    ...          ...\n2020-05-01        4.761886     4.761888\n2020-06-01        4.763277     4.763279\n2020-07-01        4.765010     4.765012\n2020-08-01        4.766365     4.766367\n2020-09-01        4.767692     4.767693\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01            99.4        110.4\n2009-02-01            99.8         99.8\n2009-03-01           100.2        100.2\n2009-04-01           100.2        100.2\n2009-05-01            99.7         99.7\n...                    ...          ...\n2020-05-01           121.8        121.8\n2020-06-01           119.9        119.9\n2020-07-01           120.8        120.8\n2020-08-01           120.2        120.2\n2020-09-01           120.3        120.3\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset_logScale</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.603168     4.603168\n2009-03-01        4.607168     4.607168\n2009-04-01        4.607168     4.607168\n2009-05-01        4.602166     4.602166\n...                    ...          ...\n2020-05-01        4.802380     4.802380\n2020-06-01        4.786658     4.786658\n2020-07-01        4.794136     4.794136\n2020-08-01        4.789157     4.789157\n2020-09-01        4.789989     4.789989\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>mean</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x000001FCAE6A7A90&gt;,\n &lt;matplotlib.lines.Line2D object at 0x000001FCAE6A7AC0&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        4.790600     4.790600\n2020-06-01        4.790948     4.790948\n2020-07-01        4.791363     4.791363\n2020-08-01        4.791710     4.791710\n2020-09-01        4.792058     4.792058\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingStd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        0.005103     0.005103\n2020-06-01        0.004617     0.004617\n2020-07-01        0.004665     0.004665\n2020-08-01        0.004287     0.004287\n2020-09-01        0.003920     0.003920\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;chocolate cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>orig</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x000001FCAE10AA30&gt;,\n &lt;matplotlib.lines.Line2D object at 0x000001FCAE6A73A0&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>rolmean</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01      120.375000   120.375000\n2020-06-01      120.416667   120.416667\n2020-07-01      120.466667   120.466667\n2020-08-01      120.508333   120.508333\n2020-09-01      120.550000   120.550000\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>rolstd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                    ', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(42, 'U000010', 20, '1619607617398', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>TypeError\n          at /app/getMonthlyPrediction</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n    .fname { user-select: all; }\n  </style>\n  \n  <script>\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = \'none\';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll(\'table.vars\'));\n      hideAll(document.querySelectorAll(\'ol.pre-context\'));\n      hideAll(document.querySelectorAll(\'ol.post-context\'));\n      hideAll(document.querySelectorAll(\'div.pastebin\'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == \'none\' ? \'block\': \'none\';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle(\'v\' + id);\n      var s = link.getElementsByTagName(\'span\')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle(\'browserTraceback\', \'pastebinTraceback\');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>TypeError\n       at /app/getMonthlyPrediction</h1>\n  <pre class=\"exception_value\">Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>GET</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://localhost:8000/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>3.1.7</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>TypeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td><span class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\pandas\\core\\indexes\\base.py</span>, line 372, in __new__</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>C:\\Users\\chana\\.conda\\envs\\mytensor\\python.exe</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.8.5</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#x27;D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\python38.zip&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\DLLs&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor&#x27;,\n &#x27;C:\\\\Users\\\\chana\\\\.conda\\\\envs\\\\mytensor\\\\lib\\\\site-packages&#x27;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Wed, 28 Apr 2021 11:00:14 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\exception.py</code>, line 47, in inner\n\n          \n            <div class=\"context\" id=\"c1977218044096\">\n              \n                <ol start=\"40\" class=\"pre-context\" id=\"pre1977218044096\">\n                \n                  <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre>                response = await sync_to_async(response_for_exception, thread_sensitive=False)(request, exc)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre>            return response</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre>        return inner</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre>    else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre>        @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre>        def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"47\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre>                response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'48\' class=\"post-context\" id=\"post1977218044096\">\n                  \n                  <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre>            except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre>                response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre>            return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre>        return inner</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977218044096\', \'post1977218044096\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1977218044096\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1977218044096\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x000001CC7E18D640&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\core\\handlers\\base.py</code>, line 181, in _get_response\n\n          \n            <div class=\"context\" id=\"c1977218044032\">\n              \n                <ol start=\"174\" class=\"pre-context\" id=\"pre1977218044032\">\n                \n                  <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre>        if response is None:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre>            try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"181\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'182\' class=\"post-context\" id=\"post1977218044032\">\n                  \n                  <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre>            except Exception as e:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre>                if response is None:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre>                    raise</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977218044032\', \'post1977218044032\')\"><pre>        # Complain if the view returned None (a common error).</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1977218044032\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1977218044032\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000001CC582C1160&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>callback_kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>middleware_method</td>\n                    <td class=\"code\"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x000001CC58430C10&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x000001CC7E18D640&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>wrapped_callback</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000001CC582C1160&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\decorators\\csrf.py</code>, line 54, in wrapped_view\n\n          \n            <div class=\"context\" id=\"c1977218043968\">\n              \n                <ol start=\"47\" class=\"pre-context\" id=\"pre1977218043968\">\n                \n                  <li onclick=\"toggle(\'pre1977218043968\', \'post1977218043968\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218043968\', \'post1977218043968\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218043968\', \'post1977218043968\')\"><pre>def csrf_exempt(view_func):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218043968\', \'post1977218043968\')\"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218043968\', \'post1977218043968\')\"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218043968\', \'post1977218043968\')\"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977218043968\', \'post1977218043968\')\"><pre>    def wrapped_view(*args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"54\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1977218043968\', \'post1977218043968\')\"><pre>        return view_func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'55\' class=\"post-context\" id=\"post1977218043968\">\n                  \n                  <li onclick=\"toggle(\'pre1977218043968\', \'post1977218043968\')\"><pre>    wrapped_view.csrf_exempt = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977218043968\', \'post1977218043968\')\"><pre>    return wraps(view_func)(wrapped_view)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1977218043968\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1977218043968\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>view_func</td>\n                    <td class=\"code\"><pre>&lt;function WrappedAPIView at 0x000001CC582C10D0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\django\\views\\generic\\base.py</code>, line 70, in view\n\n          \n            <div class=\"context\" id=\"c1977217974208\">\n              \n                <ol start=\"63\" class=\"pre-context\" id=\"pre1977217974208\">\n                \n                  <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre>            self = cls(**initkwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre>            self.setup(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre>                raise AttributeError(</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre>                )</pre></li>\n                \n                </ol>\n              \n              <ol start=\"70\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'71\' class=\"post-context\" id=\"post1977217974208\">\n                  \n                  <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre>        view.view_class = cls</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre>        view.view_initkwargs = initkwargs</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre>        # take name and docstring from class</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre>        update_wrapper(view, cls, updated=())</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974208\', \'post1977217974208\')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1977217974208\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1977217974208\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>cls</td>\n                    <td class=\"code\"><pre>&lt;class &#x27;predictApp.views.WrappedAPIView&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>initkwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001CC591114C0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 509, in dispatch\n\n          \n            <div class=\"context\" id=\"c1977217974144\">\n              \n                <ol start=\"502\" class=\"pre-context\" id=\"pre1977217974144\">\n                \n                  <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre>            response = handler(request, *args, **kwargs)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre>        except Exception as exc:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"509\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre>            response = self.handle_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'510\' class=\"post-context\" id=\"post1977217974144\">\n                  \n                  <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre>        return self.response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre>    def options(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974144\', \'post1977217974144\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1977217974144\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1977217974144\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x000001CC591114C0&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001CC591114C0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 469, in handle_exception\n\n          \n            <div class=\"context\" id=\"c1977217974080\">\n              \n                <ol start=\"462\" class=\"pre-context\" id=\"pre1977217974080\">\n                \n                  <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre>        exception_handler = self.get_exception_handler()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre>        context = self.get_exception_handler_context()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre>        response = exception_handler(exc, context)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre>        if response is None:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"469\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre>            self.raise_uncaught_exception(exc)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'470\' class=\"post-context\" id=\"post1977217974080\">\n                  \n                  <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre>        response.exception = True</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974080\', \'post1977217974080\')\"><pre>        if settings.DEBUG:</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1977217974080\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1977217974080\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>context</td>\n                    <td class=\"code\"><pre>{&#x27;args&#x27;: (),\n &#x27;kwargs&#x27;: {},\n &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,\n &#x27;view&#x27;: &lt;predictApp.views.WrappedAPIView object at 0x000001CC591114C0&gt;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exception_handler</td>\n                    <td class=\"code\"><pre>&lt;function exception_handler at 0x000001CC7F5D4A60&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001CC591114C0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 480, in raise_uncaught_exception\n\n          \n            <div class=\"context\" id=\"c1977217974016\">\n              \n                <ol start=\"473\" class=\"pre-context\" id=\"pre1977217974016\">\n                \n                  <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre>    def raise_uncaught_exception(self, exc):</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre>        if settings.DEBUG:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre>            request = self.request</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"480\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre>        raise exc</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'481\' class=\"post-context\" id=\"post1977217974016\">\n                  \n                  <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre>    # be overridden.</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217974016\', \'post1977217974016\')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1977217974016\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1977217974016\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>TypeError(&quot;Index(...) must be called with a collection of some kind, &#x27;seasonal&#x27; was passed&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>renderer_format</td>\n                    <td class=\"code\"><pre>&#x27;json&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001CC591114C0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>use_plaintext_traceback</td>\n                    <td class=\"code\"><pre>True</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\views.py</code>, line 506, in dispatch\n\n          \n            <div class=\"context\" id=\"c1977217973952\">\n              \n                <ol start=\"499\" class=\"pre-context\" id=\"pre1977217973952\">\n                \n                  <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre>            # Get the appropriate handler method</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre>            if request.method.lower() in self.http_method_names:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre>                handler = getattr(self, request.method.lower(),</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre>                                  self.http_method_not_allowed)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre>            else:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre>                handler = self.http_method_not_allowed</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"506\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre>            response = handler(request, *args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'507\' class=\"post-context\" id=\"post1977217973952\">\n                  \n                  <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre>            response = self.handle_exception(exc)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973952\', \'post1977217973952\')\"><pre>        return self.response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1977217973952\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1977217973952\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>()</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>handler</td>\n                    <td class=\"code\"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;predictApp.views.WrappedAPIView object at 0x000001CC591114C0&gt;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001CC591114C0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">C:\\Users\\chana\\.conda\\envs\\mytensor\\lib\\site-packages\\rest_framework\\decorators.py</code>, line 50, in handler\n\n          \n            <div class=\"context\" id=\"c1977217973888\">\n              \n                <ol start=\"43\" class=\"pre-context\" id=\"pre1977217973888\">\n                \n                  <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre>        assert isinstance(http_method_names, (list, tuple)), \\</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre>            &#x27;@api_view expected a list of strings, received %s&#x27; % type(http_method_names).__name__</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre>        allowed_methods = set(http_method_names) | {&#x27;options&#x27;}</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre>        WrappedAPIView.http_method_names = [method.lower() for method in allowed_methods]</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre>        def handler(self, *args, **kwargs):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"50\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre>            return func(*args, **kwargs)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'51\' class=\"post-context\" id=\"post1977217973888\">\n                  \n                  <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre>        for method in http_method_names:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre>            setattr(WrappedAPIView, method.lower(), handler)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre>        WrappedAPIView.__name__ = func.__name__</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973888\', \'post1977217973888\')\"><pre>        WrappedAPIView.__module__ = func.__module__</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1977217973888\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1977217973888\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>args</td>\n                    <td class=\"code\"><pre>(&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;,)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>func</td>\n                    <td class=\"code\"><pre>&lt;function getMonthlyPrediction at 0x000001CC582BCEE0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>kwargs</td>\n                    <td class=\"code\"><pre>{}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;predictApp.views.WrappedAPIView object at 0x000001CC591114C0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\views.py</code>, line 74, in getMonthlyPrediction\n\n          \n            <div class=\"context\" id=\"c1977217973824\">\n              \n                <ol start=\"67\" class=\"pre-context\" id=\"pre1977217973824\">\n                \n                  <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre>            for product in data:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre>                print(product)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre>                </pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre>                if product in dataset.columns:</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre>                    print(&#x27;\\n\\n\\n\\n\\n\\n\\n\\n&#x27;)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre>                    print(product +&#x27; is exists in dataset&#x27;)</pre></li>\n                \n                </ol>\n              \n              <ol start=\"74\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre>                    getMonthlyPredictionForUsers.getPredictMonthly(fileURL, dataset, product, months)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'75\' class=\"post-context\" id=\"post1977217973824\">\n                  \n                  <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre>                    # print(res)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre>                else:</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre>                    print(&#x27;\\n\\n\\n\\n\\n\\n\\n\\n&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre>                    print(product +&#x27; is not exists in dataset&#x27;)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre>                    # res = getMonthlyPredictionForUsers.getPredict(fileURL,product,months)</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973824\', \'post1977217973824\')\"><pre>                    # print(res)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1977217973824\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1977217973824\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>data</td>\n                    <td class=\"code\"><pre>[&#x27;chocolate cake&#x27;, &#x27;butter cake&#x27;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>         Month  chocolate cake  butter cake\n0   2009-01-01            99.4        110.4\n1   2009-02-01            99.8         99.8\n2   2009-03-01           100.2        100.2\n3   2009-04-01           100.2        100.2\n4   2009-05-01            99.7         99.7\n..         ...             ...          ...\n136 2020-05-01           121.8        121.8\n137 2020-06-01           119.9        119.9\n138 2020-07-01           120.8        120.8\n139 2020-08-01           120.2        120.2\n140 2020-09-01           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>product</td>\n                    <td class=\"code\"><pre>&#x27;chocolate cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>query_params</td>\n                    <td class=\"code\"><pre>{&#x27;fileURL&#x27;: &#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;,\n &#x27;needPrediction&#x27;: &#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;}</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>r</td>\n                    <td class=\"code\"><pre>&#x27;[&quot;chocolate cake&quot;,&quot;butter cake&quot;]&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;rest_framework.request.Request: GET &#x27;/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1619593675447.csv&amp;needPrediction=%5B%22chocolate%20cake%22%2C%22butter%20cake%22%5D&#x27;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>url</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame user\">\n          <code class=\"fname\">D:\\BeforeReset\\htdocs\\Cakery_managment_Sys_NodeAngularPython\\cakeryAiTensorflow\\predictApp\\services\\getMonthlyPredictionForUsers.py</code>, line 121, in getPredictMonthly\n\n          \n            <div class=\"context\" id=\"c1977217973760\">\n              \n                <ol start=\"114\" class=\"pre-context\" id=\"pre1977217973760\">\n                \n                  <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre>    datasetLogDiffShifting = indexedDataset_logScale - indexedDataset_logScale.shift()</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre>    # plt.plot(datasetLogDiffShifting)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre>    datasetLogDiffShifting.dropna(inplace=True)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre>    # test_stationarity(datasetLogDiffShifting, needPrediction)</pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre></pre></li>\n                \n                </ol>\n              \n              <ol start=\"121\" class=\"context-line\">\n                <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre>    decomposition = seasonal_decompose(indexedDataset_logScale)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start=\'122\' class=\"post-context\" id=\"post1977217973760\">\n                  \n                  <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre>    trend = decomposition.trend</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre>    seasonal = decomposition.seasonal</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre>    residual = decomposition.resid</pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle(\'pre1977217973760\', \'post1977217973760\')\"><pre>    # plt.subplot(411)</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, \'1977217973760\')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v1977217973760\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>dataset</td>\n                    <td class=\"code\"><pre>         Month  chocolate cake  butter cake\n0   2009-01-01            99.4        110.4\n1   2009-02-01            99.8         99.8\n2   2009-03-01           100.2        100.2\n3   2009-04-01           100.2        100.2\n4   2009-05-01            99.7         99.7\n..         ...             ...          ...\n136 2020-05-01           121.8        121.8\n137 2020-06-01           119.9        119.9\n138 2020-07-01           120.8        120.8\n139 2020-08-01           120.2        120.2\n140 2020-09-01           120.3        120.3\n\n[141 rows x 3 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogDiffShifting</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-02-01        0.004016    -0.100942\n2009-03-01        0.004000     0.004000\n2009-04-01        0.000000     0.000000\n2009-05-01       -0.005003    -0.005003\n2009-06-01        0.004004     0.004004\n...                    ...          ...\n2020-05-01        0.009072     0.009072\n2020-06-01       -0.015722    -0.015722\n2020-07-01        0.007478     0.007478\n2020-08-01       -0.004979    -0.004979\n2020-09-01        0.000832     0.000832\n\n[140 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-12-01        0.000086    -0.008660\n2010-01-01       -0.000332    -0.000332\n2010-02-01       -0.000415    -0.000415\n2010-03-01        0.001668     0.001668\n2010-04-01       -0.001919    -0.001919\n...                    ...          ...\n2020-05-01        0.011780     0.011780\n2020-06-01       -0.004290    -0.004290\n2020-07-01        0.002773     0.002773\n2020-08-01       -0.002553    -0.002553\n2020-09-01       -0.002069    -0.002069\n\n[130 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>datasetLogScaleMinusMovingExponentialDecayAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        0.000000     0.000000\n2009-02-01        0.001950    -0.049014\n2009-03-01        0.003851    -0.029135\n2009-04-01        0.002803    -0.021208\n2009-05-01       -0.001707    -0.020346\n...                    ...          ...\n2020-05-01        0.040494     0.040492\n2020-06-01        0.023381     0.023379\n2020-07-01        0.029127     0.029125\n2020-08-01        0.022792     0.022790\n2020-09-01        0.022297     0.022295\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dfoutput</td>\n                    <td class=\"code\"><pre>Test statics                     -0.748146\np-values                          0.833882\n#Lags Used                        9.000000\n Number of Observations used    131.000000\ndtype: float64</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>dftest</td>\n                    <td class=\"code\"><pre>(-0.7481457696540172,\n 0.8338815905691892,\n 9,\n 131,\n {&#x27;1%&#x27;: -3.481281802271349,\n  &#x27;10%&#x27;: -2.5786771965503177,\n  &#x27;5%&#x27;: -2.883867891664528},\n 278.29564832008947)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>exponentialDecayWeightAvg</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.601218     4.652182\n2009-03-01        4.603317     4.636303\n2009-04-01        4.604365     4.628376\n2009-05-01        4.603873     4.622512\n...                    ...          ...\n2020-05-01        4.761886     4.761888\n2020-06-01        4.763277     4.763279\n2020-07-01        4.765010     4.765012\n2020-08-01        4.766365     4.766367\n2020-09-01        4.767692     4.767693\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>fileURL</td>\n                    <td class=\"code\"><pre>&#x27;https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01            99.4        110.4\n2009-02-01            99.8         99.8\n2009-03-01           100.2        100.2\n2009-04-01           100.2        100.2\n2009-05-01            99.7         99.7\n...                    ...          ...\n2020-05-01           121.8        121.8\n2020-06-01           119.9        119.9\n2020-07-01           120.8        120.8\n2020-08-01           120.2        120.2\n2020-09-01           120.3        120.3\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>indexedDataset_logScale</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01        4.599152     4.704110\n2009-02-01        4.603168     4.603168\n2009-03-01        4.607168     4.607168\n2009-04-01        4.607168     4.607168\n2009-05-01        4.602166     4.602166\n...                    ...          ...\n2020-05-01        4.802380     4.802380\n2020-06-01        4.786658     4.786658\n2020-07-01        4.794136     4.794136\n2020-08-01        4.789157     4.789157\n2020-09-01        4.789989     4.789989\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>mean</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x000001CC5B5A7790&gt;,\n &lt;matplotlib.lines.Line2D object at 0x000001CC5B5A77C0&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>months</td>\n                    <td class=\"code\"><pre>1</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingAverage</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        4.790600     4.790600\n2020-06-01        4.790948     4.790948\n2020-07-01        4.791363     4.791363\n2020-08-01        4.791710     4.791710\n2020-09-01        4.792058     4.792058\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>movingStd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01        0.005103     0.005103\n2020-06-01        0.004617     0.004617\n2020-07-01        0.004665     0.004665\n2020-08-01        0.004287     0.004287\n2020-09-01        0.003920     0.003920\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>needPrediction</td>\n                    <td class=\"code\"><pre>&#x27;chocolate cake&#x27;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>orig</td>\n                    <td class=\"code\"><pre>[&lt;matplotlib.lines.Line2D object at 0x000001CC5B57EB80&gt;,\n &lt;matplotlib.lines.Line2D object at 0x000001CC5A57B400&gt;]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>rolmean</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                                  \n2009-01-01             NaN          NaN\n2009-02-01             NaN          NaN\n2009-03-01             NaN          NaN\n2009-04-01             NaN          NaN\n2009-05-01             NaN          NaN\n...                    ...          ...\n2020-05-01      120.375000   120.375000\n2020-06-01      120.416667   120.416667\n2020-07-01      120.466667   120.466667\n2020-08-01      120.508333   120.508333\n2020-09-01      120.550000   120.550000\n\n[141 rows x 2 columns]</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>rolstd</td>\n                    <td class=\"code\"><pre>            chocolate cake  butter cake\nMonth                    ', NULL, '0000-00-00');
INSERT INTO `generated_monthly_summary` (`_id`, `userId`, `salesReportId`, `month`, `predicted_total_sales`, `predicted_sales`, `ingredients_reportID`, `timestamp`) VALUES
(43, 'U000010', 26, '1620876367891', NULL, '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /app/getMonthlyPrediction</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>http://localhost:8000/app/getMonthlyPrediction?fileURL=https%3A%2F%2Fcakery-ai-s3.s3.ap-southeast-1.amazonaws.com%2F1620230327934.csv&amp;needPrediction=%5B%22chocolateCake%22%2C%22butterCake%22%5D&amp;monthsCount=1</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>djnagoVBookOCR.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                admin/\n                \n            \n          </li>\n        \n          <li>\n            \n                app/\n                \n            \n                \n                \n            \n          </li>\n        \n          <li>\n            \n                app/\n                \n            \n                isverified\n                \n            \n          </li>\n        \n      </ol>\n      <p>\n        \n        The current path, <code>app/getMonthlyPrediction</code>, didn\'t match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You\'re seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n', NULL, '0000-00-00'),
(44, 'U000010', 26, '1620876727222', NULL, 'Welcome to cakery.Ai predict app', NULL, '0000-00-00'),
(45, 'U000010', 26, '1620882091385', NULL, '[{\"product\":\"chocolateCake\",\"prediction\":120.29494149983273},{\"product\":\"butterCake\",\"prediction\":120.20080496554192}]', NULL, '0000-00-00'),
(46, 'U000010', 26, '1620882431972', NULL, '[{\"product\":\"chocolateCake\",\"prediction\":120.29494149983273},{\"product\":\"butterCake\",\"prediction\":120.20080496554192}]', NULL, '0000-00-00'),
(47, 'U000010', 26, '1620882740986', NULL, '[{\"product\":\"chocolateCake\",\"prediction\":120.29494149983273},{\"product\":\"butterCake\",\"prediction\":120.20080496554192}]', NULL, '0000-00-00'),
(48, 'U000010', 26, '1620882832671', NULL, '[{\"product\":\"chocolateCake\",\"prediction\":120.29494149983273},{\"product\":\"butterCake\",\"prediction\":120.20080496554192}]', NULL, '0000-00-00'),
(49, 'U000010', 26, '1620883468233', NULL, '[{\"product\":\"chocolateCake\",\"prediction\":120.29494149983273},{\"product\":\"butterCake\",\"prediction\":120.20080496554192}]', NULL, '0000-00-00'),
(50, 'U000010', 26, '1620883568793', NULL, '[{\"product\":\"chocolateCake\",\"prediction\":120.29494149983273},{\"product\":\"butterCake\",\"prediction\":120.20080496554192}]', NULL, '0000-00-00'),
(51, 'U000014', 30, '1620887430042', NULL, '[{\"product\":\"Sales\",\"prediction\":120.29494149983273}]', NULL, '0000-00-00'),
(52, 'U000010', 26, '1620887431703', NULL, '[{\"product\":\"chocolateCake\",\"prediction\":120.29494149983273},{\"product\":\"butterCake\",\"prediction\":120.20080496554192}]', NULL, '0000-00-00');

-- --------------------------------------------------------

--
-- Table structure for table `pretrained_models`
--

CREATE TABLE `pretrained_models` (
  `_id` int(11) NOT NULL,
  `userId` varchar(20) NOT NULL,
  `reportId` int(11) NOT NULL,
  `modelUrl` text NOT NULL,
  `accuracy` float NOT NULL,
  `timestamp` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `products`
--

CREATE TABLE `products` (
  `_id` int(11) NOT NULL,
  `userId` varchar(20) NOT NULL,
  `productName` varchar(150) NOT NULL,
  `Ingredient` text,
  `timestamp` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `products`
--

INSERT INTO `products` (`_id`, `userId`, `productName`, `Ingredient`, `timestamp`) VALUES
(1, 'U000010', 'chocolate cake 2', '[{\"ingredients_details\":\"sugar1\",\"_ingredientID\":11,\"measure_type\":\"mg\",\"amount\":4},{\"ingredients_details\":\"sugar13\",\"_ingredientID\":14,\"measure_type\":\"mg\",\"amount\":6},{\"ingredients_details\":\"sugar132\",\"_ingredientID\":13,\"measure_type\":\"g\",\"amount\":10}]', '2021-04-17T14:09:30+05:30'),
(2, 'U000010', 'bake ', '[{\"ingredients_details\":\"sugar1\",\"_ingredientID\":11,\"measure_type\":\"mg\",\"amount\":2},{\"ingredients_details\":\"sugar132\",\"_ingredientID\":13,\"measure_type\":\"g\",\"amount\":33},{\"ingredients_details\":\"sugar13\",\"_ingredientID\":14,\"measure_type\":\"mg\",\"amount\":6}]', '2021-04-17T15:26:25+05:30'),
(9, 'U000010', 'ss', '[]', '2021-04-18T23:12:09+05:30'),
(10, 'U000010', 'bake ', '[{\"ingredients_details\":\"sugar1\",\"_ingredientID\":11,\"measure_type\":\"mg\",\"amount\":1},{\"ingredients_details\":\"sugar13\",\"_ingredientID\":14,\"measure_type\":\"mg\",\"amount\":3}]', '2021-04-19T08:46:01+05:30'),
(11, 'U000014', 'mango', '[]', '2021-04-27T16:10:51+05:30'),
(12, 'U000010', 'sfsfdf', '[{\"ingredients_details\":\"sugar\",\"_ingredientID\":10,\"measure_type\":\"g\",\"amount\":20},{\"ingredients_details\":\"sugar13\",\"_ingredientID\":14,\"measure_type\":\"mg\",\"amount\":100}]', '2021-04-29T20:02:52+05:30');

-- --------------------------------------------------------

--
-- Table structure for table `product_ingredients`
--

CREATE TABLE `product_ingredients` (
  `_id` int(11) NOT NULL,
  `_userId` varchar(20) NOT NULL,
  `ingredients_details` text NOT NULL,
  `measure_type` varchar(20) NOT NULL,
  `timestamp` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `product_ingredients`
--

INSERT INTO `product_ingredients` (`_id`, `_userId`, `ingredients_details`, `measure_type`, `timestamp`) VALUES
(9, 'U000010', 'flour', 'kg', '2021-04-02'),
(10, 'U000010', 'sugar', 'g', '2021-04-02'),
(11, 'U000010', 'sugar1', 'mg', '2021-04-02'),
(12, 'U000010', 'sugar13', 'mg', '2021-04-02'),
(13, 'U000010', 'sugar132', 'g', '2021-04-02'),
(14, 'U000010', 'sugar13', 'mg', '2021-04-02'),
(15, 'U000013', 'egg', 'kg', '2021-04-21'),
(16, 'U000010', 'egg 2', 'mg', '2021-04-29');

-- --------------------------------------------------------

--
-- Table structure for table `uploadedreport`
--

CREATE TABLE `uploadedreport` (
  `_id` int(11) NOT NULL,
  `userId` varchar(20) NOT NULL,
  `uploadedFile` varchar(200) NOT NULL,
  `fileURL` text,
  `file_key` varchar(100) NOT NULL,
  `headers` text,
  `lastMonthDetails` text,
  `preTrainedModelURL` text,
  `accuracy` float DEFAULT NULL,
  `activate` tinyint(1) DEFAULT '0',
  `status` varchar(20) NOT NULL,
  `timestamp` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `uploadedreport`
--

INSERT INTO `uploadedreport` (`_id`, `userId`, `uploadedFile`, `fileURL`, `file_key`, `headers`, `lastMonthDetails`, `preTrainedModelURL`, `accuracy`, `activate`, `status`, `timestamp`) VALUES
(15, 'U000010', 'CakeMonthlySaleReport.csv', 'https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1618851977730.csv', '1618851977730.csv', '[{\"name\":\"Month\",\"mappedProductID\":\"Month\"},{\"name\":\"Sales\",\"mappedProductID\":1}]', '{}', '[{\"product\":\"Sales\",\"trainedModelURL\":\"D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow\\\\predictApp\\\\services\\\\pre_trained_models/keras_1620994680872.h5\"}]', 0, 0, 'complete', '2021-04-19T22:36:18+05:30'),
(19, 'U000010', 'CakeMonthlySaleReport.csv', 'https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619032655427.csv', '1619032655427.csv', '[{\"name\":\"Month\",\"mappedProductID\":\"Month\"},{\"name\":\"Sales\",\"mappedProductID\":1}]', '{}', '[{\"product\":\"Sales\",\"trainedModelURL\":\"D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow\\\\predictApp\\\\services\\\\pre_trained_models/keras_1620987385958.h5\"}]', 0, 0, 'complete', '2021-04-22T00:47:36+05:30'),
(20, 'U000010', 'CakeMonthlySaleReport_2_products.csv', 'https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1619593675447.csv', '1619593675447.csv', '[{\"name\":\"Month\",\"mappedProductID\":\"Month\"},{\"name\":\"chocolate cake\",\"mappedProductID\":1},{\"name\":\"butter cake\",\"mappedProductID\":2}]', '{}', '[{\"product\":\"chocolate cake\",\"trainedModelURL\":\"D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow\\\\predictApp\\\\services\\\\pre_trained_models/keras_1620988835671.h5\"},{\"product\":\"butter cake\",\"trainedModelURL\":\"D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow\\\\predictApp\\\\services\\\\pre_trained_models/keras_1620988856094.h5\"}]', 0, 0, 'complete', '2021-04-28T12:37:56+05:30'),
(23, 'U000010', 'CakeMonthlySaleReport_2_products.csv', 'https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1620062896411.csv', '1620062896411.csv', '[{\"name\":\"Month\",\"mappedProductID\":\"Month\"},{\"name\":\"chocolateCake\",\"mappedProductID\":1},{\"name\":\"butterCake\",\"mappedProductID\":2}]', '{}', '[{\"product\":\"chocolateCake\",\"trainedModelURL\":\"D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow\\\\predictApp\\\\services\\\\pre_trained_models/keras_1620987445333.h5\"},{\"product\":\"butterCake\",\"trainedModelURL\":\"D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow\\\\predictApp\\\\services\\\\pre_trained_models/keras_1620987468467.h5\"}]', 0, 0, 'complete', '2021-05-03T22:58:16+05:30'),
(24, 'U000010', 'CakeMonthlySaleReport.csv', 'https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1620150621469.csv', '1620150621469.csv', '[{\"name\":\"Month\",\"mappedProductID\":\"Month\"},{\"name\":\"Sales\",\"mappedProductID\":1}]', '{}', '[{\"product\":\"Sales\",\"trainedModelURL\":\"D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow\\\\predictApp\\\\services\\\\pre_trained_models/keras_1620988090070.h5\"}]', 0, 0, 'complete', '2021-05-04T23:20:22+05:30'),
(25, 'U000010', 'CakeMonthlySaleReport - Copy.csv', 'https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1620228796011.csv', '1620228796011.csv', '[{\"name\":\"Month\",\"mappedProductID\":\"Month\"},{\"name\":\"GGG\",\"mappedProductID\":1}]', '{}', '[{\"product\":\"GGG\",\"trainedModelURL\":\"D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow\\\\predictApp\\\\services\\\\pre_trained_models/keras_1620987750321.h5\"}]', 0, 0, 'complete', '2021-05-05T21:03:16+05:30'),
(26, 'U000010', 'CakeMonthlySaleReport_2_products.csv', 'https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1620230327934.csv', '1620230327934.csv', '[{\"name\":\"Month\",\"mappedProductID\":\"Month\"},{\"name\":\"chocolateCake\",\"mappedProductID\":1},{\"name\":\"butterCake\",\"mappedProductID\":2}]', '{}', NULL, 0, 0, 'Initial', '2021-05-05T21:28:48+05:30'),
(27, 'U000010', 'CakeMonthlySaleReport - Copy.csv', 'https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1620239705309.csv', '1620239705309.csv', '[{\"name\":\"Month\",\"mappedProductID\":\"Month\"},{\"name\":\"GGG\",\"mappedProductID\":1}]', '{}', '[{\"product\":\"GGG\",\"trainedModelURL\":\"D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow\\\\predictApp\\\\services\\\\pre_trained_models/keras_1620989237242.h5\"}]', 0, 0, 'complete', '2021-05-06T00:05:05+05:30'),
(28, 'U000010', 'CakeMonthlySaleReport - Copy.csv', 'https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1620281469201.csv', '1620281469201.csv', '[{\"name\":\"Month\",\"mappedProductID\":\"Month\"},{\"name\":\"Date cake\",\"mappedProductID\":1}]', '{}', '[{\"product\":\"Date cake\",\"trainedModelURL\":\"D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow\\\\predictApp\\\\services\\\\pre_trained_models/keras_1621004719904.h5\"}]', 0, 0, 'complete', '2021-05-06T11:41:09+05:30'),
(30, 'U000014', 'CakeMonthlySaleReport.csv', 'https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1620887389649.csv', '1620887389649.csv', '[{\"name\":\"Month\",\"mappedProductID\":\"Month\"},{\"name\":\"Sales\",\"mappedProductID\":11}]', '{}', NULL, 0, 0, 'Initial', '2021-05-13T11:59:50+05:30'),
(31, 'U000014', 'CakeMonthlySaleReport.csv', 'https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1620888699309.csv', '1620888699309.csv', '[{\"name\":\"Month\",\"mappedProductID\":\"Month\"},{\"name\":\"Sales\",\"mappedProductID\":11}]', '2020-09-01,120.3', NULL, 0, 1, 'Initial', '2021-05-13T12:21:39+05:30'),
(32, 'U000010', 'CakeMonthlySaleReport_2_products.csv', 'https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1621001147413.csv', '1621001147413.csv', '[{\"name\":\"Month\",\"mappedProductID\":\"Month\"},{\"name\":\"gattoCake\",\"mappedProductID\":1},{\"name\":\"fruitCake\",\"mappedProductID\":9}]', '', '[{\"product\":\"gattoCake\",\"trainedModelURL\":\"D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow\\\\predictApp\\\\services\\\\pre_trained_models/keras_1621009885561.h5\"},{\"product\":\"fruitCake\",\"trainedModelURL\":\"D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow\\\\predictApp\\\\services\\\\pre_trained_models/keras_1621009900701.h5\"}]', 0, 0, 'complete', '2021-05-14T19:35:47+05:30'),
(33, 'U000010', 'CakeMonthlySaleReport.csv', 'https://cakery-ai-s3.s3.ap-southeast-1.amazonaws.com/1621046878349.csv', '1621046878349.csv', '[{\"name\":\"Month\",\"mappedProductID\":\"Month\"},{\"name\":\"Sales\",\"mappedProductID\":1}]', '2020-09-01,120.3', '[{\"product\":\"Sales\",\"trainedModelURL\":\"D:\\\\BeforeReset\\\\htdocs\\\\Cakery_managment_Sys_NodeAngularPython\\\\cakeryAiTensorflow\\\\predictApp\\\\services\\\\pre_trained_models/keras_1621049266843.h5\"}]', 0, 1, 'complete', '2021-05-15T08:17:58+05:30');

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `_id` int(11) NOT NULL,
  `userId` varchar(20) DEFAULT NULL,
  `userName` varchar(150) DEFAULT NULL,
  `email` varchar(150) DEFAULT NULL,
  `password` varchar(200) DEFAULT NULL,
  `fname` varchar(30) DEFAULT NULL,
  `lname` varchar(30) DEFAULT NULL,
  `phoneNumber` varchar(15) DEFAULT NULL,
  `companyName` varchar(200) DEFAULT NULL,
  `userRole` varchar(20) DEFAULT NULL,
  `subscriptionLevel` int(11) DEFAULT '0',
  `token` varchar(200) DEFAULT NULL,
  `expireToken` varchar(50) DEFAULT NULL,
  `isConfirm` tinyint(1) DEFAULT '0',
  `regTimestamp` varchar(100) DEFAULT NULL,
  `status` tinyint(1) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`_id`, `userId`, `userName`, `email`, `password`, `fname`, `lname`, `phoneNumber`, `companyName`, `userRole`, `subscriptionLevel`, `token`, `expireToken`, `isConfirm`, `regTimestamp`, `status`) VALUES
(10, 'U000010', 'chanaka', 'chanakabalasuriya123@gmail.com', '$2a$10$Pdily3HzBdFeeS6VDFmC1.f1L426xRnbQKyKWCkpHSvuMVUjeg3gC', 'sdsd', 'scs', '0710761580', 'testing company', 'user', 0, NULL, NULL, 1, '2021-02-11T21:11:51+05:30', 1),
(13, 'U000013', 'Hiruarunasss', 'chanakabit123@gmail.com', '$2a$10$IXteHMpXzcuYQOb/OS./8eLfxroUhcv5FXN6woksSiwsrnbIFz2GO', NULL, NULL, NULL, NULL, 'user', 0, '', '', 1, '2021-02-21T20:38:02+05:30', 1),
(14, 'U000014', 'sasa', 'cocclb123@gmail.com', '$2a$10$EO4bPjwWodSpqSAb1Im3JuD4z6pp2olYUxKa/uya4K4qQElkOf82S', 'chanaka', 'laksha2', '+94710812156', 'malwane rambutan', 'user', 0, '838283ea871c2384ce2da375476c73087f6e0aceebf1f8a360a5a5e92d588d9d', '1619536453018', 1, '2021-02-21T20:39:30+05:30', 1),
(15, 'U000015', 'thiran', 'thiransalinda.i@gmail.com', '$2a$10$N3fH6G2bupcWb8snN.CQMu3yIm3qj.vjKgZ7SAZk2a3CDsLdfFec2', NULL, NULL, NULL, NULL, 'user', 0, '0904ec2be22bfe47ab4e707c2d846a5728244f2f8f8d2920aa3d945252c7aa26', '1621088005106', 0, '2021-05-14T19:43:25+05:30', 1);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `errorlog`
--
ALTER TABLE `errorlog`
  ADD PRIMARY KEY (`_id`);

--
-- Indexes for table `feedback`
--
ALTER TABLE `feedback`
  ADD PRIMARY KEY (`_id`),
  ADD KEY `userId` (`userId`);

--
-- Indexes for table `generated_monthly_summary`
--
ALTER TABLE `generated_monthly_summary`
  ADD PRIMARY KEY (`_id`),
  ADD KEY `userId` (`userId`),
  ADD KEY `modelId` (`salesReportId`),
  ADD KEY `ingredients_reportID` (`ingredients_reportID`);

--
-- Indexes for table `pretrained_models`
--
ALTER TABLE `pretrained_models`
  ADD PRIMARY KEY (`_id`),
  ADD KEY `userId` (`userId`),
  ADD KEY `reportId` (`reportId`);

--
-- Indexes for table `products`
--
ALTER TABLE `products`
  ADD PRIMARY KEY (`_id`);

--
-- Indexes for table `product_ingredients`
--
ALTER TABLE `product_ingredients`
  ADD PRIMARY KEY (`_id`),
  ADD KEY `_userId` (`_userId`);

--
-- Indexes for table `uploadedreport`
--
ALTER TABLE `uploadedreport`
  ADD PRIMARY KEY (`_id`),
  ADD KEY `userId` (`userId`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`_id`),
  ADD UNIQUE KEY `userId` (`userId`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `errorlog`
--
ALTER TABLE `errorlog`
  MODIFY `_id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `feedback`
--
ALTER TABLE `feedback`
  MODIFY `_id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `generated_monthly_summary`
--
ALTER TABLE `generated_monthly_summary`
  MODIFY `_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=53;

--
-- AUTO_INCREMENT for table `pretrained_models`
--
ALTER TABLE `pretrained_models`
  MODIFY `_id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `products`
--
ALTER TABLE `products`
  MODIFY `_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT for table `product_ingredients`
--
ALTER TABLE `product_ingredients`
  MODIFY `_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=17;

--
-- AUTO_INCREMENT for table `uploadedreport`
--
ALTER TABLE `uploadedreport`
  MODIFY `_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=34;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=16;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `feedback`
--
ALTER TABLE `feedback`
  ADD CONSTRAINT `feedback_ibfk_1` FOREIGN KEY (`userId`) REFERENCES `users` (`userId`);

--
-- Constraints for table `generated_monthly_summary`
--
ALTER TABLE `generated_monthly_summary`
  ADD CONSTRAINT `generated_monthly_summary_ibfk_1` FOREIGN KEY (`userId`) REFERENCES `users` (`userId`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `pretrained_models`
--
ALTER TABLE `pretrained_models`
  ADD CONSTRAINT `pretrained_models_ibfk_1` FOREIGN KEY (`userId`) REFERENCES `users` (`userId`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `pretrained_models_ibfk_2` FOREIGN KEY (`reportId`) REFERENCES `uploadedreport` (`_id`);

--
-- Constraints for table `product_ingredients`
--
ALTER TABLE `product_ingredients`
  ADD CONSTRAINT `product_ingredients_ibfk_1` FOREIGN KEY (`_userId`) REFERENCES `users` (`userId`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `uploadedreport`
--
ALTER TABLE `uploadedreport`
  ADD CONSTRAINT `uploadedreport_ibfk_1` FOREIGN KEY (`userId`) REFERENCES `users` (`userId`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
